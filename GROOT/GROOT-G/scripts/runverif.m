load('startverif.mat')
        
for identremoveinvest=1
    if identremoveinvest==1
        identremoveinv=1;
        identremovename='InvestN';
    elseif identremoveinvest==2 % For speed, this capability is removed. If you are reading the code and want to include when invests occur, change the for loop to be identremoveinvest=1:2
        identremoveinv=0;
        identremovename='InvestY';
    end
    identremoveex=1;

    if identindivstorm==1
        for stmdn=identstormsdone%1:size(stormsdone,2)    
            %% %%%%%%%%%%%%%%%% %%
            %% Set Up the Storm %%
            %% %%%%%%%%%%%%%%%% %%
            for editsingle=1
		identtmp1=stormsdone{stmdn};
		identtmp2=yearsdone(stmdn,:);
		identtmp3=identtmp1(3:4);
		if strcmp(identtmp3,'AL')==1
		    identtmp4='l';
		elseif strcmp(identtmp3,'EP')==1
		    identtmp4='e';
		elseif strcmp(identtmp3,'WP')==1
		    identtmp4='w';
		elseif strcmp(identtmp3,'CP')==1
		    identtmp4='c';
		end
		addpath([identout,'scripts'])
		identbdecks=[identout,'bdeck/'];
		
		for bdecks=1
		    filename = [identbdecks,'b',lower(identtmp1(3:4)),identtmp1(1:2),yearsdone(stmdn,:),'.dat'];
		    [identhemi,DATEall,BASINall,NAMEall,CATall,LATall,POall,SE50all,LONall,PRESSall,SE64all,NE34all,RAD34all,SPEEDall,NE50all,RAD50all,SW34all,NE64all,RAD64all,SW50all,NW34all,RMWall,SW64all,NW50all,ROall,NW64all,SE34all,FHRall]=atcf(filename,1);
		end
		identn=unique(NAMEall,'rows','stable');
		identn=identn(end,:);
		identn=identn(isletter(identn));
		%% Set Name
		ident=[identtmp1(3:4),identtmp1(1:2),identtmp2];      % basin, ID, and year (e.g., AL092016)
		identn=[identn,identtmp2(3:4)];                       % NAMEYY (e.g., HERMINE16)
		identhwrf=[lower(identn(1:end-2)),lower(identtmp1(1:2)),lower(identtmp4)]; 
		stormsdone{stmdn}=identhwrf;

                % Model outputs at 3 h, but to compare errors to BT make 6 h!
                skip=2;                                                  % 6 h res | skip=1 is 3 h
                skiphr=6;                                                % 6 h res | skiphr=3 is 3 h res
                skiptick=2;                                              % 6 h res | skiptick=4 is 3 h res
                skipfct=4;                                               % 6 h res | skipfct=4 is still 3 h res

                % Save the config file for future reference
                disp(['Creating Start Parameters for ',identn])           
                identfold='';
                for i=1:size(identexp,1)
                    tmp=identexpshort{i};
                    if i==size(identexp,1)
                        identfold=strcat(identfold,tmp,'/');
                    else
                        identfold=strcat(identfold,tmp,'_');
                    end
                end   
                if ~exist([identout,'cases/',identfold], 'dir')                 % if this is the first time running these scripts, it will create the cases directory
                    mkdir([identout,'cases/',identfold])
                end
                copyfile('editverif.m',['cases/',identfold,identn,'_verif.m'])  % copy file into cases directory so if you need to run again, you'll already have it saved!

                % Save the output
                save([identout,'indivparams.mat'])                              % this file will be saved in the [identout] directory so it can be used when needed

                % Get common initalizations between all experiments
                for comm=1
                    cnt=1;
                    for tmp=1:size(identexpshort,1)
						identdr=dir([identgroovpr,identexp{tmp},'/atcf/',identtmp1,'*','atcfunix']); %composite changed
                        if isempty(identdr)==1
                            breakscript='yes';
                        else
                            identdr=unique({identdr.name});
                            for i=1:size(identdr,2)
                                tmp2=identdr{i};
                                tmp2=tmp2(end-28:end-19);
                                identdr1(cnt,:)=tmp2;
                                cnt=cnt+1;
                            end 
                        end
                    end    
                    A = str2num(identdr1);
                    [n, bin] = histc(A, unique(A));
                    multiple = find(n > size(identexpshort,1)-1);
                    index    = find(ismember(bin, multiple));
                    identinittimesunique=unique(identdr1(index,:),'rows');
                end

                % Identify which cycle numbers will be running
                if strcmp(identcycles,'all')==1
                    identcyclenum=1:size(identinittimesunique,1);
                else
                    for i=1:size(identcycles,1)
                        for ii=1:size(identinittimesunique,1)
                            if strcmp(identcycles(i,:),identinittimesunique(ii,:))==1
                                identcyclenum(i)=ii;
                            end
                        end
                    end
                end
            end
            if exist('breakscript','var')==1
                disp([identn,' does not exist across all experiments yet...moving to next storm'])
                clearvars -except identbasinmodel identsatobs identgraphicssat identsatid identsatname identindivch identchannel identindivstorm identcomposite identstormsdone identconvtype identconvcolors identconvlegend identns* identnewsub identgraphicsbycycle identgraphicsconv identconvid  stormsdone yearsdone identdiff identremovename identremoveex identremoveinv identcycles identmaxfhr identlevels identexp identexpshort identexpsigimp identexpsigimpshort identexpcolors identscrub identgroovpr identout identconv  
            else
                %% %%%%%%%%%%%% %%
                %% Setup script %%
                %% %%%%%%%%%%%% %%
                for setup=1
                    % Load the indivparams.mat that is set in editsingle.m
                    load('indivparams.mat')

                    % Add paths to scripts
                    addpath([identout,'scripts'])

                    identfold='';
                    for i=1:size(identexp,1)
                        tmp=identexpshort{i};
                        if i==size(identexp,1)
                            identfold=strcat(identfold,tmp,'/');
                        else
                            identfold=strcat(identfold,tmp,'_');
                        end
                    end

                    if ~exist([identout,'RESULTS/',identfold], 'dir')
                        disp('CREATING EXPERIMENT FOLDER')
                        mkdir([identout,'RESULTS/',identfold])
                    end

                    % Create Directory Structure
                    if ~exist([identout,'RESULTS/',identfold,'VERIFICATION/',identremovename,'/',ident(1:2),'/',identn], 'dir')
                        disp('CREATING DIRECTORY STRUCTURE')
                        mkdir([identout,'RESULTS/',identfold,'VERIFICATION/',identremovename,'/',ident(1:2),'/',identn])
                        mkdir([identout,'RESULTS/',identfold,'VERIFICATION/',identremovename,'/',ident(1:2),'/',identn,'/TRACKINT/'])
                        mkdir([identout,'RESULTS/',identfold,'VERIFICATION/',identremovename,'/',ident(1:2),'/',identn,'/TRACKINT/FULL/'])
                    else
                        disp('DIRECTORY STRUCTURE ALREADY EXISTS')
                    end
                    identtrackint=[identout,'RESULTS/',identfold,'VERIFICATION/',identremovename,'/',ident(1:2),'/',identn,'/TRACKINT'];
                    identbdecks=[identout,'bdeck/'];

                    % Get common initalizations between all experiments
                    cnt=1;
                     for tmp=1:size(identexpshort,1)
						identdr=dir([identgroovpr,identexp{tmp},'/atcf/',identtmp1,'*','atcfunix']); %composite changed
                        identdr=unique({identdr.name});
                        for i=1:size(identdr,2)
                            tmp2=identdr{i};
                            tmp2=tmp2(end-28:end-19);
                            identdr1(cnt,:)=tmp2;
                            cnt=cnt+1;
                        end        
                    end    
                    A = str2num(identdr1);
                    [n, bin] = histc(A, unique(A));
                    multiple = find(n > size(identexpshort,1)-1);
                    index    = find(ismember(bin, multiple));
                    identinittimesunique=unique(identdr1(index,:),'rows');

                    % Add package to read grb2 files to path
                    run([identout,'nctoolbox-1.1.3/setup_nctoolbox'])
                end

                %% %%%%%%%%% %%
                %% Get BDECK %%
                %% %%%%%%%%% %%
                for bdecks=1
                    filename = [identbdecks,'b',lower(ident),'.dat'];
                    [identhemi,DATEall,BASINall,NAMEall,CATall,LATall,POall,SE50all,LONall,PRESSall,SE64all,NE34all,RAD34all,SPEEDall,NE50all,RAD50all,SW34all,NE64all,RAD64all,SW50all,NW34all,RMWall,SW64all,NW50all,ROall,NW64all,SE34all,FHRall]=atcf(filename,1);
                    save([identout,'RESULTS/',identfold,'VERIFICATION/',identremovename,'/',ident(1:2),'/',identn,'/',identn,'_data.mat'])
                end

                %% %%%%%%%%%%%%%% %%
                %% Track of Storm %%
                %% %%%%%%%%%%%%%% %%
                for track=1
                    clear l cntexp
                    spPos=[0.11 0.13 0.75 0.75]; % arrange plots the same
                    set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                    hfig=figure;
                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                    ax1=subplot(3,4,[1:8]);
                    hold on

                    load coastlines
                    for i=1:size(CATall,1)
                        if strcmp(CATall(i,:),'WV')==1 || strcmp(CATall(i,:),'EX')==1 || strcmp(CATall(i,:),'LO')==1 || strcmp(CATall(i,:),'DB')==1 || strcmp(CATall(i,:),'SD')==1 || strcmp(CATall(i,:),'SS')==1
                            SPEEDall(i)=-1;
                        end
                    end         
                    h=fill([180,-180,-180,180],[-90,-90,90,90],[.5 .8 1]);
                    hold on
                    geoshow('borders.shp','FaceColor',[0.9 0.9 0.9]);
                    hold on
                    states = shaperead('usastatehi', 'UseGeoCoords', true);
                    geoshow(states,'FaceColor',[0.9 0.9 0.9]);
                    tmpminlat=min(LATall(:));
                    tmpmaxlat=max(LATall(:));
                    tmpminlon=min(LONall(:));
                    tmpmaxlon=max(LONall(:));
                    tmplat=tmpmaxlat+5-(tmpminlat-5);
                    tmplon=tmpmaxlon+5-(tmpminlon-5);
                    difftmp=tmplat-tmplon;
                    if difftmp<0 % longitude is wider than latitude
                        diffmult=tmplon/2;
                        diffmid=(tmpmaxlat+5+(tmpminlat-5))/2;
                        xlim([tmpminlon-5 tmpmaxlon+5])
                        x_dist=(tmpminlon-5)-(tmpmaxlon+5);
                        x_mean=((tmpminlon-5)+(tmpmaxlon+5))/2;
                        ylim([diffmid-diffmult diffmid+diffmult])
                        y_dist=(diffmid-diffmult)-(diffmid+diffmult);
                        y_mean=((diffmid-diffmult)-(diffmid+diffmult))/2;
                    else         % latitude is wider than longitude
                        diffmult=tmplat/2;
                        diffmid=(tmpmaxlon+5+(tmpminlon-5))/2;
                        xlim([tmpminlon-diffmult tmpmaxlon+diffmult])
                        x_dist=(tmpminlon-diffmult)-(tmpmaxlon+diffmult);
                        x_mean=((tmpminlon-diffmult)+(tmpmaxlon+diffmult))/2;
                        ylim([tmpminlat-5 tmpmaxlat+5])
                        y_dist=(tmpminlat-5)-(tmpmaxlat+5);
                        y_mean=((tmpminlat-5)+(tmpmaxlat+5))/2;
                    end
                    c_adj=cosd(y_mean);
                    c_dist=abs(x_dist*c_adj/2);
                    c_mid=x_mean;
                    xlim([c_mid-c_dist-5 c_mid+c_dist+5])
                    hold on
                    xlabel('Longitude','fontsize',20)
                    ylabel('Latitude','fontsize',20)                                   
                    set(gca,'fontsize',18)  
                    set(gca,'xtick',-180:10:180)
                    set(gca,'ytick',-90:5:90)
                    plot(LONall,LATall,'-k','linewidth',4);
                    hold on
                    azavcm=jet(7);
                    for i=1:length(LONall)
                        if SPEEDall(i) > 0 && SPEEDall(i) < 34 
                            plot(LONall(i),LATall(i),'.','color',azavcm(2,:),'markersize',12);            
                        elseif SPEEDall(i) > 33 && SPEEDall(i) < 65 
                            plot(LONall(i),LATall(i),'.','color',azavcm(3,:),'markersize',12);            
                        elseif SPEEDall(i) > 64 && SPEEDall(i) < 84 
                            plot(LONall(i),LATall(i),'.','color',azavcm(4,:),'markersize',12);            
                        elseif SPEEDall(i) > 83 && SPEEDall(i) < 96 
                            plot(LONall(i),LATall(i),'.','color',azavcm(5,:),'markersize',12);            
                        elseif SPEEDall(i) > 95 && SPEEDall(i) < 114 
                            plot(LONall(i),LATall(i),'.','color',azavcm(6,:),'markersize',12);            
                        elseif SPEEDall(i) >113 && SPEEDall(i) < 135 
                            plot(LONall(i),LATall(i),'.','color',azavcm(7,:),'markersize',12);           
                        elseif SPEEDall(i) > 134
                            plot(LONall(i),LATall(i),'.','color','m','markersize',12); 
                        elseif strcmp(CATall(i,:),'LO')==1 || strcmp(CATall(i,:),'DB')==1 || strcmp(CATall(i,:),'WV')==1
                            plot(LONall(i),LATall(i),'.','color',[.5 .5 .5],'markersize',12);             
                        elseif strcmp(CATall(i,:),'SD')==1 || strcmp(CATall(i,:),'SS')==1
                            plot(LONall(i),LATall(i),'s','color',[.5 .5 .5],'markersize',4,'markerfacecolor',[.5 .5 .5]);                 
                        elseif strcmp(CATall(i,:),'EX')==1
                            plot(LONall(i),LATall(i),'d','color',[.5 .5 .5],'markersize',3,'markerfacecolor',[.5 .5 .5]);                 
                        end
                    end
                    for i=1:length(LONall)
                        if strcmp(DATEall(i,9:10),'00')==1
                            plot(LONall(i),LATall(i),'o','markerfacecolor','w','markeredgecolor','k','markersize',6); 
                        end
                    end                     
                    set(gca,'plotboxaspectratio',[1 1 1])
                    set(gcf, 'InvertHardcopy', 'off')             
                    set(gca,'fontsize',20)
                    box on
                    set(gcf,'Units','inches');
                    a1Pos = get(gca,'Position');
                    set(gcf, 'InvertHardcopy', 'off')
                    set(gcf,'Units','inches');
                    screenposition = get(gcf,'Position');
                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                    set(gcf, 'InvertHardcopy', 'off')
                    text(0,1.065,['\textbf{Track \& Intensity}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                    text(0,1.03,['\textbf{DATES: ',DATEall(1,:),'$\mathbf{-}$',DATEall(end,:),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                    text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                    ax=gca;
                    box on
                    set(ax, 'Layer', 'bottom')
                    ax.LineWidth=1; 
                    ax=gca;
                    box on
                    set(ax, 'Layer', 'top')
                    ax.LineWidth=1; 
                    l(1)=plot(-200,-100,'o','markerfacecolor','w','markeredgecolor','k','markersize',8); 
                    l(2)=plot(-200,-100,'.','color',[.5 .5 .5],'markersize',25); 
                    l(3)=plot(-200,-100,'s','markerfacecolor',[.5 .5 .5],'markeredgecolor',[.5 .5 .5],'markersize',8); 
                    l(4)=plot(-200,-100,'d','markerfacecolor',[.5 .5 .5],'markeredgecolor',[.5 .5 .5],'markersize',6); 
                    l(5)=plot(-200,-100,'.','color',azavcm(2,:),'markersize',25);
                    l(6)=plot(-200,-100,'.','color',azavcm(3,:),'markersize',25);
                    l(7)=plot(-200,-100,'.','color',azavcm(4,:),'markersize',25);
                    l(8)=plot(-200,-100,'.','color',azavcm(5,:),'markersize',25);
                    l(9)=plot(-200,-100,'.','color',azavcm(6,:),'markersize',25);
                    l(10)=plot(-200,-100,'.','color',azavcm(7,:),'markersize',25);
                    l(11)=plot(-200,-100,'.','color','m','markersize',25);
                    legend off
                    lh=legend(l,'0000 UTC','WV/DB/LO','SD/SS','EX','TD','TS','C1','C2','C3','C4','C5','orientation','vertical');
                    lh.FontSize=10;     
                    set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                    f = getframe(hfig);
                    imwrite(f.cdata,[identtrackint,'/',identn,'_track.png'],'png');    
                end

                %% %%%%%%%%%%%%%%%%%%%% %%
                %% Plot Conventonal Obs %% 
                %% %%%%%%%%%%%%%%%%%%%% %%
                %% Since Basin-Scale, must get BT and common data for ALL storms run
                for drops=1
                    if identconv==1
                        clear identdrops
                        identinnerdrops=0;
                        identinnergaledrops=0;
                        identouterdrops=0;
                        identdenmap=zeros(10,3);
                        identdenmap_stm=zeros(10,3);
                        identalldrops=0;
                        identuniquedrops=[];
                        identassimilateddrops=[];
                        identassimilateddrops_stm=[];
                        identinnerdrops_stm=0;
                        identinnergaledrops_stm=0;
                        identouterdrops_stm=0;
                        dropsall=[];
                        identbasinnameall=[];
                        alldropsstm=[];
                        alldenmapstm=[];
                        %% Individual Basin-Scale Storm/Init Conv
                        for identloop=1:size(identinittimesunique,1)
                            % What storms are run in the basin at this init time?   
                            identdr=dir([identgroovpr,'obsall/',identexpshort{1},'/*',identinittimesunique(identloop,:),'*']);
                            identdr=unique({identdr.name});
                            if isempty(identdr)==1
                                identinittimesunique(identloop,:)=[];
                            else
                                for i=1:size(identdr,2)
                                    identdrops=identdr{i};
                                    if strcmp(identdrops(end-27),'l')==1
                                        identdropsdat(i,:)=['al',identdrops(end-29:end-28)];
                                    elseif strcmp(identdrops(end-27),'e')==1
                                        identdropsdat(i,:)=['ep',identdrops(end-29:end-28)];
                                    elseif strcmp(identdrops(end-27),'w')==1
                                        identdropsdat(i,:)=['wp',identdrops(end-29:end-28)];
                                    elseif strcmp(identdrops(end-27),'c')==1
                                        identdropsdat(i,:)=['cp',identdrops(end-29:end-28)];
                                    end
                                    identbasin{i}=identdrops(1:end-27);
                                    identbasinname{i}=[upper(identdrops(end-29:end-27)),' (',upper(identdrops(1)),identdrops(2:end-30),')'];
                                end        

                                % Get the TC VITALS for each storm
                                for i=1:size(identdropsdat,1)                                
                                    filename = [identgroovpr,'tcvitals/',identbasin{i},'.',identinittimesunique(identloop,:),'.storm_vit'];                                                                               
                                    delimiter = ' ';
                                    formatSpec = '%3s%5s%5s%14s%5s%5s%6s%4s%4s%5s%5s%5s%3s%4s%5s%5s%5s%5s%2s%5s%5s%5s%5s%3s%5s%6s%5s%5s%5s%s%[^\n\r]';
                                    fileID = fopen(filename,'r');
                                    dataArray = textscan(fileID, formatSpec, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string',  'ReturnOnError', false);
                                    fclose(fileID);

                                    tcv_lat=dataArray{6};
                                    tcv_lat=tcv_lat{1};
                                    STMLAT(i)=str2num(tcv_lat(1:end-1))/10;

                                    tcv_lon=dataArray{7};
                                    tcv_lon=tcv_lon{1};
                                    tcv_lonew(i)=tcv_lon(end);
                                    tcv_lon=str2num(tcv_lon(1:end-1))/10;

                                    if strcmp(tcv_lonew(i),'W')==1
                                        STMLON(i)=360-tcv_lon;
                                    else
                                        STMLON(i)=tcv_lon;
                                    end

                                    tcv_dir=dataArray{8};
                                    tcv_dir=str2num(tcv_dir{1});
                                    tcv_spd=dataArray{9};
                                    tcv_spd=str2num(tcv_spd{1})/10;

                                    DXDT=tcv_spd.*sin(tcv_dir*pi/180).*3.6;
                                    DDXDT(i) = -1.*DXDT./(111.*cos(STMLAT(i)*pi/180));
                                    DYDT=tcv_spd.*cos(tcv_dir*pi/180).*3.6;
                                    DDYDT(i)=DYDT./111;
                                    if strcmp(tcv_lonew(i),'W')==1
                                        RLON(i)=360 - STMLON(i); %% puts it back to what it was (no neg for W)
                                    else
                                        RLON(i)=tcv_lon; %% keeps it what it was - valid for 0-360 and -180-180
                                    end
                                end

                                % Get the conv for each storm/experiment
                                for j=1:size(identexp,1)
                                    for i=1:size(identdr,2)
                                    %% Initialize variables.
                                    filename=[identgroovpr,'obsall/',identexpshort{j},'/',identdr{i}];
                                    formatSpec = '%10C%9f%13f%16f%16f%16f%16f%f%[^\n\r]';
                                    fileID = fopen(filename,'r');
                                    dataArray = textscan(fileID, formatSpec, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string',  'ReturnOnError', false);
                                    fclose(fileID);
                                    drops = table(dataArray{1:end-1});
                                    clearvars filename formatSpec fileID dataArray ans;
                                    droplat=drops{:,4};
                                    droplon=drops{:,5};
                                    if strcmp(tcv_lonew(i),'W')==1
                                        droplon=360-droplon; % puts it into -180-180 coord without the sign
                                    else
                                        droplon=droplon; % leave it be
                                    end
                                    droppres=drops{:,6};
                                    dropdhr=drops{:,7};
                                    dropinc=drops{:,8};
                                    droptype=drops{:,3};

                                    % Add distance away from center at each pressure level
                                    if isnan(droplat)==1
                                        dropaz=NaN;
                                        dropan=NaN;
                                        xtob=NaN;
                                        ytob=NaN;
                                    else
                                        for drp=1:size(droplat,1)
                                            xtob(drp)=round((RLON(i)+dropdhr(drp).*DDXDT(i))*10)/10;
                                            ytob(drp)=round((STMLAT(i)+dropdhr(drp).*DDYDT(i))*10)/10;
                                            if strcmp(tcv_lonew(i),'W')==1
                                                dropaz(drp)=abs(deg2km(distance('gc',ytob(drp),-1*xtob(drp),droplat(drp),-1*droplon(drp))));
                                                [droptmp(drp),dropan(drp)]=distance('gc',ytob(drp),-1*xtob(drp),droplat(drp),-1*droplon(drp));
                                            else
                                                dropaz(drp)=abs(deg2km(distance('gc',ytob(drp),xtob(drp),droplat(drp),droplon(drp))));
                                                [droptmp(drp),dropan(drp)]=distance('gc',ytob(drp),xtob(drp),droplat(drp),droplon(drp));
                                            end
                                        end
                                    end    

                                    % Make Full List
                                    if strcmp(tcv_lonew(i),'W')==1
                                        tmpdrops=[-1*droplon droplat droppres dropinc dropaz' dropan' -1*xtob' ytob' droptype];
                                        if j==size(identexp,1)
                                            RLON(i)=-1*RLON(i);
                                        end
                                    else
                                        tmpdrops=[droplon droplat droppres dropinc dropaz' dropan' xtob' ytob' droptype];
                                    end
                                    tmpdrops(tmpdrops(:,4)<=0)=NaN;
                                    tmpdrops(any(isnan(tmpdrops), 2), :) = [];                

                                    alldrops01{i}=tmpdrops;
                                    clear dropaz tmp tmpdrops dropan xtob ytob
                                    end
                                    alldrops{j}=alldrops01;
                                    clear alldrops01
                                end

                                % Generate Graphics or Fields for Later
                                if identgraphicsconv==1
                                    % Plot the basin-wide view of all conv for each experiment
                                    for loop1=1:size(identexp,1)
                                        spPos=[0.11 0.13 0.75 0.75]; % arrange plots the same
                                        set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                        hfig=figure;
                                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                        ax1=subplot(3,4,[1:8]);
                                        h=fill([360,-360,-360,360],[-90,-90,90,90],[.5 .8 1]);
                                        hold on
                                        geoshow('borders.shp','FaceColor',[0.9 0.9 0.9]);
                                        hold on
                                        states = shaperead('usastatehi', 'UseGeoCoords', true);
                                        geoshow(states,'FaceColor',[0.9 0.9 0.9]);                                      
                                        xlabel('Longitude','fontsize',20)
                                        ylabel('Latitude','fontsize',20)                                   
                                        set(gca,'fontsize',20)
                                        axis equal
                                        axis([-180 180 -90 90])
                                        numdrops=0;
                                        clear l lsz
                                        for loop=1:size(identdr,2)
                                            viscircles([RLON(loop) STMLAT(loop)],500/111.11,'Color',[.5 .5 .5],'linewidth',.5,'linestyle','--','EnhanceVisibility',0);
                                            viscircles([RLON(loop) STMLAT(loop)],1000/111.11,'Color',[.5 .5 .5],'linewidth',.5,'linestyle','--','EnhanceVisibility',0);
                                            hold on
                                            alldrops0=alldrops{loop1};
                                            alldrops0=alldrops0{loop};
                                            if sum(~isnan(alldrops0(:)))==0
                                                if size(identconvtype,2)>1 % there are subtypes to this conventional observation!
                                                    for sot=1:size(identconvtype,2)
                                                         l(sot)=plot(-360,-360,'o','markerfacecolor',identconvcolors(sot,:),'markeredgecolor',identconvcolors(sot,:),'markersize',2);
                                                         lsz(sot)=0;
                                                    end
                                                else % there are no subtypes to this conventional bservation!
                                                    l(1)=plot(-360,-360,'o','markerfacecolor','k','markersize',2,'markeredgecolor','k');
                                                end
                                            else                       
                                                if size(identconvtype,2)>1 % there are subtypes to this conventional observation!
                                                    for sot=1:size(identconvtype,2)
                                                         l(sot)=plot(alldrops0((alldrops0(:,9)==identconvtype(sot)),1),alldrops0((alldrops0(:,9)==identconvtype(sot)),2),'o','markerfacecolor',identconvcolors(sot,:),'markeredgecolor',identconvcolors(sot,:),'markersize',2);
                                                         lsz(sot)=size(alldrops0((alldrops0(:,9)==identconvtype(sot)),1),1);
                                                    end
                                                else % there are no subtypes to this conventional bservation!
                                                    l(1)=plot(alldrops0(:,1),alldrops0(:,2),'o','markerfacecolor','k','markersize',2,'markeredgecolor','k');
                                                end
                                                numdrops=size(alldrops0,1);
                                            end       
                                            lloop=identbasin{loop};
                                            text(RLON(loop),STMLAT(loop),upper(lloop(end-2:end)),'horizontalalignment','center','fontsize',10,'color',[.5 .5 .5])
                                        end
                                        %clear l
                                        if size(identconvtype,2)>1
                                            for sot=1:size(identconvtype,2)
                                                identlegendconv(sot)={[identconvlegend{sot} ' (',num2str(lsz(sot)),')']};
                                            end
                                            l=legend(l,identlegendconv,'location','northeast');
                                        else
                                            l=legend(l,['Assimilated Observations'],'location','northeast');
                                        end
                                        l.FontSize=10;
                                        hold off                        
                                        set(gca,'xtick',-180:60:180)
                                        set(gca,'ytick',-90:30:90)
                                        set(gca,'plotboxaspectratio',[1 1 1])
                                        set(gcf, 'InvertHardcopy', 'off')
                                        set(gcf,'Units','inches');
                                        screenposition = get(gcf,'Position');
                                        set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                        set(gcf, 'InvertHardcopy', 'off')
                                        text(0,1.055,['\textbf{INIT: ',identinittimesunique(identloop,:),' $\mid$ N=',num2str(numdrops),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                        text(0,1.11,['\textbf{Assimilated ',identconvid,' Observations}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                        text(1,1.055,['\textbf{',identexpshort{loop1},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(loop1,:),'units','normalized');
                                        ax=gca;
                                        box on
                                        set(ax, 'Layer', 'top')
                                        ax.LineWidth=1; 
                                        set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                        f = getframe(hfig);
                                        imwrite(f.cdata,[identtrackint,'/conv_basin_',identinittimesunique(identloop,:),'_',identexp{loop1},'.png'],'png');
                                        close all
                                    end
                                    % Plot the location of all conv at all levels that are included, centered on storm
                                    for loop1=1:size(identexp,1)
                                        for loop=1:size(identdr,2)
                                            ttt=identdr{loop};
                                            if strcmp(ttt(1:end-27),identhwrf)==0
                                            else
                                                set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                                hfig=figure;
                                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                                ax1=subplot(3,4,[1:8]);
                                                h=fill([200,-200,-200,200],[-90,-90,90,90],[.5 .8 1]);
                                                hold on  
                                                geoshow('borders.shp','FaceColor',[0.9 0.9 0.9]);
                                                hold on
                                                states = shaperead('usastatehi', 'UseGeoCoords', true);
                                                geoshow(states,'FaceColor',[0.9 0.9 0.9]);
                                                xlabel('Longitude','fontsize',20)
                                                ylabel('Latitude','fontsize',20)                                   
                                                set(gca,'fontsize',20)
                                                fhr=1;
                                                axis([RLON(loop)-10 RLON(loop)+10 STMLAT(loop)-10 STMLAT(loop)+10])
                                                viscircles([RLON(loop) STMLAT(loop)],75/111.11,'Color',[.5 .5 .5 ],'linewidth',.5,'linestyle','--','EnhanceVisibility',0);
                                                viscircles([RLON(loop) STMLAT(loop)],250/111.11,'Color',[.5 .5 .5 ],'linewidth',.5,'linestyle','--','EnhanceVisibility',0);
                                                viscircles([RLON(loop) STMLAT(loop)],500/111.11,'Color',[.5 .5 .5 ],'linewidth',.5,'linestyle','--','EnhanceVisibility',0);
                                                viscircles([RLON(loop) STMLAT(loop)],1000/111.11,'Color',[.5 .5 .5 ],'linewidth',.5,'linestyle','--','EnhanceVisibility',0);
                                                hold on
                                                clear l
                                                plot(RLON(loop),STMLAT(loop),'o','markerfacecolor',[.5 .5 .5],'markersize',2,'markeredgecolor',[.5 .5 .5]);
                                                 alldrops0=alldrops{loop1};
                                                 alldrops0=alldrops0{loop};  
                                                 numdrops=0;
                                                 clear l lsz
                                                 if sum(~isnan(alldrops0(:)))==0
                                                     if size(identconvtype,2)>1 % there are subtypes to this conventional observation!
                                                        for sot=1:size(identconvtype,2)
                                                             l(sot)=plot(-360,-360,'o','markerfacecolor',identconvcolors(sot,:),'markeredgecolor',identconvcolors(sot,:),'markersize',2);
                                                             lsz(sot)=0;
                                                        end
                                                    else % there are no subtypes to this conventional bservation!
                                                        l(1)=plot(-360,-360,'o','markerfacecolor','k','markersize',2,'markeredgecolor','k');
                                                    end
                                                 else                        
                                                        if size(identconvtype,2)>1 % there are subtypes to this conventional observation!
                                                            for sot=1:size(identconvtype,2)
                                                                 l(sot)=plot(alldrops0((alldrops0(:,9)==identconvtype(sot)),1),alldrops0((alldrops0(:,9)==identconvtype(sot)),2),'o','markerfacecolor',identconvcolors(sot,:),'markeredgecolor',identconvcolors(sot,:),'markersize',2);
                                                                 lsz(sot)=size(alldrops0((alldrops0(:,9)==identconvtype(sot)),1),1);
                                                            end
                                                        else % there are no subtypes to this conventional bservation!
                                                            l(1)=plot(alldrops0(drp,1),alldrops0(drp,2),'o','markerfacecolor','k','markersize',2,'markeredgecolor','k');
                                                        end
                                                        numdrops=size(alldrops0,1);
                                                 end                      
                                                text(.5,.468,'75 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5 ])
                                                text(.5,.39,'250 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5 ])
                                                text(.5,.278,'500 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5 ])
                                                text(.5,.05,'1000 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5 ])
                                                %clear l
                                                if size(identconvtype,2)>1
                                                    for sot=1:size(identconvtype,2)
                                                        identlegendconv(sot)={[identconvlegend{sot} ' (',num2str(lsz(sot)),')']};
                                                    end
                                                    l=legend(l,identlegendconv,'location','northeast');
                                                else
                                                    l=legend(l,['Assimilated Observations'],'location','northeast');
                                                end
                                                l.FontSize=10;
                                                hold off
                                                set(gca,'plotboxaspectratio',[1 1 1])
                                                set(gcf, 'InvertHardcopy', 'off')
                                                set(gcf,'Units','inches');
                                                screenposition = get(gcf,'Position');
                                                set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                set(gcf, 'InvertHardcopy', 'off')
                                                text(0,1.03,['\textbf{INIT: ',identinittimesunique(identloop,:),' $\mid$ N=',num2str(numdrops),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                text(0,1.065,['\textbf{Assimilated ',identconvid,' Observations}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                text(1,1.03,['\textbf{',upper(identbasinname{loop}),'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                text(1,1.065,['\textbf{',identexpshort{loop1},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(loop1,:),'units','normalized');                    
                                                ax=gca;
                                                box on
                                                set(ax, 'Layer', 'top')
                                                ax.LineWidth=1; 
                                                set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                                f = getframe(hfig);
                                                imwrite(f.cdata,[identtrackint,'/conv_plan_',identinittimesunique(identloop,:),'_',identexpshort{loop1},'.png'],'png');
                                                close all 

                                                % Denmap for Subtypes
                                                if size(identconvtype,2)>1
                                                    for sot=1:size(identconvtype,2)
                                                         % Density Map
                                                         pall=squeeze(alldrops0((alldrops0(:,9)==identconvtype(sot)),3,:));
                                                         dall=squeeze(alldrops0((alldrops0(:,9)==identconvtype(sot)),5,:));                                
                                                         places=[];
                                                         denmapall=[];
                                                         for drp=1
                                                             %group pressures
                                                             data = pall(:,drp);
                                                             edges = 0:100:1100;
                                                             Y1 = discretize(data,edges);
                                                             %group radial bins
                                                             data=dall(:,drp);
                                                             edges=[0,75,250,10000];
                                                             Y2 = discretize(data,edges);
                                                             places=[Y1 Y2];
                                                         end                        
                                                         for k=1
                                                             denmap=nan(11,3);
                                                             places0=places;
                                                             for i=1:size(places0,1)
                                                                 if isnan(places0(i,1))==1 || isnan(places0(i,2))==1
                                                                 else
                                                                     denmap(places0(i,1),places0(i,2))=nansum([denmap(places0(i,1),places0(i,2)),1]);
                                                                 end
                                                             end
                                                             denmapall=denmap;
                                                         end
                                                         denmapall(isnan(denmapall))=0;                
                                                         denmap=nan(11,3);
                                                         denmap=nansum(denmapall,3);                
                                                        set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                                        hfig=figure;
                                                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                                        ax1=subplot(3,4,[1:8]);
                                                        imagesc((denmap))
                                                        xlabel('','fontsize',20)
                                                        ylabel('Pressure (hPa)','fontsize',20)                                   
                                                        set(gca,'fontsize',20)
                                                        set(gca,'xtick',1:3)
                                                        set(gca,'xticklabel',{'<75 km','75-250 km','>250 km'});
                                                        set(gca,'ytick',0.5:1:12)
                                                        set(gca,'yticklabel',{'0','100','200','300','400','500','600','700','800','900','1000','1100'});
                                                        colorbar
                                                        caxis([0 50])
                                                        colormap(flipud(gray(25)))
                                                        set(gca, 'YGrid', 'on', 'XGrid', 'off')
                                                        hold on
                                                        plot(repmat(1.5,1,13),0:12,'k')
                                                        plot(repmat(2.5,1,13),0:12,'k')
                                                        set(gca,'plotboxaspectratio',[1 1 1])
                                                        set(gcf, 'InvertHardcopy', 'off')
                                                        set(gcf,'Units','inches');
                                                        screenposition = get(gcf,'Position');
                                                        set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                        set(gcf, 'InvertHardcopy', 'off')
                                                        text(0,1.03,['\textbf{INIT: ',identinittimesunique(identloop,:),' $\mid$ N=',num2str(sum(denmap(:))),'/',num2str(numdrops),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                        text(0,1.065,['\textbf{Assimilated ',identconvid,' Observations}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                        text(1,1.03,['\textbf{',upper(identbasinname{loop}),'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                        text(1,1.065,['\textbf{',identexpshort{loop1},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(loop1,:),'units','normalized');
                                                        for i=1:3
                                                            for j=1:11
                                                                if denmap(j,i)>=40
                                                                    text(i,j, num2str(denmap(j,i)), 'color','w','HorizontalAlignment', 'Center','fontsize',16)
                                                                else
                                                                    text(i,j, num2str(denmap(j,i)), 'HorizontalAlignment', 'Center','fontsize',16)
                                                                end
                                                            end
                                                        end        
                                                        text(0,-.065,['(Tot. #)'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');        
                                                        text(.168,-.065,['(',num2str(sum(denmap(:,1))),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');
                                                        text(.5,-.065,['(',num2str(sum(denmap(:,2))),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');
                                                        text(.832,-.065,['(',num2str(sum(denmap(:,3))),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');        
                                                        text(.5,-.1,['Distance from Storm Center'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',22,'interpreter','tex','color','k','units','normalized');
                                                        ax=gca;
                                                        box on
                                                        set(ax, 'Layer', 'top')
                                                        ax.LineWidth=1; 
                                                        set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                                        f = getframe(hfig);
                                                        imwrite(f.cdata,[identtrackint,'/conv_az_',identinittimesunique(identloop,:),'_',identexpshort{loop1},'_type',num2str(identconvtype(sot)),'.png'],'png');
                                                        close all
                                                        alldenmap_t(loop1,sot)={denmapall};
                                                    end                             
                                                end

                                                 % Full Density Map
                                                 pall=squeeze(alldrops0(:,3,:));
                                                 dall=squeeze(alldrops0(:,5,:));                                
                                                 places=[];
                                                 denmapall=[];
                                                 for drp=1
                                                     %group pressures
                                                     data = pall(:,drp);
                                                     edges = 0:100:1100;
                                                     Y1 = discretize(data,edges);
                                                     %group radial bins
                                                     data=dall(:,drp);
                                                     edges=[0,75,250,10000];
                                                     Y2 = discretize(data,edges);
                                                     places=[Y1 Y2];
                                                 end                        
                                                 for k=1
                                                     denmap=nan(11,3);
                                                     places0=places;
                                                     for i=1:size(places0,1)
                                                         if isnan(places0(i,1))==1 || isnan(places0(i,2))==1
                                                         else
                                                             denmap(places0(i,1),places0(i,2))=nansum([denmap(places0(i,1),places0(i,2)),1]);
                                                         end
                                                     end
                                                     denmapall=denmap;
                                                 end
                                                 denmapall(isnan(denmapall))=0;                
                                                 denmap=nan(11,3);
                                                 denmap=nansum(denmapall,3);                
                                                set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                                hfig=figure;
                                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                                ax1=subplot(3,4,[1:8]);
                                                imagesc((denmap))
                                                xlabel('','fontsize',20)
                                                ylabel('Pressure (hPa)','fontsize',20)                                   
                                                set(gca,'fontsize',20)
                                                set(gca,'xtick',1:3)
                                                set(gca,'xticklabel',{'<75 km','75-250 km','>250 km'});
                                                set(gca,'ytick',0.5:1:12)
                                                set(gca,'yticklabel',{'0','100','200','300','400','500','600','700','800','900','1000','1100'});
                                                colorbar
                                                caxis([0 50])
                                                colormap(flipud(gray(25)))
                                                set(gca, 'YGrid', 'on', 'XGrid', 'off')
                                                hold on
                                                plot(repmat(1.5,1,13),0:12,'k')
                                                plot(repmat(2.5,1,13),0:12,'k')
                                                set(gca,'plotboxaspectratio',[1 1 1])
                                                set(gcf, 'InvertHardcopy', 'off')
                                                set(gcf,'Units','inches');
                                                screenposition = get(gcf,'Position');
                                                set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                set(gcf, 'InvertHardcopy', 'off')
                                                text(0,1.03,['\textbf{INIT: ',identinittimesunique(identloop,:),' $\mid$ N=',num2str(numdrops),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                text(0,1.065,['\textbf{Assimilated ',identconvid,' Observations}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                text(1,1.03,['\textbf{',upper(identbasinname{loop}),'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                text(1,1.065,['\textbf{',identexpshort{loop1},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(loop1,:),'units','normalized');
                                                for i=1:3
                                                    for j=1:11
                                                        if denmap(j,i)>=40
                                                            text(i,j, num2str(denmap(j,i)), 'color','w','HorizontalAlignment', 'Center','fontsize',16)
                                                        else
                                                            text(i,j, num2str(denmap(j,i)), 'HorizontalAlignment', 'Center','fontsize',16)
                                                        end
                                                    end
                                                end        
                                                text(0,-.065,['(Tot. #)'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');        
                                                text(.168,-.065,['(',num2str(sum(denmap(:,1))),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');
                                                text(.5,-.065,['(',num2str(sum(denmap(:,2))),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');
                                                text(.832,-.065,['(',num2str(sum(denmap(:,3))),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');        
                                                text(.5,-.1,['Distance from Storm Center'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',22,'interpreter','tex','color','k','units','normalized');
                                                ax=gca;
                                                box on
                                                set(ax, 'Layer', 'top')
                                                ax.LineWidth=1; 
                                                set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                                f = getframe(hfig);
                                                imwrite(f.cdata,[identtrackint,'/conv_az_',identinittimesunique(identloop,:),'_',identexpshort{loop1},'.png'],'png');
                                                close all                                             
                                                 alldenmap(loop1)={denmapall}; 
                                                 RLON2=RLON(loop);
                                                 STMLAT2=STMLAT(loop);
                                                 identbasinname2={identbasinname{loop}};
                                                 alldrops2{loop1}={alldrops0};                
                                            end
                                        end
                                    end
                                else
                                    spPos=[0.11 0.13 0.75 0.75]; % arrange plots the same   
                                    for loop1=1:size(identexp,1)
                                        for loop=1:size(identdr,2)
                                         ttt=identdr{loop};
                                            if strcmp(ttt(1:end-27),identhwrf)==0
                                            else
                                                 alldrops0=alldrops{loop1};
                                                 alldrops0=alldrops0{loop};  
                                                 numdrops=0;
                                                 if sum(~isnan(alldrops0(:)))==0
                                                 else                        
                                                     for drp=1:size(alldrops0,1)
                                                             %l(1)=plot(alldrops0(drp,1),alldrops0(drp,2),'o','markerfacecolor','k','markersize',2,'markeredgecolor','k');
                                                             numdrops=numdrops+1;
                                                     end
                                                 end


                                                %% Denmap for Subtypes
                                                if size(identconvtype,2)>1
                                                    for sot=1:size(identconvtype,2)
                                                         % Density Map
                                                         pall=squeeze(alldrops0((alldrops0(:,9)==identconvtype(sot)),3,:));
                                                         dall=squeeze(alldrops0((alldrops0(:,9)==identconvtype(sot)),5,:));                                
                                                         places=[];
                                                         denmapall=[];
                                                         for drp=1
                                                             %group pressures
                                                             data = pall(:,drp);
                                                             edges = 0:100:1100;
                                                             Y1 = discretize(data,edges);
                                                             %group radial bins
                                                             data=dall(:,drp);
                                                             edges=[0,75,250,10000];
                                                             Y2 = discretize(data,edges);
                                                             places=[Y1 Y2];
                                                         end                        
                                                         for k=1
                                                             denmap=nan(11,3);
                                                             places0=places;
                                                             for i=1:size(places0,1)
                                                                 if isnan(places0(i,1))==1 || isnan(places0(i,2))==1
                                                                 else
                                                                     denmap(places0(i,1),places0(i,2))=nansum([denmap(places0(i,1),places0(i,2)),1]);
                                                                 end
                                                             end
                                                             denmapall=denmap;
                                                         end
                                                         denmapall(isnan(denmapall))=0;                
                                                         denmap=nan(11,3);
                                                         denmap=nansum(denmapall,3);                                                       
                                                         alldenmap_t(loop1,sot)={denmapall};
                                                    end                             
                                                end


                                                 %% Full Density Map
                                                 pall=squeeze(alldrops0(:,3,:));
                                                 dall=squeeze(alldrops0(:,5,:));                                
                                                 places=[];
                                                 denmapall=[];
                                                 for drp=1
                                                     % group pressures
                                                     data = pall(:,drp);
                                                     edges = 0:100:1100;
                                                     Y1 = discretize(data,edges);
                                                     % group radial bins
                                                     data=dall(:,drp);
                                                     edges=[0,75,250,10000];
                                                     Y2 = discretize(data,edges);
                                                     places=[Y1 Y2];
                                                 end                

                                                 for k=1
                                                     denmap=nan(11,3);
                                                     places0=places;
                                                     for i=1:size(places0,1)
                                                         if isnan(places0(i,1))==1 || isnan(places0(i,2))==1
                                                         else
                                                             denmap(places0(i,1),places0(i,2))=nansum([denmap(places0(i,1),places0(i,2)),1]);
                                                         end
                                                     end
                                                     denmapall=denmap;
                                                 end
                                                 denmapall(isnan(denmapall))=0;                
                                                 denmap=nan(11,3);
                                                 denmap=nansum(denmapall,3);                       
                                                 alldenmap(loop1)={denmapall}; 
                                                 RLON2=RLON(loop);
                                                 STMLAT2=STMLAT(loop);
                                                 identbasinname2={identbasinname{loop}};
                                                 alldrops2{loop1}={alldrops0};
                                            end
                                        end
                                    end
                                end
                                EXP_loncomp{identloop}=RLON2;
                                EXP_latcomp{identloop}=STMLAT2;
                                EXP_namecomp{identloop}=identbasinname2;
                                alldropscomp{identloop}=alldrops2;
                                alldenmapcomp{identloop}=alldenmap;            
                                if size(identconvtype,2)>1
                                    alldenmapcomp_t{identloop}=alldenmap_t;                             
                                end
                            end
                            clear identdrops identdropsdat identbasin identbasinname alldrops alldenmap alldenmap_t l lsz
                        end
                        identbasinnameall=unique(identbasinnameall);

                        %% Composite Basin-Scale                  
                        % Loop over all experiments
                        for exl=1:size(identexp,1)            
                            % Loop over all of the cycles
                            tmp1=[];
                            tmp1_den=[];
                            tmp1_den_t=[];
                            for cyc=1:size(alldropscomp,2)
                                tmp0_all=alldropscomp{cyc};
                                tmp0_lon=EXP_loncomp{cyc};
                                tmp0_lat=EXP_latcomp{cyc};
                                tmp0_name=EXP_namecomp{cyc};
                                tmp0_denmap=alldenmapcomp{cyc};
                                if size(identconvtype,2)>1
                                    tmp0_denmap_t=alldenmapcomp_t{cyc};                             
                                end
                                tmp2_all=tmp0_all{exl};
                                cycleswithdrops=tmp0_all{1};
                                if isempty(cycleswithdrops{:})==1
                                   identdropcyc(cyc)=0;
                                else
                                    identdropcyc(cyc)=1;                        
                                end
                                for i=1:size(tmp2_all,2)
                                    tmp3_lon=tmp0_lon(i); 
                                    tmp3_lat=tmp0_lat(i); 
                                    tmp3_name=tmp0_name{i}; 
                                    tmp3_denmap=tmp0_denmap{i,exl};
                                    if size(identconvtype,2)>1
                                        tmp3_denmap_t=tmp0_denmap_t(exl,:); 
                                    end
                                    tmp3_all=tmp2_all{i};

                                    if isempty(tmp3_all)==1
                                    else                                                
                                        tmp3_all(:,3)=repmat(tmp3_lon,size(tmp3_all,1),1);
                                        tmp3_all(:,4)=repmat(tmp3_lat,size(tmp3_all,1),1);
                                        tmp1=cat(1,tmp1,tmp3_all); % all storms for ALL experiment
                                        tmp1_den=cat(3,tmp1_den,tmp3_denmap);
                                        if size(identconvtype,2)>1
                                            tmp1_den_t=cat(1,tmp1_den_t,tmp3_denmap_t);                             
                                        end
                                    end
                                end
                            end               

                            if isempty(tmp1)==1
                                identinnerdrops(exl)=0;
                                identgalesdrops(exl)=0;
                                identouterdrops(exl)=0;
                                identinnerdrops_t(:,exl)=0;
                                identgalesdrops_t(:,exl)=0;
                                identouterdrops_t(:,exl)=0;
                            else
                                if size(identconvtype,2)>1
                                    for sot=1:size(identconvtype,2)
                                        for soti=1:size(tmp1_den_t,1)
                                            tmp1_den_tt(:,:,soti)=tmp1_den_t{soti,sot};
                                        end
                                        t_t(sot,:)=sum(sum(tmp1_den_tt,1),3);
                                    end                        
                                    identinnerdrops_t(:,exl)=t_t(:,1);
                                    identgalesdrops_t(:,exl)=t_t(:,2);
                                    identouterdrops_t(:,exl)=t_t(:,3);                            
                                end
                                t=sum(sum(tmp1_den,1),3);
                                identinnerdrops(exl)=t(1);
                                identgalesdrops(exl)=t(2);
                                identouterdrops(exl)=t(3);
                            end

                            for loopdrops=1 % loop over all drops                
                                % Histogram
                                spPos=[0.11 0.13 0.75 0.75]; % arrange plots the same
                                set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                hfig=figure;
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                ax1=subplot(3,4,[1:8]);
                                set(gca,'plotboxaspectratio',[1 1 1])
                                box on
                                set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                hold on
                                if isempty(tmp1)==1
                                    if size(identconvtype,2)>1 % there are subtypes to this conventional observation!
                                        for sot=1:size(identconvtype,2)
                                             counts=0;
                             l(sot)=plot(0,5000,'.','markerfacecolor',identconvcolors(sot,:),'markeredgecolor',identconvcolors(sot,:));
                                             lsz(sot)=0;
                                        end
                                    else % there are no subtypes to this conventional bservation!
                                        counts=0;
                            l(1)=plot(0,5000,'.k');
                                    end
                                else
                                    if size(identconvtype,2)>1 % there are subtypes to this conventional observation!
                                        for sot=1:size(identconvtype,2)
                                            [counts,centers]=hist(tmp1((tmp1(:,9)==identconvtype(sot)),5),[0:5:2000]);
                                            l(sot)=plot(centers,counts,'-','color',identconvcolors(sot,:),'linewidth',2);            
                                            lsz(sot)=size(tmp1((tmp1(:,9)==identconvtype(sot)),1),1);
                                        end
                                    else % there are no subtypes to this conventional observation!
                                           [counts,centers]=hist(tmp1(:,5),[0:5:2000]);
                                            l(1)=plot(centers,counts,'-k','linewidth',2);            
                                    end
                                end
                                xlim([-.5 2000])
                                if exl==1
                                    ymaxallbasin=round(max(counts)/100)*100+50;
                                end
                                ylim([0 ymaxallbasin])
                                if size(identconvtype,2)>1
                                        for sot=1:size(identconvtype,2)
                                            identlegendconv(sot)={[identconvlegend{sot} ' (',num2str(lsz(sot)),')']};
                                        end
                                        ll=legend(l,identlegendconv,'location','northeast');
                                else
                                        ll=legend(l,['Assimilated Observations'],'location','northeast');
                                end
                                ll.FontSize=10;
                                ylabel('Number of Assimilated Observations','fontsize',20)                                   
                                xlabel('Radius (km)','fontsize',20)                                   
                                set(gca,'fontsize',20)
                                grid on
                                set(gca,'xtick',0:250:2000)
                                set(gcf, 'InvertHardcopy', 'off')
                                set(gcf,'Units','inches');
                                screenposition = get(gcf,'Position');
                                set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                set(gcf, 'InvertHardcopy', 'off')                       
                                text(0,1.03,['\textbf{INIT: ',identinittimesunique(1,:),'$\mathbf{-}$',identinittimesunique(end,:),' $\mid$ N=',num2str(size(tmp1,1)),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                text(0,1.065,['\textbf{Assimilated ',identconvid,' Observations}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                text(1,1.065,['\textbf{',identexpshort{exl},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(exl,:),'units','normalized');                    
                                ax=gca;
                                set(gca,'Color',[.9 .9 .9])
                                set(ax, 'Layer', 'top')
                                ax.LineWidth=1; 
                                set(gca,'position',[spPos(1)+.035 spPos(2)+.015 spPos(3) spPos(4)-.02])
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                f = getframe(hfig);
                                imwrite(f.cdata,[identtrackint,'/conv_hist_',identexpshort{exl},'.png'],'png');
                                close all    

                                % Create storm-centered reference frame for all dropsonde locations
                                spPos=[0.11 0.13 0.75 0.75]; % arrange plots the same
                                set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                hfig=figure;
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                ax2=subplot(3,4,[1:8]);
                                set(gca,'plotboxaspectratio',[1 1 1])
                                ax2=gca;
                                set(gca,'Color',[.9 .9 .9])
                                box on
                                set(ax2, 'Layer', 'top')
                                ax2.LineWidth=1; 
                                set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                set(gca,'xtick',[])
                                set(gca,'ytick',[])
                                hold on
                                ax1=subplot(3,4,[1:8],polaraxes);
                %                     th = linspace(0,2*pi,75);
                %                     r = 75;
                %                     polarplot(th,r+zeros(size(th)),'Color',[.7 .7 .7],'linewidth',1)
                                 hold on
                %                     th = linspace(0,2*pi,75);
                %                     r = 250;
                %                     polarplot(th,r+zeros(size(th)),'Color',[.7 .7 .7],'linewidth',1)
                                clear l lsz
                                if isempty(tmp1)==1
                                    if size(identconvtype,2)>1 % there are subtypes to this conventional observation!
                                        for sot=1:size(identconvtype,2)
                                             l(sot)=polarplot(0,5000,'.','markerfacecolor',identconvcolors(sot,:),'markeredgecolor',identconvcolors(sot,:));
                                             lsz(sot)=0;
                                        end
                                    else % there are no subtypes to this conventional bservation!
                                        l(1)=polarplot(0,5000,'.k');
                                    end
                                else
                                    if size(identconvtype,2)>1 % there are subtypes to this conventional observation!
                                        for sot=1:size(identconvtype,2)
                                            l(sot)=polarplot(tmp1((tmp1(:,9)==identconvtype(sot)),6)*pi/180,tmp1((tmp1(:,9)==identconvtype(sot)),5),'.','color',identconvcolors(sot,:));
                                            lsz(sot)=size(tmp1((tmp1(:,9)==identconvtype(sot)),1),1);
                                        end
                                    else % there are no subtypes to this conventional bservation!
                                            l(1)=polarplot(tmp1(:,6)*pi/180,tmp1(:,5),'.k');
                                    end
                                end

                                if size(identconvtype,2)>1
                                        for sot=1:size(identconvtype,2)
                                            identlegendconv(sot)={[identconvlegend{sot} ' (',num2str(lsz(sot)),')']};
                                        end
                                        ll=legend(l,identlegendconv,'location','northeast');
                                else
                                        ll=legend(l,['Assimilated Observations'],'location','northeast');
                                end
                                ll.FontSize=10;
                                ax1.ThetaDir = 'clockwise';
                                ax1.ThetaZeroLocation = 'top';
                                ax1.RLim=[0 1600];
                                ax1.ThetaTick = [];
                                rticks([75 250 500 1000 1500])
                                rticklabels({})
                                thetaticklabels({}) 
                                ax1.GridLineStyle = '--';
                                ax1.ThetaColor=[.9 .9 .9];
                                ax1.GridAlpha = 1;
                                ax1.GridColor=[.7 .7 .7];
                                set(gcf, 'InvertHardcopy', 'off')
                                set(gcf,'Units','inches');
                                screenposition = get(gcf,'Position');
                                set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                set(gcf, 'InvertHardcopy', 'off')   
                                text(.5,.484,'75 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])
                                text(.5,.426,'250 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])
                                text(.5,.347,'500 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])
                                text(.5,.19,'1000 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])
                                text(.5,.034,'1500 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])
                                text(0,1.03,['\textbf{INIT: ',identinittimesunique(1,:),'$\mathbf{-}$',identinittimesunique(end,:),' $\mid$ N=',num2str(size(tmp1,1)),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                text(0,1.065,['\textbf{Assimilated ',identconvid,' Observations}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                text(1,1.065,['\textbf{',identexpshort{exl},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(exl,:),'units','normalized');                    
                                ax=gca;
                                set(gca,'Color',[.9 .9 .9])
                                set(ax, 'Layer', 'top')
                                ax1.LineWidth=1; 
                                set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window                    
                                f = getframe(hfig);                    
                                imwrite(f.cdata,[identtrackint,'/conv_plan_',identexpshort{exl},'.png'],'png');
                                close all 

                                %% Denmap for Subtypes  
                                if size(identconvtype,2)>1
                                    for sot=1:size(identconvtype,2)
                                        clear tmp1_den_tt
                                        if isempty(tmp1_den_t)==1
                                            tmp1_den_tt=zeros(11,3);
                                        else
                                            for soti=1:size(tmp1_den_t,1)
                                                tmp1_den_tt(:,:,soti)=tmp1_den_t{soti,sot};
                                            end
                                        end                            
                                        set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                        hfig=figure;
                                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                        ax1=subplot(3,4,[1:8]);  

                                        identvals=sum(sum(tmp1_den_tt,1),3);
                                        imagesc(sum(tmp1_den_tt,3))
                                        xlabel('','fontsize',20)
                                        ylabel('Pressure (hPa)','fontsize',20)                                   
                                        set(gca,'fontsize',20)
                                        set(gca,'xtick',1:3)
                                        set(gca,'xticklabel',{'<75 km','75-250 km','>250 km'});
                                        set(gca,'ytick',0.5:1:12)
                                        set(gca,'yticklabel',{'0','100','200','300','400','500','600','700','800','900','1000','1100'});
                                        colorbar
                                        caxis([0 250])
                                        colormap(flipud(gray(25)))
                                        set(gca, 'YGrid', 'on', 'XGrid', 'off')
                                        hold on
                                        plot(repmat(1.5,1,13),0:12,'k')
                                        plot(repmat(2.5,1,13),0:12,'k')
                                        set(gca,'plotboxaspectratio',[1 1 1])
                                        set(gcf, 'InvertHardcopy', 'off')
                                        set(gcf,'Units','inches');
                                        screenposition = get(gcf,'Position');
                                        set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                        set(gcf, 'InvertHardcopy', 'off')
                                        tmpsum=sum(identvals);                
                                        text(0,1.03,['\textbf{INIT: ',identinittimesunique(1,:),'$\mathbf{-}$',identinittimesunique(end,:),' $\mid$ N=',num2str(sum(identvals(:))),'/',num2str(size(tmp1,1)),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                        text(0,1.065,['\textbf{Assimilated ',identconvid,' Observations}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                        text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                        text(1,1.065,['\textbf{',identexpshort{exl},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(exl,:),'units','normalized');                    
                                        tmpsum=sum(tmp1_den_tt,3);                
                                        for i=1:3
                                            for j=1:11
                                                if tmpsum(j,i)>=200
                                                    text(i,j, num2str(tmpsum(j,i)),'color','w','HorizontalAlignment', 'Center','fontsize',16)
                                                else
                                                    text(i,j, num2str(tmpsum(j,i)), 'HorizontalAlignment', 'Center','fontsize',16)
                                                end
                                            end
                                        end        
                                        text(0,-.065,['(Tot. #)'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');        
                                        text(.168,-.065,['(',num2str(identvals(1)),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');
                                        text(.5,-.065,['(',num2str(identvals(2)),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');
                                        text(.832,-.065,['(',num2str(identvals(3)),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');        
                                        text(.5,-.1,['Distance from Storm Center'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',22,'interpreter','tex','color','k','units','normalized');
                                        ax=gca;
                                        box on
                                        set(ax, 'Layer', 'top')
                                        ax.LineWidth=1; 
                                        set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                        f = getframe(hfig);
                                        imwrite(f.cdata,[identtrackint,'/conv_az_',identexpshort{exl},'_type',num2str(identconvtype(sot)),'.png'],'png');
                                        close all 
                                    end
                                end

                                %% Density Map                
                                set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                hfig=figure;
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                ax1=subplot(3,4,[1:8]);  
                                if isempty(tmp1_den)==1
                                    tmp1_den=zeros(11,3);
                                end               
                                identvals=sum(sum(tmp1_den,1),3);
                                imagesc(sum(tmp1_den,3))
                                xlabel('','fontsize',20)
                                ylabel('Pressure (hPa)','fontsize',20)                                   
                                set(gca,'fontsize',20)
                                set(gca,'xtick',1:3)
                                set(gca,'xticklabel',{'<75 km','75-250 km','>250 km'});
                                set(gca,'ytick',0.5:1:12)
                                set(gca,'yticklabel',{'0','100','200','300','400','500','600','700','800','900','1000','1100'});
                                colorbar
                                caxis([0 250])
                                colormap(flipud(gray(25)))
                                set(gca, 'YGrid', 'on', 'XGrid', 'off')
                                hold on
                                plot(repmat(1.5,1,13),0:12,'k')
                                plot(repmat(2.5,1,13),0:12,'k')
                                set(gca,'plotboxaspectratio',[1 1 1])
                                set(gcf, 'InvertHardcopy', 'off')
                                set(gcf,'Units','inches');
                                screenposition = get(gcf,'Position');
                                set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                set(gcf, 'InvertHardcopy', 'off')
                                tmpsum=sum(identvals);                
                                text(0,1.03,['\textbf{INIT: ',identinittimesunique(1,:),'$\mathbf{-}$',identinittimesunique(end,:),' $\mid$ N=',num2str(size(tmp1,1)),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                text(0,1.065,['\textbf{Assimilated ',identconvid,' Observations}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                text(1,1.065,['\textbf{',identexpshort{exl},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(exl,:),'units','normalized');                    
                                tmpsum=sum(tmp1_den,3);                
                                for i=1:3
                                    for j=1:11
                                        if tmpsum(j,i)>=200
                                            text(i,j, num2str(tmpsum(j,i)),'color','w','HorizontalAlignment', 'Center','fontsize',16)
                                        else
                                            text(i,j, num2str(tmpsum(j,i)), 'HorizontalAlignment', 'Center','fontsize',16)
                                        end
                                    end
                                end        
                                text(0,-.065,['(Tot. #)'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');        
                                text(.168,-.065,['(',num2str(identvals(1)),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');
                                text(.5,-.065,['(',num2str(identvals(2)),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');
                                text(.832,-.065,['(',num2str(identvals(3)),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');        
                                text(.5,-.1,['Distance from Storm Center'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',22,'interpreter','tex','color','k','units','normalized');
                                ax=gca;
                                box on
                                set(ax, 'Layer', 'top')
                                ax.LineWidth=1; 
                                set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                f = getframe(hfig);
                                imwrite(f.cdata,[identtrackint,'/conv_az_',identexpshort{exl},'.png'],'png');
                                close all                
                            end        
                            valuescomp{exl}=tmp1;
                            denmapcomp{exl}=tmp1_den;
                            listcomp{exl}=tmp1;
                            if size(identconvtype,2)>1
                                denmapcomp_t{exl}=tmp1_den_t;
                            end
                        end

                        if ~exist([identout,'RESULTS/',identfold,'VERIFICATION/OBS/'], 'dir')
                            mkdir([identout,'RESULTS/',identfold,'VERIFICATION/OBS/'])
                        end
                        if size(identconvtype,2)>1
                            identdroplist={identn identinnerdrops identgalesdrops identouterdrops identinnerdrops_t identgalesdrops_t identouterdrops_t};
                            save([identout,'RESULTS/',identfold,'VERIFICATION/OBS/',identn,'_conv.mat'],'identdroplist','identdropcyc','valuescomp','denmapcomp','denmapcomp_t','listcomp','-v7.3')
                        else
                            identdroplist={identn identinnerdrops identgalesdrops identouterdrops};
                            save([identout,'RESULTS/',identfold,'VERIFICATION/OBS/',identn,'_conv.mat'],'identdroplist','identdropcyc','valuescomp','denmapcomp','listcomp','-v7.3')
                        end            
                        close all

                        %% Track with Obs
                        for track=1
                            clear l cntexp
                            spPos=[0.11 0.13 0.75 0.75]; % arrange plots the same
                            set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                            hfig=figure;
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                            ax1=subplot(3,4,[1:8]);
                            hold on
                            load coastlines
                            for i=1:size(CATall,1)
                                if strcmp(CATall(i,:),'WV')==1 || strcmp(CATall(i,:),'EX')==1 || strcmp(CATall(i,:),'LO')==1 || strcmp(CATall(i,:),'DB')==1 || strcmp(CATall(i,:),'SD')==1 || strcmp(CATall(i,:),'SS')==1
                                    SPEEDall(i)=-1;
                                end
                            end         
                            h=fill([180,-180,-180,180],[-90,-90,90,90],[.5 .8 1]);
                            hold on
                            geoshow('borders.shp','FaceColor',[0.9 0.9 0.9]);
                            hold on
                            states = shaperead('usastatehi', 'UseGeoCoords', true);
                            geoshow(states,'FaceColor',[0.9 0.9 0.9]);
                            tmpminlat=min(LATall(:));
                            tmpmaxlat=max(LATall(:));
                            tmpminlon=min(LONall(:));
                            tmpmaxlon=max(LONall(:));
                            tmplat=tmpmaxlat+5-(tmpminlat-5);
                            tmplon=tmpmaxlon+5-(tmpminlon-5);
                            difftmp=tmplat-tmplon;
                            if difftmp<0 % longitude is wider than latitude
                                diffmult=tmplon/2;
                                diffmid=(tmpmaxlat+5+(tmpminlat-5))/2;
                                xlim([tmpminlon-5 tmpmaxlon+5])
                                x_dist=(tmpminlon-5)-(tmpmaxlon+5);
                                x_mean=((tmpminlon-5)+(tmpmaxlon+5))/2;
                                ylim([diffmid-diffmult diffmid+diffmult])
                                y_dist=(diffmid-diffmult)-(diffmid+diffmult);
                                y_mean=((diffmid-diffmult)-(diffmid+diffmult))/2;
                            else         % latitude is wider than longitude
                                diffmult=tmplat/2;
                                diffmid=(tmpmaxlon+5+(tmpminlon-5))/2;
                                xlim([tmpminlon-diffmult tmpmaxlon+diffmult])
                                x_dist=(tmpminlon-diffmult)-(tmpmaxlon+diffmult);
                                x_mean=((tmpminlon-diffmult)+(tmpmaxlon+diffmult))/2;
                                ylim([tmpminlat-5 tmpmaxlat+5])
                                y_dist=(tmpminlat-5)-(tmpmaxlat+5);
                                y_mean=((tmpminlat-5)+(tmpmaxlat+5))/2;
                            end
                            c_adj=cosd(y_mean);
                            c_dist=abs(x_dist*c_adj/2);
                            c_mid=x_mean;
                            xlim([c_mid-c_dist-5 c_mid+c_dist+5])
                            hold on
                            xlabel('Longitude','fontsize',20)
                            ylabel('Latitude','fontsize',20)                                   
                            set(gca,'fontsize',18)  
                            set(gca,'xtick',-180:10:180)
                            set(gca,'ytick',-90:5:90)
                            plot(LONall,LATall,'-k','linewidth',4);
                            hold on
                            azavcm=jet(7);
                            for i=1:length(LONall)
                                if SPEEDall(i) > 0 && SPEEDall(i) < 34 
                                    plot(LONall(i),LATall(i),'.','color',azavcm(2,:),'markersize',12);            
                                elseif SPEEDall(i) > 33 && SPEEDall(i) < 65 
                                    plot(LONall(i),LATall(i),'.','color',azavcm(3,:),'markersize',12);            
                                elseif SPEEDall(i) > 64 && SPEEDall(i) < 84 
                                    plot(LONall(i),LATall(i),'.','color',azavcm(4,:),'markersize',12);            
                                elseif SPEEDall(i) > 83 && SPEEDall(i) < 96 
                                    plot(LONall(i),LATall(i),'.','color',azavcm(5,:),'markersize',12);            
                                elseif SPEEDall(i) > 95 && SPEEDall(i) < 114 
                                    plot(LONall(i),LATall(i),'.','color',azavcm(6,:),'markersize',12);            
                                elseif SPEEDall(i) >113 && SPEEDall(i) < 135 
                                    plot(LONall(i),LATall(i),'.','color',azavcm(7,:),'markersize',12);           
                                elseif SPEEDall(i) > 134
                                    plot(LONall(i),LATall(i),'.','color','m','markersize',12); 
                                elseif strcmp(CATall(i,:),'LO')==1 || strcmp(CATall(i,:),'DB')==1 || strcmp(CATall(i,:),'WV')==1
                                    plot(LONall(i),LATall(i),'.','color',[.5 .5 .5],'markersize',12);             
                                elseif strcmp(CATall(i,:),'SD')==1 || strcmp(CATall(i,:),'SS')==1
                                    plot(LONall(i),LATall(i),'s','color',[.5 .5 .5],'markersize',4,'markerfacecolor',[.5 .5 .5]);                 
                                elseif strcmp(CATall(i,:),'EX')==1
                                    plot(LONall(i),LATall(i),'d','color',[.5 .5 .5],'markersize',3,'markerfacecolor',[.5 .5 .5]);                 
                                end
                            end
                            for i=1:length(LONall)
                                if strcmp(DATEall(i,9:10),'00')==1
                                    plot(LONall(i),LATall(i),'o','markerfacecolor','w','markeredgecolor','k','markersize',6); 
                                end
                            end                     
                            set(gca,'plotboxaspectratio',[1 1 1])
                            set(gcf, 'InvertHardcopy', 'off')             
                            set(gca,'fontsize',20)
                            box on
                            set(gcf,'Units','inches');
                            a1Pos = get(gca,'Position');
                            set(gcf, 'InvertHardcopy', 'off')
                            set(gcf,'Units','inches');
                            screenposition = get(gcf,'Position');
                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                            set(gcf, 'InvertHardcopy', 'off')
                            text(0,1.065,['\textbf{Track, Intensity, \& Assimilated ',identconvid,' Observations}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                            ax=gca;
                            box on
                            set(ax, 'Layer', 'bottom')
                            ax.LineWidth=1; 
                            ax=gca;
                            box on
                            set(ax, 'Layer', 'top')
                            hold on
                            plotdrops=[];
                            for i=1:size(alldropscomp,2)
                            tmpd=alldropscomp{i};
                            tmpp=tmpd{1};
                            tmpp=tmpp{:};
                            plotdrops=cat(1,plotdrops,tmpp);
                            end
                            latpd=plotdrops(:,2);
                            lonpd=plotdrops(:,1);
                            clear l lsz
                            if isempty(latpd)==1
                                    if size(identconvtype,2)>1 % there are subtypes to this conventional observation!
                                        for sot=1:size(identconvtype,2)
                                             l(sot)=plot(-360,-360,'x','color',identconvcolors(sot,:),'markersize',2);
                                             lsz(sot)=0;
                                        end
                                    else % there are no subtypes to this conventional bservation!
                                        l(1)=plot(-360,-360,'x','color',[.5 0 .6],'markersize',2);
                                    end
                            else
                                if size(identconvtype,2)>1 % there are subtypes to this conventional observation!
                                    for sot=1:size(identconvtype,2)
                                         l(sot)=plot(lonpd((plotdrops(:,9)==identconvtype(sot))),latpd((plotdrops(:,9)==identconvtype(sot))),'x','color',identconvcolors(sot,:),'markersize',2);
                                         lsz(sot)=size(lonpd((plotdrops(:,9)==identconvtype(sot)),1),1);
                                    end
                                else % there are no subtypes to this conventional bservation!
                                    l(1)=plot(lonpd,latpd,'x','color',[.5 0 .6],'markersize',2);
                                end
                            end
                            text(0,1.03,['\textbf{DATES: ',DATEall(1,:),'$\mathbf{-}$',DATEall(end,:),' $\mid$ N=',num2str(size(lonpd,1)),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            ax.LineWidth=1; 
                            l(1)=plot(-200,-100,'o','markerfacecolor','w','markeredgecolor','k','markersize',8); 
                            l(2)=plot(-200,-100,'.','color',[.5 .5 .5],'markersize',25); 
                            l(3)=plot(-200,-100,'s','markerfacecolor',[.5 .5 .5],'markeredgecolor',[.5 .5 .5],'markersize',8); 
                            l(4)=plot(-200,-100,'d','markerfacecolor',[.5 .5 .5],'markeredgecolor',[.5 .5 .5],'markersize',6); 
                            l(5)=plot(-200,-100,'.','color',azavcm(2,:),'markersize',25);
                            l(6)=plot(-200,-100,'.','color',azavcm(3,:),'markersize',25);
                            l(7)=plot(-200,-100,'.','color',azavcm(4,:),'markersize',25);
                            l(8)=plot(-200,-100,'.','color',azavcm(5,:),'markersize',25);
                            l(9)=plot(-200,-100,'.','color',azavcm(6,:),'markersize',25);
                            l(10)=plot(-200,-100,'.','color',azavcm(7,:),'markersize',25);
                            l(11)=plot(-200,-100,'.','color','m','markersize',25);
                            if size(identconvtype,2)>1 % there are subtypes to this conventional observation!
                                for sot=1:size(identconvtype,2)
                                     l(11+sot)=plot(-200,-100,'x','color',identconvcolors(sot,:),'markersize',6);
                                end
                                for sot=1:size(identconvtype,2)
                                    identlegendconv(sot)={['Obs ',num2str(identconvtype(sot)) ' (',num2str(lsz(sot)),')']};
                                end
                                lh=legend(l,'0000 UTC','WV/DB/LO','SD/SS','EX','TD','TS','C1','C2','C3','C4','C5',identlegendconv{:},'orientation','vertical');
                            else % there are no subtypes to this conventional bservation!
                                  l(12)=plot(-200,-100,'x','color',[.5 0 .6],'markersize',6);
                                legend off
                                lh=legend(l,'0000 UTC','WV/DB/LO','SD/SS','EX','TD','TS','C1','C2','C3','C4','C5','Obs','orientation','vertical');
                            end
                            lh.FontSize=10;     
                            set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                            f = getframe(hfig);
                            imwrite(f.cdata,[identtrackint,'/',identn,'_track_withobs.png'],'png');    
                        end

                        clearvars -except identbasinmodel identsatobs identgraphicssat identsatid identsatname identindivch identchannel identindivstorm identcomposite identstormsdone identconvtype identconvcolors identconvlegend identns* identnewsub identgraphicsconv identgraphicsbycycle identconvid  ident* stormsdone yearsdone identdiff identremoveex identremoveinv identcycles identmaxfhr identlevels identexp identexpshort identexpsigimp identexpsigimpshort identexpcolors identscrub identgroovpr identout identconv
                    end
                end

                %% %%%%%%%%%%%%%%%%%% %%
                %% Plot Satellite Obs %% 
                %% %%%%%%%%%%%%%%%%%% %%
                for satobs=1
                    if identsatobs==1
                        %clear identsatobs
                        identinnerdrops=0;
                        identinnergaledrops=0;
                        identouterdrops=0;
                        identdenmap=zeros(10,3);
                        identdenmap_stm=zeros(10,3);
                        identalldrops=0;
                        identuniquedrops=[];
                        identassimilateddrops=[];
                        identassimilateddrops_stm=[];
                        identinnerdrops_stm=0;
                        identinnergaledrops_stm=0;
                        identouterdrops_stm=0;
                        dropsall=[];
                        identbasinnameall=[];
                        alldropsstm=[];
                        alldenmapstm=[];
                        %% Individual Basin-Scale Storm/Init Conv
                        for identloop=1:size(identinittimesunique,1)
                            % What storms are run in the basin at this init time?   
                            identdr=dir([identgroovpr,'obsall/',identexpshort{1},'/*',identinittimesunique(identloop,:),'*channels*']);
                            identdr=unique({identdr.name});
                            if isempty(identdr)==1
                                identinittimesunique(identloop,:)=[];
                            else
                                for i=1:size(identdr,2)
                                    identdrops=identdr{i};
                                    if strcmp(identdrops(end-24),'l')==1
                                        identdropsdat(i,:)=['al',identdrops(end-26:end-25)];
                                    elseif strcmp(identdrops(end-24),'e')==1
                                        identdropsdat(i,:)=['ep',identdrops(end-26:end-25)];
                                    elseif strcmp(identdrops(end-24),'w')==1
                                        identdropsdat(i,:)=['wp',identdrops(end-26:end-25)];
                                    elseif strcmp(identdrops(end-24),'c')==1
                                        identdropsdat(i,:)=['cp',identdrops(end-26:end-25)];
                                    end
                                    identbasin{i}=identdrops(1:end-24);
                                    identbasinname{i}=[upper(identdrops(end-26:end-24)),' (',upper(identdrops(1)),identdrops(2:end-27),')'];
                                end        

                                % Get the TC VITALS for each storm
                                for i=1:size(identdropsdat,1)                                
                                    filename = [identgroovpr,'tcvitals/',identbasin{i},'.',identinittimesunique(identloop,:),'.storm_vit'];                                                                               
                                    delimiter = ' ';
                                    formatSpec = '%3s%5s%5s%14s%5s%5s%6s%4s%4s%5s%5s%5s%3s%4s%5s%5s%5s%5s%2s%5s%5s%5s%5s%3s%5s%6s%5s%5s%5s%s%[^\n\r]';
                                    fileID = fopen(filename,'r');
                                    dataArray = textscan(fileID, formatSpec, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string',  'ReturnOnError', false);
                                    fclose(fileID);

                                    tcv_lat=dataArray{6};
                                    tcv_lat=tcv_lat{1};
                                    STMLAT(i)=str2num(tcv_lat(1:end-1))/10;

                                    tcv_lon=dataArray{7};
                                    tcv_lon=tcv_lon{1};
                                    tcv_lonew(i)=tcv_lon(end);
                                    tcv_lon=str2num(tcv_lon(1:end-1))/10;

                                    if strcmp(tcv_lonew(i),'W')==1
                                        STMLON(i)=360-tcv_lon;
                                    else
                                        STMLON(i)=tcv_lon;
                                    end

                                    tcv_dir=dataArray{8};
                                    tcv_dir=str2num(tcv_dir{1});
                                    tcv_spd=dataArray{9};
                                    tcv_spd=str2num(tcv_spd{1})/10;

                                    DXDT=tcv_spd.*sin(tcv_dir*pi/180).*3.6;
                                    DDXDT(i) = -1.*DXDT./(111.*cos(STMLAT(i)*pi/180));
                                    DYDT=tcv_spd.*cos(tcv_dir*pi/180).*3.6;
                                    DDYDT(i)=DYDT./111;
                                    if strcmp(tcv_lonew(i),'W')==1
                                        RLON(i)=360 - STMLON(i); %% puts it back to what it was (no neg for W)
                                    else
                                        RLON(i)=tcv_lon; %% keeps it what it was - valid for 0-360 and -180-180
                                    end
                                end

                               % Get the obs for each storm/experiment
                                for j=1:size(identexp,1)
                                    for i=1:size(identdr,2)                
                                        %% Get profile locations
                                        filename=[identgroovpr,'obsall/',identexpshort{j},'/',identbasin{i},'.',identinittimesunique(identloop,:),'.details.txt'];
                                        filenameqc=[identgroovpr,'obsall/',identexpshort{j},'/qcflags_',identinittimesunique(identloop,:),'.txt'];    
                                        tmpf=dir(filename);
                                         if tmpf.bytes==0 % the satellite in question was NOT assimilated
                                            alldrops0={[]};
                                            channel={[]};
                                            profiles={[]};
                                            usage={[]};
                                            wavelength={[]};
                                            wavenumber={[]};
                                            flagqc={[]};
                                            latqc={[]};
                                            lonqc={[]};
                                            chqc={[]};
                                            if j==size(identexp,1)
                                                RLON(i)=-1*RLON(i);
                                            end
                                         else
                                            formatSpec = '%8f%8f%8f%f%[^\n\r]';
                                            fileID = fopen(filename,'r');
                                            dataArray = textscan(fileID, formatSpec, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string',  'ReturnOnError', false);
                                            fclose(fileID);
                                            droplat=dataArray{:,1};
                                            if strcmp(tcv_lonew(i),'W')==1
                                                droplon=360-dataArray{:,2}; % puts it into -180-180 coord without the sign
                                            else
                                                droplon=dataArray{:,2}; % leave it be
                                            end
                                            droppres=dataArray{:,3};
                                            dropdhr=dataArray{:,4};
                                            clearvars filename formatSpec fileID dataArray ans;

                                            formatSpec = '%13f%13f%8f%f%[^\n\r]';
                                            fileID = fopen(filenameqc,'r');
                                            dataArray = textscan(fileID, formatSpec, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'EmptyValue', NaN,  'ReturnOnError', false);
                                            fclose(fileID);
                                            qclat=dataArray{:,1};
                                            qcch=dataArray{:,3};
                                            qcflag=dataArray{:,4};                        
                                            if strcmp(tcv_lonew(i),'W')==1
                                                qclon=360-dataArray{:,2}; % puts it into -180-180 coord without the sign
                                            else
                                                qclon=dataArray{:,2}; % leave it be
                                            end                        
                                            clearvars filename formatSpec fileID dataArray ans;
                                             % Create matrix of data based on how many channels the satellite has and how many profiles per channel 
                                             mxch=max(qcch);
                                             stch=find(qcch==1);
                                             for qci=1:size(find(qcch==1),1)
                                                 flagqc(:,qci)=qcflag(stch(qci):stch(qci)+mxch-1);
                                                 latqc(:,qci)=qclat(stch(qci):stch(qci)+mxch-1);
                                                 lonqc(:,qci)=qclon(stch(qci):stch(qci)+mxch-1);
                                                 chqc(:,qci)=qcch(stch(qci):stch(qci)+mxch-1);
                                             end                       

                                            % Add distance away from center at each pressure level
                                            if isnan(droplat)==1
                                                dropaz=NaN;
                                                dropan=NaN;
                                                xtob=NaN;
                                                ytob=NaN;
                                            else
                                                for drp=1:size(droplat,1)
                                                    xtob(drp)=round((RLON(i)+dropdhr(drp).*DDXDT(i))*10)/10;
                                                    ytob(drp)=round((STMLAT(i)+dropdhr(drp).*DDYDT(i))*10)/10;
                                                    if strcmp(tcv_lonew(i),'W')==1
                                                        dropaz(drp)=abs(deg2km(distance('gc',ytob(drp),-1*xtob(drp),droplat(drp),-1*droplon(drp))));
                                                        [droptmp(drp),dropan(drp)]=distance('gc',ytob(drp),-1*xtob(drp),droplat(drp),-1*droplon(drp));
                                                    else
                                                        dropaz(drp)=abs(deg2km(distance('gc',ytob(drp),xtob(drp),droplat(drp),droplon(drp))));
                                                        [droptmp(drp),dropan(drp)]=distance('gc',ytob(drp),xtob(drp),droplat(drp),droplon(drp));
                                                    end                                
                                                end
                                            end    

                                            % Make Full List
                                            if strcmp(tcv_lonew(i),'W')==1
                                                tmpdrops=[-1*droplon droplat droppres dropaz' dropan' -1*xtob' ytob'];
                                                if j==size(identexp,1)
                                                    RLON(i)=-1*RLON(i);
                                                end
                                            else
                                                tmpdrops=[droplon droplat droppres dropaz' dropan' xtob' ytob'];
                                            end
                                            alldrops0{i}=tmpdrops;
                                            clear dropaz tmp tmpdrops dropan xtob ytob

                                            %% Get profiles
                                            filename=[identgroovpr,'obsall/',identexpshort{j},'/',identbasin{i},'.',identinittimesunique(identloop,:),'.profiles.txt'];                     
                                            formatSpec = '%5s%5s%9s%15s%7s%11s%12s%12s%12s%12s%s%[^\n\r]';
                                            fileID = fopen(filename,'r');
                                            dataArray = textscan(fileID, formatSpec, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string',  'ReturnOnError', false);
                                            fclose(fileID);
                                            raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
                                            for col=1:length(dataArray)-1
                                                raw(1:length(dataArray{col}),col) = mat2cell(dataArray{col}, ones(length(dataArray{col}), 1));
                                            end
                                            numericData = NaN(size(dataArray{1},1),size(dataArray,2));
                                            for col=[1,2,3,4,5,6,7,8,9,10,11]
                                                % Converts text in the input cell array to numbers. Replaced non-numeric
                                                % text with NaN.
                                                rawData = dataArray{col};
                                                for row=1:size(rawData, 1)
                                                    % Create a regular expression to detect and remove non-numeric prefixes and
                                                    % suffixes.
                                                    regexstr = '(?<prefix>.*?)(?<numbers>([-]*(\d+[\,]*)+[\.]{0,1}\d*[eEdD]{0,1}[-+]*\d*[i]{0,1})|([-]*(\d+[\,]*)*[\.]{1,1}\d+[eEdD]{0,1}[-+]*\d*[i]{0,1}))(?<suffix>.*)';
                                                    try
                                                        result = regexp(rawData(row), regexstr, 'names');
                                                        numbers = result.numbers;

                                                        % Detected commas in non-thousand locations.
                                                        invalidThousandsSeparator = false;
                                                        if numbers.contains(',')
                                                            thousandsRegExp = '^[-/+]*\d+?(\,\d{3})*\.{0,1}\d*$';
                                                            if isempty(regexp(numbers, thousandsRegExp, 'once'))
                                                                numbers = NaN;
                                                                invalidThousandsSeparator = true;
                                                            end
                                                        end
                                                        % Convert numeric text to numbers.
                                                        if ~invalidThousandsSeparator
                                                            numbers = textscan(char(strrep(numbers, ',', '')), '%f');
                                                            numericData(row, col) = numbers{1};
                                                            raw{row, col} = numbers{1};
                                                        end
                                                    catch
                                                        raw{row, col} = rawData{row};
                                                    end
                                                end
                                            end
                                            channel{i}=numericData(:,2);
                                            profiles{i}=numericData(:,4);
                                            usage{i}=numericData(:,6);
                                            clearvars filename formatSpec fileID dataArray ans raw col numericData rawData row regexstr result numbers invalidThousandsSeparator thousandsRegExp;

                                            %% Get wavelength and wavenumber
                                            filename=[identgroovpr,'obsall/',identexpshort{j},'/',identbasin{i},'.',identinittimesunique(identloop,:),'.channels.txt'];                     
                                            startRow = 3;
                                            formatSpec = '%7C%3f%10f%10f%10f%10f%10f%5f%5f%f%[^\n\r]';
                                            fileID = fopen(filename,'r');
                                            dataArray = textscan(fileID, formatSpec, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
                                            fclose(fileID);
                                            wavelength{i}=dataArray{:,3};
                                            wavenumber{i}=dataArray{:,5};
                                            clearvars filename startRow formatSpec fileID dataArray ans;
                                        end                    
                                    end                
                                    alldrops{j}=alldrops0;
                                    allchannel{j}=channel;
                                    allprofiles{j}=profiles;
                                    allusage{j}=usage;
                                    allwavelength{j}=wavelength;
                                    allwavenumber{j}=wavenumber;
                                    flagqc={flagqc};
                                    latqc={latqc};
                                    lonqc={lonqc};
                                    chqc={chqc};                
                                    allflagqc{j}=flagqc;
                                    alllatqc{j}=latqc;
                                    alllonqc{j}=lonqc;
                                    allchqc{j}=chqc;
                                    clear alldrops0 channel profiles usage wavelength wavenumber flagqc latqc lonqc chqc
                                end                                     

                                % Generate Graphics or Fields for Later
                                if identgraphicssat==1
                                    %Plot the basin-wide view of all drops for each experiment
                                    for loop1=1:size(identexp,1)
                                        spPos=[0.11 0.13 0.75 0.75]; % arrange plots the same
                                        set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                        hfig=figure;
                                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                        ax1=subplot(3,4,[1:8]);
                                        h=fill([360,-360,-360,360],[-90,-90,90,90],[.5 .8 1]);
                                        hold on
                                        geoshow('borders.shp','FaceColor',[0.9 0.9 0.9]);
                                        hold on
                                        states = shaperead('usastatehi', 'UseGeoCoords', true);
                                        geoshow(states,'FaceColor',[0.9 0.9 0.9]);                                      
                                        xlabel('Longitude','fontsize',20)
                                        ylabel('Latitude','fontsize',20)                                   
                                        set(gca,'fontsize',20)
                                        axis equal
                                        axis([-180 180 -90 90])
                                        numdrops=0;
                                        clear l lsz
                                        for loop=1:size(identdr,2)
                                            viscircles([RLON(loop) STMLAT(loop)],500/111.11,'Color',[.5 .5 .5],'linewidth',.5,'linestyle','--','EnhanceVisibility',0);
                                            viscircles([RLON(loop) STMLAT(loop)],1000/111.11,'Color',[.5 .5 .5],'linewidth',.5,'linestyle','--','EnhanceVisibility',0);
                                            hold on
                                            alldrops0=alldrops{loop1};
                                            alldrops0=alldrops0{loop};
                                            if sum(~isnan(alldrops0(:)))==0
                                                l(1)=plot(-360,-360,'o','markerfacecolor','k','markersize',2,'markeredgecolor','k');
                                            else       
                                                l(1)=plot(alldrops0(:,1),alldrops0(:,2),'o','markerfacecolor','k','markersize',2,'markeredgecolor','k');
                                                numdrops=size(alldrops0,1);
                                            end       
                                            lloop=identbasin{loop};
                                            text(RLON(loop),STMLAT(loop),upper(lloop(end-2:end)),'horizontalalignment','center','fontsize',10,'color',[.5 .5 .5])
                                        end
                                        %clear l                                    
                                        l=legend(l,['Potential Profiles'],'location','northeast');
                                        l.FontSize=10;
                                        hold off                        
                                        set(gca,'xtick',-180:60:180)
                                        set(gca,'ytick',-90:30:90)
                                        set(gca,'plotboxaspectratio',[1 1 1])
                                        set(gcf, 'InvertHardcopy', 'off')
                                        set(gcf,'Units','inches');
                                        screenposition = get(gcf,'Position');
                                        set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                        set(gcf, 'InvertHardcopy', 'off')
                                        text(0,1.055,['\textbf{INIT: ',identinittimesunique(identloop,:),' $\mid$ PP=',num2str(numdrops),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                        text(0,1.11,['\textbf{Potential ',identsatname,' Profiles}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                        text(1,1.055,['\textbf{',identexpshort{loop1},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(loop1,:),'units','normalized');
                                        ax=gca;
                                        box on
                                        set(ax, 'Layer', 'top')
                                        ax.LineWidth=1; 
                                        set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                        f = getframe(hfig);
                                        imwrite(f.cdata,[identtrackint,'/sat_basin_',identinittimesunique(identloop,:),'_',identexpshort{loop1},'.png'],'png');
                                        close all
                                    end
                                    % Plot the location of all obs at all levels that are included, centered on storm
                                    for loop1=1:size(identexp,1)
                                       for loop=1:size(identdr,2)                
                                        alldrops0=alldrops{loop1};
                                        alldrops0=alldrops0{loop};      
                                        channel=allchannel{loop1};
                                        channel=channel{loop}; 
                                        usage=allusage{loop1};
                                        usage=usage{loop};
                                        profiles=allprofiles{loop1};
                                        profiles=profiles{loop};
                                        wavenumber=allwavenumber{loop1};
                                        wavenumber=wavenumber{loop};
                                        wavelength=allwavelength{loop1};
                                        wavelength=wavelength{loop};
                                        flagqc=allflagqc{loop1};
                                        flagqc=flagqc{loop};
                                        latqc=alllatqc{loop1};
                                        latqc=latqc{loop};
                                        lonqc=alllonqc{loop1};
                                        lonqc=lonqc{loop};
                                        chqc=allchqc{loop1};
                                        chqc=chqc{loop};
                                        if isempty(channel)==1
                                            alldenmap(loop,loop1)={[]};  
                                            RLON2=RLON(loop);
                                            STMLAT2=STMLAT(loop);
                                            identbasinname2={identbasinname{loop}};
                                            alldrops2{loop1}={alldrops0};
                                        else                      
                                            set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                            hfig=figure;
                                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                            ax1=subplot(3,4,[1:8]);
                                            h=fill([360,-360,-360,360],[-90,-90,90,90],[.5 .8 1]);
                                            hold on                                           
                                            geoshow('borders.shp','FaceColor',[0.9 0.9 0.9]);
                                            hold on
                                            states = shaperead('usastatehi', 'UseGeoCoords', true);
                                            geoshow(states,'FaceColor',[0.9 0.9 0.9]);
                                            xlabel('Longitude','fontsize',20)
                                            ylabel('Latitude','fontsize',20)                                   
                                            set(gca,'fontsize',20)
                                            fhr=1;                              
                                            viscircles([RLON(loop) STMLAT(loop)],75/111.11,'Color',[.5 .5 .5 ],'linewidth',.5,'linestyle','--','EnhanceVisibility',0);
                                            viscircles([RLON(loop) STMLAT(loop)],250/111.11,'Color',[.5 .5 .5 ],'linewidth',.5,'linestyle','--','EnhanceVisibility',0);
                                            viscircles([RLON(loop) STMLAT(loop)],500/111.11,'Color',[.5 .5 .5 ],'linewidth',.5,'linestyle','--','EnhanceVisibility',0);
                                            viscircles([RLON(loop) STMLAT(loop)],1000/111.11,'Color',[.5 .5 .5 ],'linewidth',.5,'linestyle','--','EnhanceVisibility',0);
                                            hold on
                                            plot(RLON(loop),STMLAT(loop),'o','markerfacecolor',[.5 .5 .5],'markersize',2,'markeredgecolor',[.5 .5 .5]);                
                                            numdrops=0;
                                            if sum(~isnan(alldrops0(:)))==0
                                            else                        
                                                for drp=1:size(alldrops0,1)
                                                        l(1)=plot(alldrops0(drp,1),alldrops0(drp,2),'o','markerfacecolor','k','markersize',2,'markeredgecolor','k');
                                                        numdrops=numdrops+1;
                                                end
                                                tmpminlat=min(alldrops0(:,2));
                                                tmpmaxlat=max(alldrops0(:,2));
                                                tmpminlon=min(alldrops0(:,1));
                                                tmpmaxlon=max(alldrops0(:,1));      
                                                xlim([tmpminlon-2 tmpmaxlon+2])
                                                ylim([tmpminlat-2 tmpmaxlat+2])       
                                            end     
                                            axis([RLON(loop)-15 RLON(loop)+15 STMLAT(loop)-15 STMLAT(loop)+15])
                                            text(.5,.49,'75 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5 ])
                                            text(.5,.43,'250 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5 ])
                                            text(.5,.355,'500 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5 ])
                                            text(.5,.2,'1000 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5 ])
                                            l=legend(l,['Potential Profiles'],'location','northeast');
                                            l.FontSize=10;
                                            hold off
                                            set(gca,'plotboxaspectratio',[1 1 1])
                                            set(gcf, 'InvertHardcopy', 'off')
                                            set(gcf,'Units','inches');
                                            screenposition = get(gcf,'Position');
                                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                            set(gcf, 'InvertHardcopy', 'off')
                                            text(0,1.03,['\textbf{INIT: ',identinittimesunique(identloop,:),' $\mid$ PP=',num2str(max(profiles)),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                            text(0,1.065,['\textbf{Potential ',identsatname,' Profiles}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                            text(1,1.03,['\textbf{',upper(identbasinname{loop}),'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                            text(1,1.065,['\textbf{',identexpshort{loop1},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(loop1,:),'units','normalized');
                                            ax=gca;
                                            box on
                                            set(ax, 'Layer', 'top')
                                            ax.LineWidth=1; 
                                            set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                            f = getframe(hfig);
                                            imwrite(f.cdata,[identtrackint,'/sat_plan_',identinittimesunique(identloop,:),'_',identexpshort{loop1},'.png'],'png');
                                            %print([identtrackint,'/trackcomp_fhr_',num2str((fhr-1)*3),'h'],'-dpdf','-r200');
                                            close all 

                                            %% Individual Channel Graphics
                                            if identindivch==1
                                                if strcmp(identchannel,'all')==1
                                                identchannel=[1:size(flagqc,1)];
                                                end
                                                for loop2=identchannel % user-passed variable
                                                    % Subset Data
                                                    qcflag=flagqc(loop2,:);
                                                    qclat=latqc(loop2,:);
                                                    qclon=lonqc(loop2,:);
                                                    qcch=chqc(loop2,:);
                                                    qclat=qclat(qcflag==0);
                                                    qclon=qclon(qcflag==0);

                                                    % Plot
                                                    set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                                    hfig=figure;
                                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                                    ax1=subplot(3,4,[1:8]);
                                                    h=fill([360,-360,-360,360],[-90,-90,90,90],[.5 .8 1]);
                                                    hold on                                           
                                                    geoshow('borders.shp','FaceColor',[0.9 0.9 0.9]);
                                                    hold on
                                                    states = shaperead('usastatehi', 'UseGeoCoords', true);
                                                    geoshow(states,'FaceColor',[0.9 0.9 0.9]);
                                                    xlabel('Longitude','fontsize',20)
                                                    ylabel('Latitude','fontsize',20)                                   
                                                    set(gca,'fontsize',20)
                                                    fhr=1;                              
                                                    viscircles([RLON(loop) STMLAT(loop)],75/111.11,'Color',[.5 .5 .5 ],'linewidth',.5,'linestyle','--','EnhanceVisibility',0);
                                                    viscircles([RLON(loop) STMLAT(loop)],250/111.11,'Color',[.5 .5 .5 ],'linewidth',.5,'linestyle','--','EnhanceVisibility',0);
                                                    viscircles([RLON(loop) STMLAT(loop)],500/111.11,'Color',[.5 .5 .5 ],'linewidth',.5,'linestyle','--','EnhanceVisibility',0);
                                                    viscircles([RLON(loop) STMLAT(loop)],1000/111.11,'Color',[.5 .5 .5 ],'linewidth',.5,'linestyle','--','EnhanceVisibility',0);
                                                    hold on
                                                    plot(RLON(loop),STMLAT(loop),'o','markerfacecolor',[.5 .5 .5],'markersize',2,'markeredgecolor',[.5 .5 .5]);                
                                                    numdrops=0;
                                                    if sum(~isnan(alldrops0(:)))==0
                                                    else                        
                                                        for drp=1:size(qclat,2)
                                                                l(1)=plot(-1*qclon(drp),qclat(drp),'o','markerfacecolor','k','markersize',2,'markeredgecolor','k');
                                                                numdrops=numdrops+1;
                                                        end
                                                        tmpminlat=min(alldrops0(:,2));
                                                        tmpmaxlat=max(alldrops0(:,2));
                                                        tmpminlon=min(alldrops0(:,1));
                                                        tmpmaxlon=max(alldrops0(:,1));      
                                                        xlim([tmpminlon-2 tmpmaxlon+2])
                                                        ylim([tmpminlat-2 tmpmaxlat+2])       
                                                    end                                                        
                                                    axis([RLON(loop)-15 RLON(loop)+15 STMLAT(loop)-15 STMLAT(loop)+15])
                                                    text(.5,.49,'75 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5 ])
                                                    text(.5,.43,'250 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5 ])
                                                    text(.5,.355,'500 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5 ])
                                                    text(.5,.2,'1000 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5 ])
                                                    l=legend(l,['Profile Locations'],'location','northeast');
                                                    l.FontSize=10;
                                                    hold off
                                                    set(gca,'plotboxaspectratio',[1 1 1])
                                                    set(gcf, 'InvertHardcopy', 'off')
                                                    set(gcf,'Units','inches');
                                                    screenposition = get(gcf,'Position');
                                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                    set(gcf, 'InvertHardcopy', 'off')
                                                    text(0,1.03,['\textbf{INIT: ',identinittimesunique(identloop,:),' $\mid$ P=',num2str(numdrops),'/',num2str(max(profiles)),' $\mid$ C=',num2str(channel(identchannel)),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    text(0,1.065,['\textbf{Assimilated ',identsatname,' Profiles at ',num2str(wavenumber(identchannel)),' cm$^{-1}$ (',num2str(round(10000/wavenumber(identchannel),2)),' $\mu$)}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    text(1,1.03,['\textbf{',upper(identbasinname{loop}),'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    text(1,1.065,['\textbf{',identexpshort{loop1},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(loop1,:),'units','normalized');
                                                    ax=gca;
                                                    box on
                                                    set(ax, 'Layer', 'top')
                                                    ax.LineWidth=1; 
                                                    set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                                    f = getframe(hfig);
                                                    imwrite(f.cdata,[identtrackint,'/sat_plan_C',num2str(channel(identchannel)),'_',identinittimesunique(identloop,:),'_',identexpshort{loop1},'.png'],'png');
                                                    %print([identtrackint,'/trackcomp_fhr_',num2str((fhr-1)*3),'h'],'-dpdf','-r200');
                                                    close all                     
                                                end
                                            end

                                            %% Channels & Profiles                
                                            set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                            hfig=figure;
                                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                            ax1=subplot(3,4,[1:8]);
                                            plot(channel,profiles,'-k','markersize',10)
                                            hold on
                                            plot(channel(usage>0),profiles(usage>0),'.k','markersize',20)
                                            ylabel('Profiles','fontsize',20)
                                            set(gca,'fontsize',16)
                                            text(0,1.065,['\textbf{Assimilated ', identsatname,' Profiles By Channel \& Wavenumber}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                            text(1,1.03,['\textbf{',upper(identbasinname{loop}),'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                            text(1,1.065,['\textbf{',identexpshort{loop1},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(loop1,:),'units','normalized');
                                            text(0,1.03,['\textbf{INIT: ',identinittimesunique(identloop,:),' $\mid$ EC=',num2str(sum(usage>0)),'/',num2str(size(usage,1)),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                            xlim([min(channel) max(channel)])
                                            ax=gca;
                                            box on
                                            set(ax, 'Layer', 'top')
                                            ax.LineWidth=1; 
                                            lg=legend(['All ',num2str(size(usage,1)),' Channels'],'Enabled Channels');
                                            lg.FontSize=10;
                                            ylim([0 round(max(profiles)/100)*100+100])
                                            set(gca,'ytick',[0:100:round(max(profiles)/100)*100+100])
                                            grid on
                                            set(gca,'Color',[.9 .9 .9])
                                            set(gca,'xtick',[channel(1) channel(201) channel(280) channel(322) channel(421) channel(444) channel(511) channel(559) channel(616)])
                                            wavenum=[wavenumber(1) wavenumber(201) wavenumber(280) wavenumber(322) wavenumber(421) wavenumber(444) wavenumber(511) wavenumber(559) wavenumber(616)];
                                            wavelen=[wavelength(1) wavelength(201) wavelength(280) wavelength(322) wavelength(421) wavelength(444) wavelength(511) wavelength(559) wavelength(616)];
                                            xTicks0 = get(gca, 'xticklabel');
                                            xTicks = get(gca, 'xtick');
                                            minY =0;
                                            VerticalOffset1=60;
                                            HorizontalOffset = 0.2;
                                            for xx = 1:size(xTicks0,1)   
                                                text(xTicks(xx), minY - VerticalOffset1,['(',num2str(wavenum(xx)),')'],'horizontalalignment','center','fontsize',10)                    
                                            end
                                            text(.5, -.1,'Channels','horizontalalignment','center','fontsize',16,'units','normalized')                    
                                            text(.5, -.13,'(Wavenumber)','horizontalalignment','center','fontsize',10,'units','normalized')                    
                                            set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                            f = getframe(hfig);
                                            imwrite(f.cdata,[identtrackint,'/sat_channels_',identinittimesunique(identloop,:),'_',identexpshort{loop1},'.png'],'png');
                                            %print([identtrackint,'/trackcomp_fhr_',num2str((fhr-1)*3),'h'],'-dpdf','-r200');
                                            close all

                                            %% Density Map
                                            % Full Density Map - keep this
                                             pall=squeeze(alldrops0(:,3,:));
                                             dall=squeeze(alldrops0(:,4,:));                                
                                             places=[];
                                             denmapall=[];
                                             for drp=1
                                                 %group pressures
                                                 data = pall(:,drp);
                                                 edges = 0:100:1100;
                                                 Y1 = discretize(data,edges);
                                                 %group radial bins
                                                 data=dall(:,drp);
                                                 edges=[0,75,250,10000];
                                                 Y2 = discretize(data,edges);
                                                 places=[Y1 Y2];
                                             end                        
                                             for k=1
                                                 denmap=nan(11,3);
                                                 places0=places;
                                                 for i=1:size(places0,1)
                                                     if isnan(places0(i,1))==1 || isnan(places0(i,2))==1
                                                     else
                                                         denmap(places0(i,1),places0(i,2))=nansum([denmap(places0(i,1),places0(i,2)),1]);
                                                     end
                                                 end
                                                 denmapall=denmap;
                                             end
                                             denmapall(isnan(denmapall))=0;                
                                             denmap=nan(11,3);
                                             denmap=nansum(denmapall,3);                
                                            set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                            hfig=figure;
                                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                            ax1=subplot(3,4,[1:8]);
                                            imagesc((denmap))
                                            xlabel('','fontsize',20)
                                            ylabel('Pressure (hPa)','fontsize',20)                                   
                                            set(gca,'fontsize',20)
                                            set(gca,'xtick',1:3)
                                            set(gca,'xticklabel',{'<75 km','75-250 km','>250 km'});
                                            set(gca,'ytick',0.5:1:12)
                                            set(gca,'yticklabel',{'0','100','200','300','400','500','600','700','800','900','1000','1100'});
                                            colorbar
                                            caxis([0 50])
                                            colormap(flipud(gray(25)))
                                            set(gca, 'YGrid', 'on', 'XGrid', 'off')
                                            hold on
                                            plot(repmat(1.5,1,13),0:12,'k')
                                            plot(repmat(2.5,1,13),0:12,'k')
                                            set(gca,'plotboxaspectratio',[1 1 1])
                                            set(gcf, 'InvertHardcopy', 'off')
                                            set(gcf,'Units','inches');
                                            screenposition = get(gcf,'Position');
                                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                            set(gcf, 'InvertHardcopy', 'off')
                                            text(0,1.03,['\textbf{INIT: ',identinittimesunique(identloop,:),' $\mid$ PP=',num2str(sum(denmap(:))),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                            text(0,1.065,['\textbf{Potential ',identsatname,' Profiles}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                            text(1,1.03,['\textbf{',upper(identbasinname{loop}),'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                            text(1,1.065,['\textbf{',identexpshort{loop1},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(loop1,:),'units','normalized');
                                            for i=1:3
                                                for j=1:11
                                                    if denmap(j,i)>=40
                                                        text(i,j, num2str(denmap(j,i)), 'color','w','HorizontalAlignment', 'Center','fontsize',16)
                                                    else
                                                        text(i,j, num2str(denmap(j,i)), 'HorizontalAlignment', 'Center','fontsize',16)
                                                    end
                                                end
                                            end        
                                            text(0,-.065,['(Tot. #)'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');        
                                            text(.168,-.065,['(',num2str(sum(denmap(:,1))),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');
                                            text(.5,-.065,['(',num2str(sum(denmap(:,2))),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');
                                            text(.832,-.065,['(',num2str(sum(denmap(:,3))),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');        
                                            text(.5,-.1,['Distance from Storm Center'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',22,'interpreter','tex','color','k','units','normalized');
                                            ax=gca;
                                            box on
                                            set(ax, 'Layer', 'top')
                                            ax.LineWidth=1; 
                                            set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                            f = getframe(hfig);
                                            imwrite(f.cdata,[identtrackint,'/sat_az_',identinittimesunique(identloop,:),'_',identexpshort{loop1},'.png'],'png');
                                            close all
                                            alldenmap(loop,loop1)={denmapall};  
                                            RLON2=RLON(loop);
                                            STMLAT2=STMLAT(loop);
                                            identbasinname2={identbasinname{loop}};
                                            alldrops2{loop1}={alldrops0};
                                        end
                                       end
                                    end                  
                                else 
                                    spPos=[0.11 0.13 0.75 0.75]; % arrange plots the same                                                                       
                                    for loop1=1:size(identexp,1)
                                       for loop=1:size(identdr,2)                
                                        alldrops0=alldrops{loop1};
                                        alldrops0=alldrops0{loop};      
                                        channel=allchannel{loop1};
                                        channel=channel{loop}; 
                                        usage=allusage{loop1};
                                        usage=usage{loop};
                                        profiles=allprofiles{loop1};
                                        profiles=profiles{loop};
                                        wavenumber=allwavenumber{loop1};
                                        wavenumber=wavenumber{loop};
                                        wavelength=allwavelength{loop1};
                                        wavelength=wavelength{loop};
                                        flagqc=allflagqc{loop1};
                                        flagqc=flagqc{loop};
                                        latqc=alllatqc{loop1};
                                        latqc=latqc{loop};
                                        lonqc=alllonqc{loop1};
                                        lonqc=lonqc{loop};
                                        chqc=allchqc{loop1};
                                        chqc=chqc{loop};
                                        if isempty(channel)==1
                                            alldenmap(loop,loop1)={[]};  
                                            RLON2=RLON(loop);
                                            STMLAT2=STMLAT(loop);
                                            identbasinname2={identbasinname{loop}};
                                            alldrops2{loop1}={alldrops0};
                                        else                      
                                            numdrops=0;
                                            if sum(~isnan(alldrops0(:)))==0
                                            else                        
                                                for drp=1:size(alldrops0,1)
                                                        %l(1)=plot(alldrops0(drp,1),alldrops0(drp,2),'o','markerfacecolor','k','markersize',2,'markeredgecolor','k');
                                                        numdrops=numdrops+1;
                                                end                                                 
                                            end                                                                                 

                                        %% Density Map
                                        % Full Density Map - keep this
                                             pall=squeeze(alldrops0(:,3,:));
                                             dall=squeeze(alldrops0(:,4,:));                                
                                             places=[];
                                             denmapall=[];
                                             for drp=1
                                                 %group pressures
                                                 data = pall(:,drp);
                                                 edges = 0:100:1100;
                                                 Y1 = discretize(data,edges);
                                                 %group radial bins
                                                 data=dall(:,drp);
                                                 edges=[0,75,250,10000];
                                                 Y2 = discretize(data,edges);
                                                 places=[Y1 Y2];
                                             end                        
                                             for k=1
                                                 denmap=nan(11,3);
                                                 places0=places;
                                                 for i=1:size(places0,1)
                                                     if isnan(places0(i,1))==1 || isnan(places0(i,2))==1
                                                     else
                                                         denmap(places0(i,1),places0(i,2))=nansum([denmap(places0(i,1),places0(i,2)),1]);
                                                     end
                                                 end
                                                 denmapall=denmap;
                                             end
                                             denmapall(isnan(denmapall))=0;                
                                             denmap=nan(11,3);
                                             denmap=nansum(denmapall,3);                                                        
                                            alldenmap(loop,loop1)={denmapall};  
                                            RLON2=RLON(loop);
                                            STMLAT2=STMLAT(loop);
                                            identbasinname2={identbasinname{loop}};
                                            alldrops2{loop1}={alldrops0};
                                        end


                                       end
                                    end  
                                end
                                EXP_loncomp{identloop}=RLON2;
                                EXP_latcomp{identloop}=STMLAT2;
                                EXP_namecomp{identloop}=identbasinname2;
                                alldropscomp{identloop}=alldrops2;
                                alldenmapcomp{identloop}=alldenmap;  
                            end
                            clear identdrops identdropsdat identbasin identbasinname alldrops alldenmap alldenmap_t l lsz
                            clear alldrops0 channel profiles usage wavelength wavenumber identdrops identbasin identbasinname alldrops alldenmap allchannel allprofiles allusage allwavelength allwavenumber
                            clear alldrops0 channel profiles usage wavelength wavenumber flagqc latqc lonqc chqc                        
                        end
                        identbasinnameall=unique(identbasinnameall);

                        %% Composite Basin-Scale                  
                        % Loop over all experiments
                        for exl=1:size(identexp,1)            
                            % Loop over all of the cycles
                            tmp1=[];
                            tmp1_den=[];
                            for cyc=1:size(alldropscomp,2)
                                tmp0_all=alldropscomp{cyc};
                                tmp0_lon=EXP_loncomp{cyc};
                                tmp0_lat=EXP_latcomp{cyc};
                                tmp0_name=EXP_namecomp{cyc};
                                tmp0_denmap=alldenmapcomp{cyc};
                                tmp2_all=tmp0_all{exl};
                                cycleswithdrops=tmp0_all{1};
                                if isempty(cycleswithdrops{:})==1
                                   identdropcyc(cyc)=0;
                                else
                                    identdropcyc(cyc)=1;                        
                                end
                                for i=1:size(tmp2_all,2)
                                    tmp3_lon=tmp0_lon(i); 
                                    tmp3_lat=tmp0_lat(i); 
                                    tmp3_name=tmp0_name{i}; 
                                    tmp3_denmap=tmp0_denmap{i,exl};
                                    tmp3_all=tmp2_all{i};

                                    if isempty(tmp3_all)==1
                                    else                                                
                                        tmp3_all=[tmp3_all(:,1:3) zeros(size(tmp3_all,1),1) tmp3_all(:,4:end)];
                                        tmp3_all(:,3)=repmat(tmp3_lon,size(tmp3_all,1),1);
                                        tmp3_all(:,4)=repmat(tmp3_lat,size(tmp3_all,1),1);
                                        tmp1=cat(1,tmp1,tmp3_all); % all storms for ALL experiment
                                        tmp1_den=cat(3,tmp1_den,tmp3_denmap);
                                    end
                                end
                            end               

                            if isempty(tmp1)==1
                                identinnerdrops(exl)=0;
                                identgalesdrops(exl)=0;
                                identouterdrops(exl)=0;
                            else
                                t=sum(sum(tmp1_den,1),3);
                                identinnerdrops(exl)=t(1);
                                identgalesdrops(exl)=t(2);
                                identouterdrops(exl)=t(3);
                            end

                            for loopdrops=1 % loop over all drops                
                                % Histogram
                                spPos=[0.11 0.13 0.75 0.75]; % arrange plots the same
                                set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                hfig=figure;
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                ax1=subplot(3,4,[1:8]);
                                set(gca,'plotboxaspectratio',[1 1 1])
                                box on
                                set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                hold on
                                clear l
                                if isempty(tmp1)==1
                                        counts=0;
                                        l(1)=plot(0,5000,'.k');
                                else
                                        [counts,centers]=hist(tmp1(:,5),[0:5:2000]);
                                        l(1)=plot(centers,counts,'-k','linewidth',2);            
                                end
                                xlim([-.5 2000])
                                if exl==1
                                    ymaxallbasin=round(max(counts)/100)*100+50;
                                end
                                ylim([0 ymaxallbasin])
                                ll=legend(l,['Potential Profiles'],'location','northeast');
                                ll.FontSize=10;
                                ylabel('Number of Potential Profiles','fontsize',20)                                   
                                xlabel('Radius (km)','fontsize',20)                                   
                                set(gca,'fontsize',20)
                                grid on
                                set(gca,'xtick',0:250:2000)
                                set(gcf, 'InvertHardcopy', 'off')
                                set(gcf,'Units','inches');
                                screenposition = get(gcf,'Position');
                                set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                set(gcf, 'InvertHardcopy', 'off')                       
                                text(0,1.03,['\textbf{INIT: ',identinittimesunique(1,:),'$\mathbf{-}$',identinittimesunique(end,:),' $\mid$ PP=',num2str(size(tmp1,1)),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                text(0,1.065,['\textbf{Potential ',identsatname,' Profiles}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                text(1,1.065,['\textbf{',identexpshort{exl},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(exl,:),'units','normalized');                    
                                ax=gca;
                                set(gca,'Color',[.9 .9 .9])
                                set(ax, 'Layer', 'top')
                                ax.LineWidth=1; 
                                set(gca,'position',[spPos(1)+.035 spPos(2)+.015 spPos(3) spPos(4)-.02])
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                f = getframe(hfig);
                                imwrite(f.cdata,[identtrackint,'/sat_hist_',identexpshort{exl},'.png'],'png');
                                close all    

                                % Create storm-centered reference frame for all dropsonde locations
                                spPos=[0.11 0.13 0.75 0.75]; % arrange plots the same
                                set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                hfig=figure;
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                ax2=subplot(3,4,[1:8]);
                                set(gca,'plotboxaspectratio',[1 1 1])
                                ax2=gca;
                                set(gca,'Color',[.9 .9 .9])
                                box on
                                set(ax2, 'Layer', 'top')
                                ax2.LineWidth=1; 
                                set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                set(gca,'xtick',[])
                                set(gca,'ytick',[])
                                hold on
                                ax1=subplot(3,4,[1:8],polaraxes);
                %                     th = linspace(0,2*pi,75);
                %                     r = 75;
                %                     polarplot(th,r+zeros(size(th)),'Color',[.7 .7 .7],'linewidth',1)
                                 hold on
                %                     th = linspace(0,2*pi,75);
                %                     r = 250;
                %                     polarplot(th,r+zeros(size(th)),'Color',[.7 .7 .7],'linewidth',1)
                                clear l lsz
                                if isempty(tmp1)==1                                
                                        l(1)=polarplot(0,5000,'.k');
                                else
                                        l(1)=polarplot(tmp1(:,6)*pi/180,tmp1(:,5),'.k');
                                end
                                ll=legend(l,['Potential Profiles'],'location','northeast');
                                ll.FontSize=10;
                                ax1.ThetaDir = 'clockwise';
                                ax1.ThetaZeroLocation = 'top';
                                ax1.RLim=[0 1600];
                                ax1.ThetaTick = [];
                                rticks([75 250 500 1000 1500])
                                rticklabels({})
                                thetaticklabels({}) 
                                ax1.GridLineStyle = '--';
                                ax1.ThetaColor=[.9 .9 .9];
                                ax1.GridAlpha = 1;
                                ax1.GridColor=[.7 .7 .7];
                                set(gcf, 'InvertHardcopy', 'off')
                                set(gcf,'Units','inches');
                                screenposition = get(gcf,'Position');
                                set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                set(gcf, 'InvertHardcopy', 'off')   
                                text(.5,.484,'75 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])
                                text(.5,.426,'250 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])
                                text(.5,.347,'500 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])
                                text(.5,.19,'1000 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])
                                text(.5,.034,'1500 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])
                                text(0,1.03,['\textbf{INIT: ',identinittimesunique(1,:),'$\mathbf{-}$',identinittimesunique(end,:),' $\mid$ PP=',num2str(size(tmp1,1)),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                text(0,1.065,['\textbf{Potential ',identsatname,' Profiles}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                text(1,1.065,['\textbf{',identexpshort{exl},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(exl,:),'units','normalized');                    
                                ax=gca;
                                set(gca,'Color',[.9 .9 .9])
                                set(ax, 'Layer', 'top')
                                ax1.LineWidth=1; 
                                set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window                    
                                f = getframe(hfig);                    
                                imwrite(f.cdata,[identtrackint,'/sat_plan_',identexpshort{exl},'.png'],'png');
                                close all                            

                                %% Density Map                
                                set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                hfig=figure;
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                ax1=subplot(3,4,[1:8]);  
                                if isempty(tmp1_den)==1
                                    tmp1_den=zeros(11,3);
                                end               
                                identvals=sum(sum(tmp1_den,1),3);
                                imagesc(sum(tmp1_den,3))
                                xlabel('','fontsize',20)
                                ylabel('Pressure (hPa)','fontsize',20)                                   
                                set(gca,'fontsize',20)
                                set(gca,'xtick',1:3)
                                set(gca,'xticklabel',{'<75 km','75-250 km','>250 km'});
                                set(gca,'ytick',0.5:1:12)
                                set(gca,'yticklabel',{'0','100','200','300','400','500','600','700','800','900','1000','1100'});
                                colorbar
                                caxis([0 250])
                                colormap(flipud(gray(25)))
                                set(gca, 'YGrid', 'on', 'XGrid', 'off')
                                hold on
                                plot(repmat(1.5,1,13),0:12,'k')
                                plot(repmat(2.5,1,13),0:12,'k')
                                set(gca,'plotboxaspectratio',[1 1 1])
                                set(gcf, 'InvertHardcopy', 'off')
                                set(gcf,'Units','inches');
                                screenposition = get(gcf,'Position');
                                set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                set(gcf, 'InvertHardcopy', 'off')
                                tmpsum=sum(identvals);                
                                text(0,1.03,['\textbf{INIT: ',identinittimesunique(1,:),'$\mathbf{-}$',identinittimesunique(end,:),' $\mid$ PP=',num2str(size(tmp1,1)),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                text(0,1.065,['\textbf{Potential ',identsatname,' Profiles}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                text(1,1.065,['\textbf{',identexpshort{exl},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(exl,:),'units','normalized');                    
                                tmpsum=sum(tmp1_den,3);                
                                for i=1:3
                                    for j=1:11
                                        if tmpsum(j,i)>=200
                                            text(i,j, num2str(tmpsum(j,i)),'color','w','HorizontalAlignment', 'Center','fontsize',16)
                                        else
                                            text(i,j, num2str(tmpsum(j,i)), 'HorizontalAlignment', 'Center','fontsize',16)
                                        end
                                    end
                                end        
                                text(0,-.065,['(Tot. #)'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');        
                                text(.168,-.065,['(',num2str(identvals(1)),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');
                                text(.5,-.065,['(',num2str(identvals(2)),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');
                                text(.832,-.065,['(',num2str(identvals(3)),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');        
                                text(.5,-.1,['Distance from Storm Center'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',22,'interpreter','tex','color','k','units','normalized');
                                ax=gca;
                                box on
                                set(ax, 'Layer', 'top')
                                ax.LineWidth=1; 
                                set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                f = getframe(hfig);
                                imwrite(f.cdata,[identtrackint,'/sat_az_',identexpshort{exl},'.png'],'png');
                                close all                
                            end        
                            valuescomp{exl}=tmp1;
                            denmapcomp{exl}=tmp1_den;
                            listcomp{exl}=tmp1;
                        end

                        if ~exist([identout,'RESULTS/',identfold,'VERIFICATION/OBS/'], 'dir')
                            mkdir([identout,'RESULTS/',identfold,'VERIFICATION/OBS/'])
                        end
                        identdroplist={identn identinnerdrops identgalesdrops identouterdrops};
                        save([identout,'RESULTS/',identfold,'VERIFICATION/OBS/',identn,'_sat.mat'],'identdroplist','identdropcyc','valuescomp','denmapcomp','listcomp','-v7.3')
                        close all

                        %% Track with Obs
                        for track=1
                            clear l cntexp
                            spPos=[0.11 0.13 0.75 0.75]; % arrange plots the same
                            set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                            hfig=figure;
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                            ax1=subplot(3,4,[1:8]);
                            hold on
                            load coastlines
                            for i=1:size(CATall,1)
                                if strcmp(CATall(i,:),'WV')==1 || strcmp(CATall(i,:),'EX')==1 || strcmp(CATall(i,:),'LO')==1 || strcmp(CATall(i,:),'DB')==1 || strcmp(CATall(i,:),'SD')==1 || strcmp(CATall(i,:),'SS')==1
                                    SPEEDall(i)=-1;
                                end
                            end         
                            h=fill([180,-180,-180,180],[-90,-90,90,90],[.5 .8 1]);
                            hold on
                            geoshow('borders.shp','FaceColor',[0.9 0.9 0.9]);
                            hold on
                            states = shaperead('usastatehi', 'UseGeoCoords', true);
                            geoshow(states,'FaceColor',[0.9 0.9 0.9]);
                            tmpminlat=min(LATall(:));
                            tmpmaxlat=max(LATall(:));
                            tmpminlon=min(LONall(:));
                            tmpmaxlon=max(LONall(:));
                            tmplat=tmpmaxlat+5-(tmpminlat-5);
                            tmplon=tmpmaxlon+5-(tmpminlon-5);
                            difftmp=tmplat-tmplon;
                            if difftmp<0 % longitude is wider than latitude
                                diffmult=tmplon/2;
                                diffmid=(tmpmaxlat+5+(tmpminlat-5))/2;
                                xlim([tmpminlon-5 tmpmaxlon+5])
                                x_dist=(tmpminlon-5)-(tmpmaxlon+5);
                                x_mean=((tmpminlon-5)+(tmpmaxlon+5))/2;
                                ylim([diffmid-diffmult diffmid+diffmult])
                                y_dist=(diffmid-diffmult)-(diffmid+diffmult);
                                y_mean=((diffmid-diffmult)-(diffmid+diffmult))/2;
                            else         % latitude is wider than longitude
                                diffmult=tmplat/2;
                                diffmid=(tmpmaxlon+5+(tmpminlon-5))/2;
                                xlim([tmpminlon-diffmult tmpmaxlon+diffmult])
                                x_dist=(tmpminlon-diffmult)-(tmpmaxlon+diffmult);
                                x_mean=((tmpminlon-diffmult)+(tmpmaxlon+diffmult))/2;
                                ylim([tmpminlat-15 tmpmaxlat+15])
                                y_dist=(tmpminlat-5)-(tmpmaxlat+5);
                                y_mean=((tmpminlat-5)+(tmpmaxlat+5))/2;
                            end
                            c_adj=cosd(y_mean);
                            c_dist=abs(x_dist*c_adj/2);
                            c_mid=x_mean;
                            xlim([c_mid-c_dist-15 c_mid+c_dist+15])
                            hold on
                            xlabel('Longitude','fontsize',20)
                            ylabel('Latitude','fontsize',20)                                   
                            set(gca,'fontsize',18)  
                            set(gca,'xtick',-180:10:180)
                            set(gca,'ytick',-90:5:90)
                            plot(LONall,LATall,'-k','linewidth',4);
                            hold on
                            azavcm=jet(7);
                            for i=1:length(LONall)
                                if SPEEDall(i) > 0 && SPEEDall(i) < 34 
                                    plot(LONall(i),LATall(i),'.','color',azavcm(2,:),'markersize',12);            
                                elseif SPEEDall(i) > 33 && SPEEDall(i) < 65 
                                    plot(LONall(i),LATall(i),'.','color',azavcm(3,:),'markersize',12);            
                                elseif SPEEDall(i) > 64 && SPEEDall(i) < 84 
                                    plot(LONall(i),LATall(i),'.','color',azavcm(4,:),'markersize',12);            
                                elseif SPEEDall(i) > 83 && SPEEDall(i) < 96 
                                    plot(LONall(i),LATall(i),'.','color',azavcm(5,:),'markersize',12);            
                                elseif SPEEDall(i) > 95 && SPEEDall(i) < 114 
                                    plot(LONall(i),LATall(i),'.','color',azavcm(6,:),'markersize',12);            
                                elseif SPEEDall(i) >113 && SPEEDall(i) < 135 
                                    plot(LONall(i),LATall(i),'.','color',azavcm(7,:),'markersize',12);           
                                elseif SPEEDall(i) > 134
                                    plot(LONall(i),LATall(i),'.','color','m','markersize',12); 
                                elseif strcmp(CATall(i,:),'LO')==1 || strcmp(CATall(i,:),'DB')==1 || strcmp(CATall(i,:),'WV')==1
                                    plot(LONall(i),LATall(i),'.','color',[.5 .5 .5],'markersize',12);             
                                elseif strcmp(CATall(i,:),'SD')==1 || strcmp(CATall(i,:),'SS')==1
                                    plot(LONall(i),LATall(i),'s','color',[.5 .5 .5],'markersize',4,'markerfacecolor',[.5 .5 .5]);                 
                                elseif strcmp(CATall(i,:),'EX')==1
                                    plot(LONall(i),LATall(i),'d','color',[.5 .5 .5],'markersize',3,'markerfacecolor',[.5 .5 .5]);                 
                                end
                            end
                            for i=1:length(LONall)
                                if strcmp(DATEall(i,9:10),'00')==1
                                    plot(LONall(i),LATall(i),'o','markerfacecolor','w','markeredgecolor','k','markersize',6); 
                                end
                            end                     
                            set(gca,'plotboxaspectratio',[1 1 1])
                            set(gcf, 'InvertHardcopy', 'off')             
                            set(gca,'fontsize',20)
                            box on
                            set(gcf,'Units','inches');
                            a1Pos = get(gca,'Position');
                            set(gcf, 'InvertHardcopy', 'off')
                            set(gcf,'Units','inches');
                            screenposition = get(gcf,'Position');
                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                            set(gcf, 'InvertHardcopy', 'off')
                            text(0,1.065,['\textbf{Track, Intensity, \& Potential ',identsatname,' Profiles}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                            ax=gca;
                            box on
                            set(ax, 'Layer', 'bottom')
                            ax.LineWidth=1; 
                            ax=gca;
                            box on
                            set(ax, 'Layer', 'top')
                            hold on
                            plotdrops=[];
                            for i=1:size(alldropscomp,2)
                                tmpd=alldropscomp{i};
                                tmpp=tmpd{1};
                                tmpp=tmpp{:};
                                plotdrops=cat(1,plotdrops,tmpp);
                            end
                            latpd=plotdrops(:,2);
                            lonpd=plotdrops(:,1);
                            clear l lsz
                            if isempty(lonpd)==1
                                    l(1)=plot(-360,-360,'x','color',[.5 0 .6],'markersize',2);
                            else
                                    l(1)=plot(lonpd,latpd,'x','color',[.5 0 .6],'markersize',2);
                            end
                            text(0,1.03,['\textbf{DATES: ',DATEall(1,:),'$\mathbf{-}$',DATEall(end,:),' $\mid$ PP=',num2str(size(lonpd,1)),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            ax.LineWidth=1; 
                            l(1)=plot(-200,-100,'o','markerfacecolor','w','markeredgecolor','k','markersize',8); 
                            l(2)=plot(-200,-100,'.','color',[.5 .5 .5],'markersize',25); 
                            l(3)=plot(-200,-100,'s','markerfacecolor',[.5 .5 .5],'markeredgecolor',[.5 .5 .5],'markersize',8); 
                            l(4)=plot(-200,-100,'d','markerfacecolor',[.5 .5 .5],'markeredgecolor',[.5 .5 .5],'markersize',6); 
                            l(5)=plot(-200,-100,'.','color',azavcm(2,:),'markersize',25);
                            l(6)=plot(-200,-100,'.','color',azavcm(3,:),'markersize',25);
                            l(7)=plot(-200,-100,'.','color',azavcm(4,:),'markersize',25);
                            l(8)=plot(-200,-100,'.','color',azavcm(5,:),'markersize',25);
                            l(9)=plot(-200,-100,'.','color',azavcm(6,:),'markersize',25);
                            l(10)=plot(-200,-100,'.','color',azavcm(7,:),'markersize',25);
                            l(11)=plot(-200,-100,'.','color','m','markersize',25);
                            l(12)=plot(-200,-100,'x','color',[.5 0 .6],'markersize',6);
                            legend off
                            lh=legend(l,'0000 UTC','WV/DB/LO','SD/SS','EX','TD','TS','C1','C2','C3','C4','C5','Obs','orientation','vertical');
                            lh.FontSize=10;     
                            set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                            f = getframe(hfig);
                            imwrite(f.cdata,[identtrackint,'/',identn,'_track_withobs.png'],'png');    
                        end

                        clearvars -except identbasinmodel identsatobs identgraphicssat identsatid identsatname identindivch identchannel identsatobs identindivstorm identcomposite identstormsdone identconvtype identconvcolors identconvlegend identns* identnewsub identgraphicsconv identgraphicsbycycle identconvid  ident* stormsdone yearsdone identdiff identremoveex identremoveinv identcycles identmaxfhr identlevels identexp identexpshort identexpsigimp identexpsigimpshort identexpcolors identscrub identgroovpr identout identconv
                    end
                end

                %% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%
                %% By Cycle (Individual & All) and By Forecast Hour (Errors, EDiffs, Imprv) %%
                %% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%
                for graphics=1
                        clear l 
                        % Parameters
                        trkerr_sz=0; % find longest lead time - initialize value
                        spPos=[0.11 0.13+.05 0.75 0.75-.05]; % arrange plots the same
                        clPos=[0.88 0.13+.05 0.04 0.75-.05]; % arrange plots the same
                        % Initialize BT
                        BT_lon=nan(size(identinittimesunique,1),identmaxfhr);
                        BT_lat=nan(size(identinittimesunique,1),identmaxfhr);
                        BT_maxspd=nan(size(identinittimesunique,1),identmaxfhr);
                        BT_minpres=nan(size(identinittimesunique,1),identmaxfhr);
                        BT_ne34=nan(size(identinittimesunique,1),identmaxfhr);
                        BT_ne50=nan(size(identinittimesunique,1),identmaxfhr);
                        BT_ne64=nan(size(identinittimesunique,1),identmaxfhr);
                        BT_se34=nan(size(identinittimesunique,1),identmaxfhr);
                        BT_se50=nan(size(identinittimesunique,1),identmaxfhr);
                        BT_se64=nan(size(identinittimesunique,1),identmaxfhr);
                        BT_sw34=nan(size(identinittimesunique,1),identmaxfhr);
                        BT_sw50=nan(size(identinittimesunique,1),identmaxfhr);
                        BT_sw64=nan(size(identinittimesunique,1),identmaxfhr);
                        BT_nw34=nan(size(identinittimesunique,1),identmaxfhr);
                        BT_nw50=nan(size(identinittimesunique,1),identmaxfhr);
                        BT_nw64=nan(size(identinittimesunique,1),identmaxfhr);
                        BT_po=nan(size(identinittimesunique,1),identmaxfhr);
                        BT_ro=nan(size(identinittimesunique,1),identmaxfhr);
                        BT_rmw=nan(size(identinittimesunique,1),identmaxfhr);         

                        % Initialize EXP
                        EXP_lon=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        EXP_lat=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        EXP_maxspd=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        EXP_minpres=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        EXP_ne34=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        EXP_ne50=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        EXP_ne64=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        EXP_se34=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        EXP_se50=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        EXP_se64=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        EXP_sw34=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        EXP_sw50=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        EXP_sw64=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        EXP_nw34=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        EXP_nw50=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        EXP_nw64=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        EXP_po=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        EXP_ro=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        EXP_rmw=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));         

                        % Initialize Errors
                        ateerr_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        xteerr_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        trkerr_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        interr_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        spderr_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        ne34err_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        se34err_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        sw34err_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        nw34err_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        ne50err_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        se50err_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        sw50err_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        nw50err_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        ne64err_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        se64err_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        sw64err_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        nw64err_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        poerr_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        roerr_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));
                        rmwerr_exp=nan(size(identinittimesunique,1),identmaxfhr,size(identexp,1));

                        % Individual Cycles
                        for identloop=1:size(identinittimesunique,1)
                            load([identout,'RESULTS/',identfold,'VERIFICATION/',identremovename,'/',ident(1:2),'/',identn,'/',identn,'_data.mat'])
                            for i=1:size(DATEall,1)
                                if strcmp(identinittimesunique(identloop,:),DATEall(i,:))==1
                                    initnum=i
                                end
                            end
                            if exist('initnum','var')==0 %% to take care of invests not in BT
                            else
                                %% BT
                                initsize=size(DATEall,1)-initnum+1;
                                bt_date=DATEall(initnum:end,:);
                                bt_cat=CATall(initnum:end,:);
                                bt_lat=LATall(initnum:end);
                                bt_lon=LONall(initnum:end);
                                bt_maxspd=SPEEDall(initnum:end);
                                bt_minpres=PRESSall(initnum:end);
                                bt_ne34=NE34all(initnum:end);
                                bt_ne50=NE50all(initnum:end);
                                bt_ne64=NE64all(initnum:end);
                                bt_se34=SE34all(initnum:end);
                                bt_se50=SE50all(initnum:end);
                                bt_se64=SE64all(initnum:end);
                                bt_sw34=SW34all(initnum:end);
                                bt_sw50=SW50all(initnum:end);
                                bt_sw64=SW64all(initnum:end);
                                bt_nw34=NW34all(initnum:end);
                                bt_nw50=NW50all(initnum:end);
                                bt_nw64=NW64all(initnum:end);
                                bt_po=POall(initnum:end);
                                bt_ro=ROall(initnum:end);
                                bt_rmw=RMWall(initnum:end); 

                                %% EXP - grab stats file
                                % Initialize Individual
                                exp_fhr=nan(100,size(identexp,1));
                                exp_lon=nan(100,size(identexp,1));
                                exp_lat=nan(100,size(identexp,1));
                                exp_minpres=nan(100,size(identexp,1));
                                exp_maxspd=nan(100,size(identexp,1));                   
                                exp_ne34=nan(100,size(identexp,1));
                                exp_ne50=nan(100,size(identexp,1));
                                exp_ne64=nan(100,size(identexp,1));
                                exp_se34=nan(100,size(identexp,1));
                                exp_se50=nan(100,size(identexp,1));
                                exp_se64=nan(100,size(identexp,1));
                                exp_sw34=nan(100,size(identexp,1));
                                exp_sw50=nan(100,size(identexp,1));
                                exp_sw64=nan(100,size(identexp,1));
                                exp_nw34=nan(100,size(identexp,1));
                                exp_nw50=nan(100,size(identexp,1));
                                exp_nw64=nan(100,size(identexp,1));
                                exp_po=nan(100,size(identexp,1));
                                exp_ro=nan(100,size(identexp,1));
                                exp_rmw=nan(100,size(identexp,1)); 
                                % Loop
                                for tmp=1:size(identexp,1)                
                        	filename = [identgroovpr,identexp{tmp},'/atcf/',identtmp1,'.',identinittimesunique(identloop,:),'.trak.hwrf.atcfunix'];
                                    [identhemi,DATEall,BASINall,NAMEall,CATall,LATall,POall,SE50all,LONall,PRESSall,SE64all,NE34all,RAD34all,SPEEDall,NE50all,RAD50all,SW34all,NE64all,RAD64all,SW50all,NW34all,RMWall,SW64all,NW50all,ROall,NW64all,SE34all,FHRall]=atcf(filename,0);
                                    initsizeexp=size(FHRall,2);
                                    exp_fhr(1:initsizeexp,tmp)=FHRall';
                                    exp_lon(1:initsizeexp,tmp)=LONall;
                                    exp_lat(1:initsizeexp,tmp)=LATall;
                                    exp_minpres(1:initsizeexp,tmp)=PRESSall;
                                    exp_maxspd(1:initsizeexp,tmp)=SPEEDall;                    
                                    exp_ne34(1:initsizeexp,tmp)=NE34all;
                                    exp_ne50(1:initsizeexp,tmp)=NE50all;
                                    exp_ne64(1:initsizeexp,tmp)=NE64all;
                                    exp_se34(1:initsizeexp,tmp)=SE34all;
                                    exp_se50(1:initsizeexp,tmp)=SE50all;
                                    exp_se64(1:initsizeexp,tmp)=SE64all;
                                    exp_sw34(1:initsizeexp,tmp)=SW34all;
                                    exp_sw50(1:initsizeexp,tmp)=SW50all;
                                    exp_sw64(1:initsizeexp,tmp)=SW64all;
                                    exp_nw34(1:initsizeexp,tmp)=NW34all;
                                    exp_nw50(1:initsizeexp,tmp)=NW50all;
                                    exp_nw64(1:initsizeexp,tmp)=NW64all;
                                    exp_po(1:initsizeexp,tmp)=POall;
                                    exp_ro(1:initsizeexp,tmp)=ROall;
                                    exp_rmw(1:initsizeexp,tmp)=RMWall;                    
                                end  
                                % Cut off rows with NaNs to make lengths equal
                                exp_lon(any(isnan(exp_fhr), 2), :) = [];
                                exp_lat(any(isnan(exp_fhr), 2), :) = [];
                                exp_minpres(any(isnan(exp_fhr), 2), :) = [];
                                exp_maxspd(any(isnan(exp_fhr), 2), :) = [];                  
                                exp_ne34(any(isnan(exp_fhr), 2), :) = [];
                                exp_ne50(any(isnan(exp_fhr), 2), :) = [];
                                exp_ne64(any(isnan(exp_fhr), 2), :) = [];
                                exp_se34(any(isnan(exp_fhr), 2), :) = [];
                                exp_se50(any(isnan(exp_fhr), 2), :) = [];
                                exp_se64(any(isnan(exp_fhr), 2), :) = [];
                                exp_sw34(any(isnan(exp_fhr), 2), :) = [];
                                exp_sw50(any(isnan(exp_fhr), 2), :) = [];
                                exp_sw64(any(isnan(exp_fhr), 2), :) = [];
                                exp_nw34(any(isnan(exp_fhr), 2), :) = [];
                                exp_nw50(any(isnan(exp_fhr), 2), :) = [];
                                exp_nw64(any(isnan(exp_fhr), 2), :) = [];
                                exp_po(any(isnan(exp_fhr), 2), :) = [];
                                exp_ro(any(isnan(exp_fhr), 2), :) = [];
                                exp_rmw(any(isnan(exp_fhr), 2), :) = []; 
                                exp_fhr(any(isnan(exp_fhr), 2), :) = [];
                                % Measure size
                                initsizeexp=size(exp_lon,1);                
                                % Make BT and EXP same size
                                if initsize>initsizeexp                    
                                    bt_cat=bt_cat(1:initsizeexp,:);
                                    bt_lon=bt_lon(1:initsizeexp);
                                    bt_lat=bt_lat(1:initsizeexp);
                                    bt_minpres=bt_minpres(1:initsizeexp);
                                    bt_maxspd=bt_maxspd(1:initsizeexp);
                                    bt_date=bt_date(1:initsizeexp,:);                    
                                    bt_ne34=bt_ne34(1:initsizeexp);
                                    bt_ne50=bt_ne50(1:initsizeexp);
                                    bt_ne64=bt_ne64(1:initsizeexp);
                                    bt_se34=bt_se34(1:initsizeexp);
                                    bt_se50=bt_se50(1:initsizeexp);
                                    bt_se64=bt_se64(1:initsizeexp);
                                    bt_sw34=bt_sw34(1:initsizeexp);
                                    bt_sw50=bt_sw50(1:initsizeexp);
                                    bt_sw64=bt_sw64(1:initsizeexp);
                                    bt_nw34=bt_nw34(1:initsizeexp);
                                    bt_nw50=bt_nw50(1:initsizeexp);
                                    bt_nw64=bt_nw64(1:initsizeexp);
                                    bt_po=bt_po(1:initsizeexp);
                                    bt_ro=bt_ro(1:initsizeexp);
                                    bt_rmw=bt_rmw(1:initsizeexp);   
                                    initsize=initsizeexp;
                                else
                                    exp_fhr=exp_fhr(1:initsize,:);
                                    exp_lon=exp_lon(1:initsize,:);
                                    exp_lat=exp_lat(1:initsize,:);
                                    exp_minpres=exp_minpres(1:initsize,:);
                                    exp_maxspd=exp_maxspd(1:initsize,:);
                                    exp_ne34=exp_ne34(1:initsize,:);
                                    exp_ne50=exp_ne50(1:initsize,:);
                                    exp_ne64=exp_ne64(1:initsize,:);
                                    exp_se34=exp_se34(1:initsize,:);
                                    exp_se50=exp_se50(1:initsize,:);
                                    exp_se64=exp_se64(1:initsize,:);
                                    exp_sw34=exp_sw34(1:initsize,:);
                                    exp_sw50=exp_sw50(1:initsize,:);
                                    exp_sw64=exp_sw64(1:initsize,:);
                                    exp_nw34=exp_nw34(1:initsize,:);
                                    exp_nw50=exp_nw50(1:initsize,:);
                                    exp_nw64=exp_nw64(1:initsize,:);
                                    exp_po=exp_po(1:initsize,:);
                                    exp_ro=exp_ro(1:initsize,:);
                                    exp_rmw=exp_rmw(1:initsize,:);   
                                end         

                                %% Turn missing spots into NaNs
                                exp_ne34(exp_ne34==0)=NaN;
                                exp_ne50(exp_ne50==0)=NaN;
                                exp_ne64(exp_ne64==0)=NaN;
                                exp_se34(exp_se34==0)=NaN;
                                exp_se50(exp_se50==0)=NaN;
                                exp_se64(exp_se64==0)=NaN;
                                exp_sw34(exp_sw34==0)=NaN;
                                exp_sw50(exp_sw50==0)=NaN;
                                exp_sw64(exp_sw64==0)=NaN;
                                exp_nw34(exp_nw34==0)=NaN;
                                exp_nw50(exp_nw50==0)=NaN;
                                exp_nw64(exp_nw64==0)=NaN;
                                exp_po(exp_po<0)=NaN;
                                exp_ro(exp_ro<0)=NaN;
                                bt_ne34(bt_ne34==0)=NaN;
                                bt_ne50(bt_ne50==0)=NaN;
                                bt_ne64(bt_ne64==0)=NaN;
                                bt_se34(bt_se34==0)=NaN;
                                bt_se50(bt_se50==0)=NaN;
                                bt_se64(bt_se64==0)=NaN;
                                bt_sw34(bt_sw34==0)=NaN;
                                bt_sw50(bt_sw50==0)=NaN;
                                bt_sw64(bt_sw64==0)=NaN;
                                bt_nw34(bt_nw34==0)=NaN;
                                bt_nw50(bt_nw50==0)=NaN;
                                bt_nw64(bt_nw64==0)=NaN;                
                                bt_po(bt_po<0)=NaN;
                                bt_ro(bt_ro<0)=NaN;

                                %% Save lat/lons
                                for ct=1:size(bt_cat,1)
                                    BT_cat(identloop,ct)={bt_cat(ct,:)};
                                end
                                BT_lon(identloop,1:size(bt_lon,2))=bt_lon;
                                BT_lat(identloop,1:size(bt_lat,2))=bt_lat;
                                BT_maxspd(identloop,1:size(bt_maxspd,2))=bt_maxspd;
                                BT_minpres(identloop,1:size(bt_minpres,2))=bt_minpres;                
                                BT_ne34(identloop,1:size(bt_lon,2))=bt_ne34;
                                BT_ne50(identloop,1:size(bt_lon,2))=bt_ne50;
                                BT_ne64(identloop,1:size(bt_lon,2))=bt_ne64;
                                BT_se34(identloop,1:size(bt_lon,2))=bt_se34;
                                BT_se50(identloop,1:size(bt_lon,2))=bt_se50;
                                BT_se64(identloop,1:size(bt_lon,2))=bt_se64;
                                BT_sw34(identloop,1:size(bt_lon,2))=bt_sw34;
                                BT_sw50(identloop,1:size(bt_lon,2))=bt_sw50;
                                BT_sw64(identloop,1:size(bt_lon,2))=bt_sw64;
                                BT_nw34(identloop,1:size(bt_lon,2))=bt_nw34;
                                BT_nw50(identloop,1:size(bt_lon,2))=bt_nw50;
                                BT_nw64(identloop,1:size(bt_lon,2))=bt_nw64;
                                BT_po(identloop,1:size(bt_lon,2))=bt_po;
                                BT_ro(identloop,1:size(bt_lon,2))=bt_ro;
                                BT_rmw(identloop,1:size(bt_lon,2))=bt_rmw; 
                                EXP_lon(identloop,1:size(exp_lon,1),:)=exp_lon;
                                EXP_lat(identloop,1:size(exp_lat,1),:)=exp_lat;
                                EXP_maxspd(identloop,1:size(exp_maxspd,1),:)=exp_maxspd;
                                EXP_minpres(identloop,1:size(exp_minpres,1),:)=exp_minpres;
                                EXP_ne34(identloop,1:size(exp_lon,1),:)=exp_ne34;
                                EXP_ne50(identloop,1:size(exp_lon,1),:)=exp_ne50;
                                EXP_ne64(identloop,1:size(exp_lon,1),:)=exp_ne64;
                                EXP_se34(identloop,1:size(exp_lon,1),:)=exp_se34;
                                EXP_se50(identloop,1:size(exp_lon,1),:)=exp_se50;
                                EXP_se64(identloop,1:size(exp_lon,1),:)=exp_se64;
                                EXP_sw34(identloop,1:size(exp_lon,1),:)=exp_sw34;
                                EXP_sw50(identloop,1:size(exp_lon,1),:)=exp_sw50;
                                EXP_sw64(identloop,1:size(exp_lon,1),:)=exp_sw64;
                                EXP_nw34(identloop,1:size(exp_lon,1),:)=exp_nw34;
                                EXP_nw50(identloop,1:size(exp_lon,1),:)=exp_nw50;
                                EXP_nw64(identloop,1:size(exp_lon,1),:)=exp_nw64;
                                EXP_po(identloop,1:size(exp_lon,1),:)=exp_po;
                                EXP_ro(identloop,1:size(exp_lon,1),:)=exp_ro;
                                EXP_rmw(identloop,1:size(exp_lon,1),:)=exp_rmw;   

                                % Across- and Along-Track Errors
                                for exp=1:size(identexp,1)
                                    for acal=2:size(bt_lon,2)
                                        % Set points
                                        bt_lonn1=bt_lon(acal-1);
                                        bt_latn1=bt_lat(acal-1);
                                        bt_lon0=bt_lon(acal);
                                        bt_lat0=bt_lat(acal);       
                                        exp_lon0=exp_lon(acal,exp);
                                        exp_lat0=exp_lat(acal,exp);
                                        % Fine perpendicular coordinates from point to line                
                                        a = [bt_lonn1, bt_latn1]; %line - x1
                                        b = [bt_lon0, bt_lat0]; % line - x2
                                        c = [exp_lon0, exp_lat0]; %point - x0
                                        ab = b - a; %// Find x2 - x1
                                        %// -(x1 - x0).(x2 - x1) / (|x2 - x1|^2)
                                        t = -(a - c)*(ab.') / (ab*ab.'); %// Calculate t
                                        %// Find point of intersection
                                        Xinter = a + (b - a)*t;
                                        int_lon0=Xinter(1);
                                        int_lat0=Xinter(2);            
                                        % BT0 to GH0 (hypotenuse)
                                        dist_BT0GH0=deg2km(distance('gc',[bt_lat0,bt_lon0],[exp_lat0,exp_lon0]));
                                        dist_BTn1int0=deg2km(distance('gc',[bt_latn1,bt_lonn1],[int_lat0,int_lon0]));
                                        dist_BTn1BT0=deg2km(distance('gc',[bt_latn1,bt_lonn1],[bt_lat0,bt_lon0]));
                                        % Across-Track Error: GH0 to intersection point
                                        XTE=deg2km(distance('gc',[int_lat0,int_lon0],[exp_lat0,exp_lon0]));                     
                                        % Position Left Right:
                                        % if value > 0, p2 is on the left side of the line.
                                        % if value = 0, p2 is on the same line.
                                        % if value < 0, p2 is on the right side of the line.
                                        value = (bt_lon0 - bt_lonn1).*(exp_lat0 - bt_latn1) - (exp_lon0 - bt_lonn1).*(bt_lat0 - bt_latn1);
                                        if value > 0
                                           XTE=XTE*-1;
                                        end
                                        % Along-Track Error
                                        ATE=deg2km(distance('gc',[bt_lat0,bt_lon0],[int_lat0,int_lon0]));
                                        % Distance from n1 to int and n1 to bt0. which is longer? 
                                        if dist_BTn1BT0 > dist_BTn1int0
                                           ATE=-1.*ATE; 
                                        end        
                                        ateerr_exp(identloop,acal,exp)=ATE;
                                        xteerr_exp(identloop,acal,exp)=XTE;
                                    end
                                end                

                                if identgraphicsbycycle==1
                                    % Plot Tracks
                                    for plt_trk=1
                                            set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                            hfig=figure;
                                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                            ax1=subplot(3,4,[1:8]);
                                            h=fill([180,-180,-180,180],[-90,-90,90,90],[.5 .8 1]);
                                            hold on                                           
                                            geoshow('borders.shp','FaceColor',[0.9 0.9 0.9]);
                                            hold on
                                            states = shaperead('usastatehi', 'UseGeoCoords', true);
                                            geoshow(states,'FaceColor',[0.9 0.9 0.9]);
                                            tmpminlat=min([bt_lat(:); exp_lat(:)]);
                                            tmpmaxlat=max([bt_lat(:); exp_lat(:)]);
                                            tmpminlon=min([bt_lon(:); exp_lon(:)]);
                                            tmpmaxlon=max([bt_lon(:); exp_lon(:)]);
                                            xlim([tmpminlon-5 tmpmaxlon+5])
                                            ylim([tmpminlat-5 tmpmaxlat+5])
                                            xlabel('Longitude','fontsize',20)
                                            ylabel('Latitude','fontsize',20)                                   
                                            set(gca,'fontsize',20)
                                            l(1)=plot(bt_lon,bt_lat,'-sk','markerfacecolor','k','markersize',2,'linewidth',2);
                                            for tmp=1:size(identexp,1)
                                                l(tmp+1)=plot(exp_lon(:,tmp),exp_lat(:,tmp),'-s','Color',identexpcolors(tmp,:),'markerfacecolor',identexpcolors(tmp,:),'markersize',2,'linewidth',2);                       
                                            end
                                            hold off                        
                                            lh=legend(l,['BT',identexpshort'],'location','northeast');
                                        	lh.FontSize=10;
                                            set(gca,'plotboxaspectratio',[1 1 1])
                                            set(gcf, 'InvertHardcopy', 'off')
                                            set(gcf,'Units','inches');
                                            screenposition = get(gcf,'Position');
                                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                            set(gcf, 'InvertHardcopy', 'off')           
                                            text(0,1.03,['\textbf{INIT: ',identinittimesunique(identloop,: ),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                            text(0,1.065,['\textbf{Track Comparision}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                            text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                            ax=gca;
                                            box on
                                            set(ax, 'Layer', 'top')
                                            ax.LineWidth=1; 
                                            set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                            f = getframe(hfig);
                                            imwrite(f.cdata,[identtrackint,'/FULL/trackcomp_',identinittimesunique(identloop,:),'.png'],'png');
                                            close all 
                                    end
                                    % Plot MaxSpd
                                    for plt_trk=1
                                        set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                        hfig=figure;
                                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                        ax1=subplot(3,4,[1:8]);                        
                                        tmp_bt=bt_maxspd(1:skip:end);
                                        tmp_exp=exp_maxspd(1:skip:end,:);
                                        % Y=[17,33-17,43-33,50-43,58-49,69-58,140-70];m/s
                                        Y=[33,63-33,82-63,95-82,112-95,136-112,200-136]; %kts
                                        Y=repmat(Y,identmaxfhr,1);    
                                        h=area(1:identmaxfhr,Y);
                                        h(1).FaceColor=[0 0.4470 0.7410];
                                        h(2).FaceColor=[0.3010 0.7450 0.9330];
                                        h(3).FaceColor=[0.4660 0.6740 0.1880];
                                        h(4).FaceColor=[0.9290 0.6940 0.1250];
                                        h(5).FaceColor=[0.8500 0.3250 0.0980];
                                        h(6).FaceColor=[.7 0.2 0.2];
                                        h(7).FaceColor=[.5 .2 .5];    
                                        alpha(0.25)
                                        hold on                      
                                        xlabel('Forecast Lead Time (h)','fontsize',20)        
                                        ylabel('Wind Speed (kts)','fontsize',20)            
                                        set(gca,'fontsize',20)
                                        box on
                                        if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                            if mod(identmaxfhr*3,12)==0
                                                xlim([1 ((identmaxfhr*3))/skiphr+1])
                                            else
                                                xlim([1 ((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1]) 
                                            end
                                        else
                                            if mod(identmaxfhr*3-3,12)==0
                                                xlim([1 ((identmaxfhr*3)-3)/skiphr+1])
                                            else
                                                xlim([1 ((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1]) 
                                            end
                                        end    
                                        ylim([0 180])
                                        set(gca,'xtick',1:skiptick:50)
                                        set(gca,'xticklabel',{'0','12','24','36','48','60','72','84','96','108','120','132'}) 
                                        set(gca,'fontsize',20)
                                        l(1)=plot(tmp_bt,'-sk','markerfacecolor','k','markersize',2,'linewidth',2);
                                        for tmp=1:size(identexp,1)
                                            l(tmp+1)=plot(tmp_exp(:,tmp),'-s','Color',identexpcolors(tmp,:),'markerfacecolor',identexpcolors(tmp,:),'markersize',2,'linewidth',2);
                                        end
                                        hold off                        
                                        lh=legend(l,['BT',identexpshort'],'location','northeast');
                                        lh.FontSize=10;
                                        set(gca,'plotboxaspectratio',[1 1 1])
                                        set(gcf, 'InvertHardcopy', 'off')
                                        set(gcf,'Units','inches');
                                        screenposition = get(gcf,'Position');
                                        set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                        set(gcf, 'InvertHardcopy', 'off')    
                                        grid on
                                        set(gca,'gridcolor','k','gridalpha',.4,'ygrid','off')                               
                                        text(0,1.03,['\textbf{INIT: ',identinittimesunique(identloop,: ),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                        text(0,1.065,['\textbf{Intensity Comparision (kts)}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                        text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                        ax=gca;
                                        box on
                                        set(ax, 'Layer', 'bottom')
                                        ax.LineWidth=1; 
                                        set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                        f = getframe(hfig);
                                        imwrite(f.cdata,[identtrackint,'/FULL/intcomp_',identinittimesunique(identloop,:),'.png'],'png');
                                        close all 
                                    end
                                    % Plot Pres, R34/50/64 all quadrants, PO, RO, RMW
                                    for plt_trk=1
                                        for pltcomp=1:18 
                                            clear l
                                            set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                            hfig=figure;
                                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                            ax1=subplot(3,4,[1:8]);                        
                                            if pltcomp==1
                                                tmp_name='press';
                                                tmp_title='Pressure Comparision (hPa)';
                                                tmp_bt=bt_minpres(1:skip:end);
                                                tmp_exp=exp_minpres(1:skip:end,:);
                                                ylabel('Pressure (hPa)','fontsize',20)            
                                                ylim([880 1050])
                                            elseif pltcomp==2
                                                tmp_name='ne34';
                                                tmp_title='R34 NEQ Comparision (km)';
                                                tmp_bt=bt_ne34(1:skip:end);
                                                tmp_exp=exp_ne34(1:skip:end,:);
                                                ylabel('Radius (km)','fontsize',20)            
                                                ylim([0 600])
                                            elseif pltcomp==3
                                                tmp_name='se34';
                                                tmp_title='R34 SEQ Comparision (km)';
                                                tmp_bt=bt_se34(1:skip:end);
                                                tmp_exp=exp_se34(1:skip:end,:);
                                                ylabel('Radius (km)','fontsize',20)            
                                                ylim([0 600])
                                            elseif pltcomp==4
                                                tmp_name='nw34';
                                                tmp_title='R34 NWQ Comparision (km)';
                                                tmp_bt=bt_nw34(1:skip:end);
                                                tmp_exp=exp_nw34(1:skip:end,:);
                                                ylabel('Radius (km)','fontsize',20)            
                                                ylim([0 600])
                                            elseif pltcomp==5
                                                tmp_name='sw34';
                                                tmp_title='R34 SWQ Comparision (km)';
                                                tmp_bt=bt_sw34(1:skip:end);
                                                tmp_exp=exp_sw34(1:skip:end,:);
                                                ylabel('Radius (km)','fontsize',20)            
                                                ylim([0 600])
                                            elseif pltcomp==6
                                                tmp_name='ne50';
                                                tmp_title='R50 NEQ Comparision (km)';
                                                tmp_bt=bt_ne50(1:skip:end);
                                                tmp_exp=exp_ne50(1:skip:end,:);
                                                ylabel('Radius (km)','fontsize',20)            
                                                ylim([0 300])
                                            elseif pltcomp==7
                                                tmp_name='se50';
                                                tmp_title='R50 SEQ Comparision (km)';
                                                tmp_bt=bt_se50(1:skip:end);
                                                tmp_exp=exp_se50(1:skip:end,:);
                                                ylabel('Radius (km)','fontsize',20)            
                                                ylim([0 300])
                                            elseif pltcomp==8
                                                tmp_name='nw50';
                                                tmp_title='R50 NWQ Comparision (km)';
                                                tmp_bt=bt_nw50(1:skip:end);
                                                tmp_exp=exp_nw50(1:skip:end,:);
                                                ylabel('Radius (km)','fontsize',20)            
                                                ylim([0 300])
                                            elseif pltcomp==9
                                                tmp_name='sw50';
                                                tmp_title='R50 SWQ Comparision (km)';
                                                tmp_bt=bt_sw50(1:skip:end);
                                                tmp_exp=exp_sw50(1:skip:end,:);
                                                ylabel('Radius (km)','fontsize',20)            
                                                ylim([0 300])
                                           elseif pltcomp==10
                                                tmp_name='ne64';
                                                tmp_title='R64 NEQ Comparision (km)';
                                                tmp_bt=bt_ne64(1:skip:end);
                                                tmp_exp=exp_ne64(1:skip:end,:);
                                                ylabel('Radius (km)','fontsize',20)            
                                                ylim([0 150])
                                            elseif pltcomp==11
                                                tmp_name='se64';
                                                tmp_title='R64 SEQ Comparision (km)';
                                                tmp_bt=bt_se64(1:skip:end);
                                                tmp_exp=exp_se64(1:skip:end,:);
                                                ylabel('Radius (km)','fontsize',20)            
                                                ylim([0 150])
                                            elseif pltcomp==12
                                                tmp_name='nw64';
                                                tmp_title='R64 NWQ Comparision (km)';
                                                tmp_bt=bt_nw64(1:skip:end);
                                                tmp_exp=exp_nw64(1:skip:end,:);
                                                ylabel('Radius (km)','fontsize',20)            
                                                ylim([0 150])
                                            elseif pltcomp==13
                                                tmp_name='sw64';
                                                tmp_title='R64 SWQ Comparision (km)';
                                                tmp_bt=bt_sw64(1:skip:end);
                                                tmp_exp=exp_sw64(1:skip:end,:);
                                                ylabel('Radius (km)','fontsize',20)            
                                                ylim([0 150])
                                            elseif pltcomp==14
                                                tmp_name='po';
                                                tmp_title='Outer Clsd Isbr Prs Comparision (hPa)';
                                                tmp_bt=bt_po(1:skip:end);
                                                tmp_exp=exp_po(1:skip:end,:);
                                                ylabel('Pressure (hPa)','fontsize',20)            
                                                ylim([880 1050]) 
                                            elseif pltcomp==15
                                                tmp_name='ro';
                                                tmp_title='Outer Clsd Isbr Rad Comparision (km)';
                                                tmp_bt=bt_ro(1:skip:end);
                                                tmp_exp=exp_ro(1:skip:end,:);
                                                ylabel('Radius (km)','fontsize',20)            
                                                ylim([0 600])
                                            elseif pltcomp==16
                                                tmp_name='rmw';
                                                tmp_title='RMW Comparison (km)';
                                                tmp_bt=bt_rmw(1:skip:end);
                                                tmp_exp=exp_rmw(1:skip:end,:);
                                                ylabel('Radius (km)','fontsize',20)            
                                                ylim([0 400])
                                            elseif pltcomp==17
                                                tmp_name='ate';
                                                tmp_title='Along-Track Error Comparison (km)';
                                                tmp_bt=nan(1,22);
                                                tmp_exp=squeeze(ateerr_exp(identloop,1:skip:end,:));
                                                ylabel('Error (km)','fontsize',20)            
                                                ylim([-500 500])
                                            elseif pltcomp==18
                                                tmp_name='xte';
                                                tmp_title='Across-Track Error Comparison (km)';
                                                tmp_bt=nan(1,22);
                                                tmp_exp=squeeze(xteerr_exp(identloop,1:skip:end,:));
                                                ylabel('Error (km)','fontsize',20)            
                                                ylim([-500 500])
                                            elseif plt==19
                                                tmp_name='34';
                                                tmp_title='R34 Comparision (km)';
                                                tmp_bt=cat(1,bt_ne34(:,1:skip:end,:),bt_nw34(:,1:skip:end,:),bt_se34(:,1:skip:end,:),bt_sw34(:,1:skip:end,:));
                                                tmp_exp=cat(1,exp_ne34(:,1:skip:end,:),exp_nw34(:,1:skip:end,:),exp_se34(:,1:skip:end,:),exp_sw34(:,1:skip:end,:));
                                                ylabel('Radius (km)','fontsize',20)            
                                                ylim([0 150]) 
                                            elseif plt==20
                                                tmp_name='50';
                                                tmp_title='R50 Comparision (km)';
                                                tmp_bt=cat(1,bt_ne50(:,1:skip:end,:),bt_nw50(:,1:skip:end,:),bt_se50(:,1:skip:end,:),bt_sw50(:,1:skip:end,:));
                                                tmp_exp=cat(1,exp_ne50(:,1:skip:end,:),exp_nw50(:,1:skip:end,:),exp_se50(:,1:skip:end,:),exp_sw50(:,1:skip:end,:));
                                                ylabel('Radius (km)','fontsize',20)            
                                                ylim([0 150]) 
                                            elseif plt==21                           
                                                tmp_name='64';
                                                tmp_title='R64 Comparision (km)';
                                                tmp_bt=cat(1,bt_ne64(:,1:skip:end,:),bt_nw64(:,1:skip:end,:),bt_se64(:,1:skip:end,:),bt_sw64(:,1:skip:end,:));
                                                tmp_exp=cat(1,exp_ne64(:,1:skip:end,:),exp_nw64(:,1:skip:end,:),exp_se64(:,1:skip:end,:),exp_sw64(:,1:skip:end,:));
                                                ylabel('Radius (km)','fontsize',20)            
                                                ylim([0 150])                    
                                            end                       
                                            xlabel('Forecast Lead Time (h)','fontsize',20)        
                                            set(gca,'fontsize',20)
                                            box on
                                            if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                                if mod(identmaxfhr*3,12)==0
                                                    xlim([1 ((identmaxfhr*3))/skiphr+1])
                                                else
                                                    xlim([1 ((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1]) 
                                                end
                                            else
                                                if mod(identmaxfhr*3-3,12)==0
                                                    xlim([1 ((identmaxfhr*3)-3)/skiphr+1])
                                                else
                                                    xlim([1 ((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1]) 
                                                end
                                            end    
                                            set(gca,'xtick',1:skiptick:50)
                                            set(gca,'xticklabel',{'0','12','24','36','48','60','72','84','96','108','120','132'}) 
                                            set(gca,'fontsize',20)
                                            hold on
                                            if pltcomp>16
                                                plot(0:100,zeros(1,101),'Color',[.5 .5 .5],'linewidth',1);
                                                for tmp=1:size(identexp,1)
                                                    l(tmp)=plot(tmp_exp(:,tmp),'-s','Color',identexpcolors(tmp,:),'markerfacecolor',identexpcolors(tmp,:),'markersize',2,'linewidth',2);
                                                end
                                                lh=legend(l,identexpshort','location','northeast');
                                            else
                                                l(1)=plot(tmp_bt,'-sk','markerfacecolor','k','markersize',2,'linewidth',2);
                                                for tmp=1:size(identexp,1)
                                                    l(tmp+1)=plot(tmp_exp(:,tmp),'-s','Color',identexpcolors(tmp,:),'markerfacecolor',identexpcolors(tmp,:),'markersize',2,'linewidth',2);
                                                end
                                                lh=legend(l,['BT',identexpshort'],'location','northeast');
                                            end
                                            lh.FontSize=10;
                                            hold off
                                            set(gca,'plotboxaspectratio',[1 1 1])
                                            set(gcf, 'InvertHardcopy', 'off')
                                            set(gcf,'Units','inches');
                                            screenposition = get(gcf,'Position');
                                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                            set(gcf, 'InvertHardcopy', 'off')
                                            % Missing Data Flags
                                            tmpflag=[sum(~isnan(tmp_exp))];                        
                                            tmpstrname=identexpshort(find(tmpflag==0));
                                            tmpstrcolor=identexpcolors(find(tmpflag==0),:);
                                            tmpstr=['Unavailable: '];
                                            if sum(~isnan(tmp_bt))==0 && size(tmpstrname,1)==0
                                                tmpstr=[tmpstr, 'BT'];
                                            elseif sum(~isnan(tmp_bt))==0 && size(tmpstrname,1)>0
                                                tmpstr=[tmpstr,'BT, '];                        
                                            end                            
                                            for tmp=1:size(tmpstrname,1)
                                                if tmp==size(tmpstrname,1)
                                                    tmpstr=[tmpstr, '\color[rgb]{',num2str(tmpstrcolor(tmp,:)),'}',tmpstrname{tmp}];
                                                else
                                                    tmpstr=[tmpstr, '\color[rgb]{',num2str(tmpstrcolor(tmp,:)),'}',tmpstrname{tmp},'\color[rgb]{0 0 0}, '];
                                                end
                                            end 
                                            if sum(~isnan(tmp_bt))>0 && size(tmpstrname,1)==0
                                                tmpstr='';
                                            end
                                            % Finish Plot
                                            if pltcomp==17
                                                 tx=text(0.02,0.06,'Slower than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                 tx=text(0.02,0.98,'Faster than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                            elseif pltcomp==18
                                                 tx=text(0.02,0.06,'Left of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                 tx=text(0.02,0.98,'Right of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                            end
                                            grid on
                                            set(gca,'gridcolor','k','gridalpha',.4,'ygrid','off')
                                            text(0,1.03,['\textbf{INIT: ',identinittimesunique(identloop,: ),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                            text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                            text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                            set(gca,'Color',[.9 .9 .9])
                                            ax=gca;
                                            box on
                                            set(ax, 'Layer', 'bottom')
                                            if pltcomp>16
                                            else
                                                tx=text(0.98,0.06,tmpstr,'HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                set(tx, 'Layer', 'front')
                                            end
                                            ax.LineWidth=1; 
                                            set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                            f = getframe(hfig);
                                            imwrite(f.cdata,[identtrackint,'/FULL/',tmp_name,'comp_',identinittimesunique(identloop,:),'.png'],'png');
                                            close all                        
                                        end
                                    end
                                else
                                end

                                %% Find errors - ALL init times                
                                for tmp=1:size(identexp,1)
                                    trkerr_exp(identloop,1:initsize,tmp)=(deg2km(distance('gc',bt_lat,bt_lon,exp_lat(:,tmp)',exp_lon(:,tmp)')));
                                    trkerr_sz=max(size(bt_lat,2),trkerr_sz);
                                    interr_exp(identloop,1:initsize,tmp)=(exp_minpres(:,tmp)-bt_minpres');
                                    spderr_exp(identloop,1:initsize,tmp)=(exp_maxspd(:,tmp)-bt_maxspd');
                                    ne34err_exp(identloop,1:initsize,tmp)=(exp_ne34(:,tmp)-bt_ne34');
                                    se34err_exp(identloop,1:initsize,tmp)=(exp_se34(:,tmp)-bt_se34');
                                    sw34err_exp(identloop,1:initsize,tmp)=(exp_sw34(:,tmp)-bt_sw34');
                                    nw34err_exp(identloop,1:initsize,tmp)=(exp_nw34(:,tmp)-bt_nw34');
                                    ne50err_exp(identloop,1:initsize,tmp)=(exp_ne50(:,tmp)-bt_ne50');
                                    se50err_exp(identloop,1:initsize,tmp)=(exp_se50(:,tmp)-bt_se50');
                                    sw50err_exp(identloop,1:initsize,tmp)=(exp_sw50(:,tmp)-bt_sw50');
                                    nw50err_exp(identloop,1:initsize,tmp)=(exp_nw50(:,tmp)-bt_nw50');
                                    ne64err_exp(identloop,1:initsize,tmp)=(exp_ne64(:,tmp)-bt_ne64');
                                    se64err_exp(identloop,1:initsize,tmp)=(exp_se64(:,tmp)-bt_se64');
                                    sw64err_exp(identloop,1:initsize,tmp)=(exp_sw64(:,tmp)-bt_sw64');
                                    nw64err_exp(identloop,1:initsize,tmp)=(exp_nw64(:,tmp)-bt_nw64');            
                                    poerr_exp(identloop,1:initsize,tmp)=(exp_po(:,tmp)-bt_po');
                                    roerr_exp(identloop,1:initsize,tmp)=(exp_ro(:,tmp)-bt_ro');
                                    rmwerr_exp(identloop,1:initsize,tmp)=(exp_rmw(:,tmp)-bt_rmw');
                                end
                            end
                        end

                        run customcolorbars
                        if strcmp(identcycles,'all')==0
                            disp('You did not request that all available cycles be used...not creating all-cycles graphics...')
                        else
                            % All Track
                            for fhr=1:size(identexp,1)
                                clear l tmp
                                set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                hfig=figure;
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                ax1=subplot(3,4,[1:8]);
                                h=fill([180,-180,-180,180],[-90,-90,90,90],[.5 .8 1]);
                                hold on                                           
                                geoshow('borders.shp','FaceColor',[0.9 0.9 0.9]);
                                hold on
                                states = shaperead('usastatehi', 'UseGeoCoords', true);
                                geoshow(states,'FaceColor',[0.9 0.9 0.9]);
                                tmpminlat=min([BT_lat(:); EXP_lat(:)]);
                                tmpmaxlat=max([BT_lat(:); EXP_lat(:)]);
                                tmpminlon=min([BT_lon(:); EXP_lon(:)]);
                                tmpmaxlon=max([BT_lon(:); EXP_lon(:)]);      
                                xlim([tmpminlon-5 tmpmaxlon+5])
                                ylim([tmpminlat-5 tmpmaxlat+5])
                                xlabel('Longitude','fontsize',20)
                                ylabel('Latitude','fontsize',20)                                   
                                set(gca,'fontsize',20)    
                                tmp_explon=EXP_lon(:,1:skip:end,fhr);
                                tmp_explat=EXP_lat(:,1:skip:end,fhr);
                                tmp_btlon=BT_lon(:,1:skip:end);      
                                tmp_btlat=BT_lat(:,1:skip:end);      
                                tmp=find(sum(isnan(tmp_explon'))'<size(tmp_explon,2)); % eliminate all fhr = nan
                                % Make Gradient Colorbar
                                clear cmtmp cm
                                cnt=1;
                                for cmtmp1=4:10
                                    cmtmp(cnt,:)=((identexpcolors(fhr,:)*255)*(cmtmp1/10))/255;
                                    cnt=cnt+1;
                                end
                                for cmtmp1=1:9
                                        cmtmp(cnt,:)=((identexpcolors(fhr,:)*255)+(([255 255 255]-(identexpcolors(fhr,:)*255))*(cmtmp1/10)))/255;
                                        cnt=cnt+1;
                                end            
                                cmp=sum(~isnan(nanmean(tmp_explon,2)));
                                cm=colormap(custommap(cmp,flipud(cmtmp)));             
                                for i=tmp(1):size(cm,1)
                                    plot(tmp_explon(i,:)',tmp_explat(i,:)','-s','Color',cm(i,:),'markerfacecolor',cm(i,:),'markersize',2,'linewidth',1);
                                    plot(tmp_explon(i,1)',tmp_explat(i,1)','o','Color','k','markerfacecolor',cm(i,:),'markersize',5,'linewidth',1);       
                                end
                                l(3)=plot([0 0],[-90 -89],'o','Color','k','markerfacecolor','w','markersize',5,'linewidth',1);
                                l(2)=plot([0 0],[-90 -89],'-s','Color',identexpcolors(fhr,:),'markerfacecolor',identexpcolors(fhr,:),'markersize',2,'linewidth',1);   
                                identexp0=identexpshort(fhr,:);            
                                plot(tmp_btlon',tmp_btlat','-sk','markerfacecolor','k','markersize',2,'linewidth',2);
                                l(1)=plot([0 0],[-90 -89],'-sk','markerfacecolor','k','markersize',2,'linewidth',2);
                                hold off
                                lh=legend(l,['BT',identexp0','0 h'],'location','northeast');
								lh.FontSize=10;
                                set(gca,'plotboxaspectratio',[1 1 1])
                                set(gcf, 'InvertHardcopy', 'off')
                                set(gcf,'Units','inches');
                                screenposition = get(gcf,'Position');
                                set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                set(gcf, 'InvertHardcopy', 'off')
                                text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                text(0,1.03,['\textbf{INIT: ',identinittimesunique(1,:),'$\mathbf{-}$',identinittimesunique(end,:),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                text(0,1.065,['\textbf{Track Comparision}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                cl=colorbar;
                                if size(identinittimesunique,1)>50
                                    set(cl,'YTick',1/size(tmp,1)/2:4/size(tmp,1):1,'fontsize',20)
                                    set(cl,'YTicklabel',1:4:size(tmp,1))
                                else
                                    set(cl,'YTick',1/size(tmp,1)/2:2/size(tmp,1):1,'fontsize',20)
                                    set(cl,'YTicklabel',1:2:size(tmp,1))
                                end
                                ax=gca;
                                box on
                                set(ax, 'Layer', 'top')
                                ax.LineWidth=1; 
                                set(gca,'position',spPos)
                                set(cl,'position',clPos)
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                f = getframe(hfig);
                                imwrite(f.cdata,[identtrackint,'/FULL/trackcomp_all_',identexp{fhr},'.png'],'png');
                                close all 
                            end
                            % All Wind Speed
                            for fhr=1:size(identexp,1)
                                clear EXPmx BTmx l tmp
                                set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                hfig=figure;
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                ax1=subplot(3,4,[1:8]);                        
                                % Y=[17,33-17,43-33,50-43,58-49,69-58,140-70];m/s
                                Y=[33,63-33,82-63,95-82,112-95,136-112,200-136]; %kts
                                Y=repmat(Y,240,1);    
                                h=area(1:240,Y);
                                h(1).FaceColor=[0 0.4470 0.7410];
                                h(2).FaceColor=[0.3010 0.7450 0.9330];
                                h(3).FaceColor=[0.4660 0.6740 0.1880];
                                h(4).FaceColor=[0.9290 0.6940 0.1250];
                                h(5).FaceColor=[0.8500 0.3250 0.0980];
                                h(6).FaceColor=[.7 0.2 0.2];
                                h(7).FaceColor=[.5 .2 .5];                        
                                alpha(0.25)
                                hold on       
                                ylabel('Wind Speed (kts)','fontsize',20)            
                                set(gca,'fontsize',20)
                                box on                        
                                ylim([0 180])
                                set(gca,'fontsize',20)                        
                                tmp_exp=EXP_maxspd(:,1:skip:end,fhr);
                                tmp_bt=BT_maxspd(:,1);                  
                                % stagger
                                tmp=find(sum(isnan(tmp_explon'))'<size(tmp_explon,2)); % eliminate all fhr = nan
                                cnt=1;
                                for i=tmp(1):size(EXP_maxspd,1)
                                    EXPmx(i,cnt:cnt-1+size(tmp_exp(i,:),2))=tmp_exp(i,:);
                                    cnt=cnt+1;
                                end
                                BTmx=tmp_bt;
                                EXPmx(EXPmx==0)=NaN;
                                tmpsz=size(EXPmx,2)*6;
                                if mod(tmpsz,skiphr)==0  % xrange to nearest tickmark
                                    if mod(tmpsz,12)==0
                                        xlim([1 tmpsz/6+2])
                                    else
                                        xlim([1 (tmpsz/6+(12-mod(tmpsz,12)))]) 
                                    end
                                else
                                    if mod(tmpsz-3,12)==0
                                        xlim([1 (tmpsz-6)/6])
                                    else
                                        xlim([1 (tmpsz-6)/6+(12-mod(tmpsz-3,12))]) 
                                    end
                                end                      
                                tmpdt=50;
                                t1 = datetime(str2num(identinittimesunique(1,1:4)),str2num(identinittimesunique(1,5:6)),str2num(identinittimesunique(1,7:8)),str2num(identinittimesunique(1,9:10)),0,0,'format','yyyyMMddhh');
                                t2 = datetime(str2num(identinittimesunique(end,1:4)),str2num(identinittimesunique(end,5:6)),str2num(identinittimesunique(end,7:8))+ceil(tmpdt),str2num(identinittimesunique(end,9:10)),0,0,'format','yyyyMMddhh');
                                identinittimesunique2=datestr(t1:hours(6):t2,'yyyymmddhh');
                                if strcmp(identinittimesunique2(tmp(1),9:10),'00')==1
                                    tmpst=(1);
                                elseif strcmp(identinittimesunique2(tmp(2),9:10),'00')==1
                                    tmpst=(2);
                                elseif strcmp(identinittimesunique2(tmp(3),9:10),'00')==1
                                    tmpst=(3);
                                elseif strcmp(identinittimesunique2(tmp(4),9:10),'00')==1
                                    tmpst=(4);
                                end                        
                                if size(EXPmx,2)>80
                                        set(gca,'xtick',tmpst:8:240)
                                        tmpxlab1=[identinittimesunique2(tmp(tmpst):8:end,5:8)];
                                        for i=1:size(tmp(tmpst):8:size(identinittimesunique2,1),2)
                                            tmpxlab(i,:)=[tmpxlab1(i,1:2),'/',tmpxlab1(i,3:4)];
                                        end 
                                else
                                        set(gca,'xtick',tmpst:4:240)
                                        tmpxlab1=[identinittimesunique2(tmp(tmpst):4:end,5:8)];
                                        for i=1:size(tmp(tmpst):4:size(identinittimesunique2,1),2)
                                            tmpxlab(i,:)=[tmpxlab1(i,1:2),'/',tmpxlab1(i,3:4)];
                                        end 
                                end 
                                set(gca,'xticklabel',tmpxlab)                                    
                                grid on
                                set(gca,'gridcolor','k','gridalpha',.4,'ygrid','off')
                                xtickangle(90)
                                % Make Gradient Colorbar
                                clear cmtmp cm
                                cnt=1;
                                for cmtmp1=4:10
                                    cmtmp(cnt,:)=((identexpcolors(fhr,:)*255)*(cmtmp1/10))/255;
                                    cnt=cnt+1;
                                end
                                for cmtmp1=1:9
                                    cmtmp(cnt,:)=((identexpcolors(fhr,:)*255)+(([255 255 255]-(identexpcolors(fhr,:)*255))*(cmtmp1/10)))/255;
                                    cnt=cnt+1;
                                end
                                cmp=sum(~isnan(nanmean(EXPmx,2)));
                                cm=colormap(custommap(cmp,flipud(cmtmp))); 
                                cnt=1;
                                for i=tmp'
                                   plot(EXPmx(i,:)','-s','Color',cm(cnt,:),'markerfacecolor',cm(cnt,:),'markersize',2,'linewidth',1);             
                                   plot(i,EXPmx(i,i),'o','Color','k','markerfacecolor',cm(cnt,:),'markersize',5,'linewidth',1);       
                                   l(2)=plot([0 0],[-90 -89],'-s','Color',identexpcolors(fhr,:),'markerfacecolor',identexpcolors(fhr,:),'markersize',2,'linewidth',1); 
                                   cnt=cnt+1;
                                end      
                                plot(BTmx,'-sk','markerfacecolor','k','markersize',2,'linewidth',2);
                                l(3)=plot([0 0],[-90 -89],'o','Color','k','markerfacecolor','w','markersize',5,'linewidth',1);
                                l(1)=plot([0 0],[-90 -89],'-sk','markerfacecolor','k','markersize',2,'linewidth',2);
                                identexp0=identexpshort(fhr,:);            
                                lh=legend(l,['BT',identexp0','0 h'],'location','northeast','interpreter','none');
								lh.FontSize=10;
                                set(gca,'plotboxaspectratio',[1 1 1])
                                set(gcf, 'InvertHardcopy', 'off')
                                set(gcf,'Units','inches');
                                screenposition = get(gcf,'Position');
                                set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                set(gcf, 'InvertHardcopy', 'off')
                                text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                text(0,1.03,['\textbf{INIT: ',identinittimesunique(1,:),'$\mathbf{-}$',identinittimesunique(end,:),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                text(0,1.065,['\textbf{Intensity Comparision (kts)}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                cl=colorbar;
                                if size(identinittimesunique,1)>50
                                    set(cl,'YTick',1/size(tmp,1)/2:4/size(tmp,1):1,'fontsize',20)
                                    set(cl,'YTicklabel',1:4:size(tmp,1))
                                else
                                    set(cl,'YTick',1/size(tmp,1)/2:2/size(tmp,1):1,'fontsize',20)
                                    set(cl,'YTicklabel',1:2:size(tmp,1))
                                end
                                ax=gca;
                                box on
                                set(ax, 'Layer', 'top')
                                ax.LineWidth=1; 
                                set(gca,'position',spPos)
                                set(cl,'position',clPos)
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                f = getframe(hfig);
                                imwrite(f.cdata,[identtrackint,'/FULL/intcomp_all_',identexp{fhr},'.png'],'png');
                                close all 
                            end
                            % All Else
                            for plt=1:18
                                for fhr=1:size(identexp,1)
                                    clear EXPmx BTmx l tmp cmtmp cm
                                    set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                    hfig=figure;
                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                    ax1=subplot(3,4,[1:8]);   
                                    hold on               
                                   if plt==1
                                        tmp_exp=EXP_minpres(:,1:skip:end,fhr);
                                        tmp_bt=BT_minpres(:,1:skip:end);
                                        tmp_name='prescomp';
                                        tmp_title='Pressure Comparision (hPa)';
                                        tmp_ylab='Pressure (hPa)';
                                        ylim([880 1050])            
                                     elseif plt==2
                                        tmp_exp=EXP_ne34(:,1:skip:end,fhr);
                                        tmp_bt=BT_ne34(:,1:skip:end);
                                        tmp_name='ne34comp';
                                        tmp_title='R34 NEQ Comparision (km)';
                                        tmp_ylab='Radius (km)';
                                        ylim([0 1000])            
                                    elseif plt==3
                                        tmp_exp=EXP_se34(:,1:skip:end,fhr);
                                        tmp_bt=BT_se34(:,1:skip:end);
                                        tmp_name='se34comp';
                                        tmp_title='R34 SEQ Comparision (km)';
                                        tmp_ylab='Radius (km)';
                                        ylim([0 1000])            
                                    elseif plt==4
                                        tmp_exp=EXP_sw34(:,1:skip:end,fhr);
                                        tmp_bt=BT_sw34(:,1:skip:end);
                                        tmp_name='sw34comp';
                                        tmp_title='R34 SWQ Comparision (km)';
                                        tmp_ylab='Radius (km)';
                                        ylim([0 1000])            
                                    elseif plt==5
                                        tmp_exp=EXP_nw34(:,1:skip:end,fhr);
                                        tmp_bt=BT_nw34(:,1:skip:end);
                                        tmp_name='nw34comp';
                                        tmp_title='R34 NWQ Comparision (km)';
                                        tmp_ylab='Radius (km)';
                                        ylim([0 1000])            
                                    elseif plt==6
                                        tmp_exp=EXP_ne50(:,1:skip:end,fhr);
                                        tmp_bt=BT_ne50(:,1:skip:end);
                                        tmp_name='ne50comp';
                                        tmp_title='R50 NEQ Comparision (km)';
                                        tmp_ylab='Radius (km)';
                                        ylim([0 500])            
                                    elseif plt==7
                                        tmp_exp=EXP_se50(:,1:skip:end,fhr);
                                        tmp_bt=BT_se50(:,1:skip:end);
                                        tmp_name='se50comp';
                                        tmp_title='R50 SEQ Comparision (km)';
                                        tmp_ylab='Radius (km)';
                                        ylim([0 500])            
                                    elseif plt==8
                                        tmp_exp=EXP_sw50(:,1:skip:end,fhr);
                                        tmp_bt=BT_sw50(:,1:skip:end);
                                        tmp_name='sw50comp';
                                        tmp_title='R50 SWQ Comparision (km)';
                                        tmp_ylab='Radius (km)';
                                        ylim([0 500])            
                                    elseif plt==9
                                        tmp_exp=EXP_nw50(:,1:skip:end,fhr);
                                        tmp_bt=BT_nw50(:,1:skip:end);
                                        tmp_name='nw50comp';
                                        tmp_title='R50 NWQ Comparision (km)';
                                        tmp_ylab='Radius (km)';
                                        ylim([0 500])            
                                    elseif plt==10
                                        tmp_exp=EXP_ne64(:,1:skip:end,fhr);
                                        tmp_bt=BT_ne64(:,1:skip:end);
                                        tmp_name='ne64comp';
                                        tmp_title='R64 NEQ Comparision (km)';
                                        tmp_ylab='Radius (km)';
                                        ylim([0 250])            
                                    elseif plt==11
                                        tmp_exp=EXP_se64(:,1:skip:end,fhr);
                                        tmp_bt=BT_se64(:,1:skip:end);
                                        tmp_name='se64comp';
                                        tmp_title='R64 SEQ Comparision (km)';
                                        tmp_ylab='Radius (km)';
                                        ylim([0 250])            
                                    elseif plt==12
                                        tmp_exp=EXP_sw64(:,1:skip:end,fhr);
                                        tmp_bt=BT_sw64(:,1:skip:end);
                                        tmp_name='sw64comp';
                                        tmp_title='R64 SWQ Comparision (km)';
                                        tmp_ylab='Radius (km)';
                                        ylim([0 250])            
                                    elseif plt==13
                                        tmp_exp=EXP_nw64(:,1:skip:end,fhr);
                                        tmp_bt=BT_nw64(:,1:skip:end);
                                        tmp_name='nw64comp';
                                        tmp_title='R64 NWQ Comparision (km)';
                                        tmp_ylab='Radius (km)';
                                        ylim([0 250])            
                                    elseif plt==14
                                        tmp_exp=EXP_po(:,1:skip:end,fhr);
                                        tmp_bt=BT_po(:,1:skip:end);
                                        tmp_name='pocomp';
                                        tmp_title='Outer Clsd Isbr Prs Error Comparison (hPa)';
                                        tmp_ylab='Pressure (hPa)';
                                        ylim([880 1050])            
                                    elseif plt==15
                                        tmp_exp=EXP_ro(:,1:skip:end,fhr);
                                        tmp_bt=BT_ro(:,1:skip:end);
                                        tmp_name='rocomp';
                                        tmp_title='Outer Clsd Isbr Rad Comparision (km)';
                                        tmp_ylab='Radius (km)';
                                        ylim([0 600])            
                                    elseif plt==16
                                        tmp_exp=EXP_rmw(:,1:skip:end,fhr);
                                        tmp_bt=BT_rmw(:,1:skip:end);
                                        tmp_name='rmwcomp';
                                        tmp_title='RMW Comparision (km)';
                                        tmp_ylab='Radius (km)';
                                        ylim([0 400])             
                                    elseif plt==17
                                        tmp_exp=ateerr_exp(:,1:skip:end,fhr);
                                        tmp_bt=nan(size(BT_rmw(:,1:skip:end)));
                                        tmp_name='atecomp';
                                        tmp_title='Along-Track Error Comparision (km)';
                                        tmp_ylab='Error (km)';
                                        ylim([-500 500])  
                                    elseif plt==18
                                        tmp_exp=xteerr_exp(:,1:skip:end,fhr);
                                        tmp_bt=nan(size(BT_rmw(:,1:skip:end)));
                                        tmp_name='xtecomp';
                                        tmp_title='Across-Track Error Comparision (km)';
                                        tmp_ylab='Error (km)';
                                        ylim([-500 500])  
                                   elseif plt==19
                                        tmp_exp=cat(1,EXP_ne34(:,1:skip:end,:),EXP_nw34(:,1:skip:end,:),EXP_se34(:,1:skip:end,:),EXP_sw34(:,1:skip:end,:));
                                        tmp_name='34comp';
                                        tmp_title='R34 Comparision (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[0 200];
                                    elseif plt==20
                                        tmp_exp=cat(1,EXP_ne50(:,1:skip:end,:),EXP_nw50(:,1:skip:end,:),EXP_se50(:,1:skip:end,:),EXP_sw50(:,1:skip:end,:));
                                        tmp_name='50comp';
                                        tmp_title='R50 Comparision (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[0 200];
                                    elseif plt==21
                                        tmp_exp=cat(1,EXP_ne64(:,1:skip:end,:),EXP_nw64(:,1:skip:end,:),EXP_se64(:,1:skip:end,:),EXP_sw64(:,1:skip:end,:));
                                        tmp_name='64comp';
                                        tmp_title='R64 Comparision (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[0 200];    
                                   end
                                   if plt <17 && plt >18
                                        tmp_exp=abs(tmp_exp); % added for MAE
                                   end                             
                                   if plt>=17 && plt <=18
                                        plot(-10:89,zeros(1,100),'Color',[.5 .5 .5],'linewidth',1);
                                    end
                                    ylabel(tmp_ylab,'fontsize',20)
                                    set(gca,'fontsize',20)
                                    box on                                                   
                                    % stagger
                                    tmp=find(sum(isnan(tmp_explon'))'<size(tmp_explon,2)); % eliminate all fhr = nan
                                    cnt=1;
                                    for i=tmp(1):size(EXP_minpres,1)
                                        EXPmx(i,cnt:cnt-1+size(tmp_exp(i,:),2))=tmp_exp(i,:);
                                        cnt=cnt+1;
                                    end
                                    BTmx=tmp_bt(:,1);
                                    EXPmx(EXPmx==0)=NaN;
                                    tmpsz=size(EXPmx,2)*6;
                                    if mod(tmpsz,skiphr)==0  % xrange to nearest tickmark
                                        if mod(tmpsz,12)==0
                                            xlim([1 tmpsz/6+2])
                                        else
                                            xlim([1 (tmpsz/6+(12-mod(tmpsz,12)))]) 
                                        end
                                    else
                                        if mod(tmpsz-3,12)==0
                                            xlim([1 (tmpsz-6)/6])
                                        else
                                            xlim([1 (tmpsz-6)/6+(12-mod(tmpsz-3,12))]) 
                                        end
                                    end                               
                                    tmpdt=50;
                                    t1 = datetime(str2num(identinittimesunique(1,1:4)),str2num(identinittimesunique(1,5:6)),str2num(identinittimesunique(1,7:8)),str2num(identinittimesunique(1,9:10)),0,0,'format','yyyyMMddhh');
                                    t2 = datetime(str2num(identinittimesunique(end,1:4)),str2num(identinittimesunique(end,5:6)),str2num(identinittimesunique(end,7:8))+ceil(tmpdt),str2num(identinittimesunique(end,9:10)),0,0,'format','yyyyMMddhh');
                                    identinittimesunique2=datestr(t1:hours(6):t2,'yyyymmddhh');
                                    if strcmp(identinittimesunique2(tmp(1),9:10),'00')==1
                                        tmpst=(1);
                                    elseif strcmp(identinittimesunique2(tmp(2),9:10),'00')==1
                                        tmpst=(2);
                                    elseif strcmp(identinittimesunique2(tmp(3),9:10),'00')==1
                                        tmpst=(3);
                                    elseif strcmp(identinittimesunique2(tmp(4),9:10),'00')==1
                                        tmpst=(4);
                                    end                        
                                    if size(EXPmx,2)>80
                                        set(gca,'xtick',tmpst:8:240)
                                        tmpxlab1=[identinittimesunique2(tmp(tmpst):8:end,5:8)];
                                        for i=1:size(tmp(tmpst):8:size(identinittimesunique2,1),2)
                                            tmpxlab(i,:)=[tmpxlab1(i,1:2),'/',tmpxlab1(i,3:4)];
                                        end 
                                    else
                                        set(gca,'xtick',tmpst:4:240)
                                        tmpxlab1=[identinittimesunique2(tmp(tmpst):4:end,5:8)];
                                        for i=1:size(tmp(tmpst):4:size(identinittimesunique2,1),2)
                                            tmpxlab(i,:)=[tmpxlab1(i,1:2),'/',tmpxlab1(i,3:4)];
                                        end 
                                    end
                                    set(gca,'xticklabel',tmpxlab)                                    
                                    grid on
                                    set(gca,'gridcolor','k','gridalpha',.4,'ygrid','off')
                                    xtickangle(90)                
                                    % Make Gradient Colorbar
                                    clear cmtmp cm
                                    cnt=1;
                                    for cmtmp1=4:10
                                        cmtmp(cnt,:)=((identexpcolors(fhr,:)*255)*(cmtmp1/10))/255;
                                        cnt=cnt+1;
                                    end
                                    for cmtmp1=1:9
                                            cmtmp(cnt,:)=((identexpcolors(fhr,:)*255)+(([255 255 255]-(identexpcolors(fhr,:)*255))*(cmtmp1/10)))/255;
                                            cnt=cnt+1;
                                    end
                                    cmp=size(tmp,1);
                                    cm=colormap(custommap(cmp,flipud(cmtmp)));           
                                    cnt=1;
                                    for i=tmp'
                                       plot(EXPmx(i,:)','-s','Color',cm(cnt,:),'markerfacecolor',cm(cnt,:),'markersize',2,'linewidth',1);             
                                       plot(i,EXPmx(i,i),'o','Color','k','markerfacecolor',cm(cnt,:),'markersize',5,'linewidth',1);       
                                       l(2)=plot([0 0],[-90 -89],'-s','Color',identexpcolors(fhr,:),'markerfacecolor',identexpcolors(fhr,:),'markersize',2,'linewidth',1); 
                                       cnt=cnt+1;
                                    end   
                                    plot(BTmx,'-s','color','k','markersize',2,'markerfacecolor','k','linewidth',2);
                                    l(3)=plot([0 0],[-90 -89],'o','Color','k','markerfacecolor','w','markersize',5,'linewidth',1);
                                    l(1)=plot([0 0],[-90 -89],'-sk','markerfacecolor','k','markersize',2,'linewidth',2);
                                    identexp0=identexpshort(fhr,:);            
                                    if plt<17
                                       lh=legend(l,['BT',identexp0','0 h'],'location','northeast','interpreter','none');
                                    else
                                        lh=legend(l(2:3),[identexp0','0 h'],'location','northeast','interpreter','none');
                                    end
                                    lh.FontSize=10;
									set(gca,'plotboxaspectratio',[1 1 1])
                                    set(gcf, 'InvertHardcopy', 'off')
                                    set(gcf,'Units','inches');
                                    screenposition = get(gcf,'Position');
                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                    set(gcf, 'InvertHardcopy', 'off')
                                    text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                    text(0,1.03,['\textbf{INIT: ',identinittimesunique(1,:),'$\mathbf{-}$',identinittimesunique(end,:),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                    text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                    % Missing Data Flags
                                    tmpflag=[sum(sum(~isnan(EXPmx)))];                        
                                    tmpst=identexp0;
                                    tmpstrname=tmpst(find(tmpflag==0),:);
                                    tmpstr=['Unavailable: '];
                                    if sum(sum(~isnan(BTmx)))==0 && size(tmpstrname,1)==0
                                        tmpstr=[tmpstr, 'BT'];
                                    elseif size(tmpstrname,1)>0
                                        tmpstr=[tmpstr,'BT, '];
                                        tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(fhr,:)),'}',tmpstrname{:}];
                                    end                            
                                    if sum(sum(~isnan(BTmx)))>0 && size(tmpstrname,1)==0
                                        tmpstr='';
                                    end
                                    cl=colorbar;
                                    tmp=find(sum(isnan(tmp_explon'))'<size(tmp_explon,2)); % eliminate all fhr = nan
                                    if size(identinittimesunique,1)>50
                                        set(cl,'YTick',1/size(tmp,1)/2:4/size(tmp,1):1,'fontsize',20)
                                        set(cl,'YTicklabel',1:4:size(tmp,1))
                                    else
                                        set(cl,'YTick',1/size(tmp,1)/2:2/size(tmp,1):1,'fontsize',20)
                                        set(cl,'YTicklabel',1:2:size(tmp,1))
                                    end
                                    ax=gca;
                                    box on
                                    set(ax, 'Layer', 'top')
                                    if plt<17
                                        tx=text(0.98,0.06,tmpstr,'HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                        set(tx, 'Layer', 'front')
                                    elseif plt==17
                                        tx=text(0.02,0.06,'Slower than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                        tx=text(0.02,0.98,'Faster than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                        set(tx, 'Layer', 'front')            
                                    elseif plt==18
                                        tx=text(0.02,0.06,'Left of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                        tx=text(0.02,0.98,'Right of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                        set(tx, 'Layer', 'front')            
                                    end
                                    ax.LineWidth=1; 
                                    set(gca,'position',spPos)
                                    set(cl,'position',clPos)
                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                    set(gca,'Color',[.9 .9 .9])
                                    f = getframe(hfig);
                                    imwrite(f.cdata,[identtrackint,'/FULL/',tmp_name,'_all_',identexp{fhr},'.png'],'png');
                                    close all 
                                end
                            end
                        end

                        % Create Graphics: trk, int, spd errors - bt-gh vs. bt-deny
                        for plt=1:23
                            clear l cntexp
                            set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                            hfig=figure;
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                            ax1=subplot(3,4,[1:8]);
                            hold on
                            if plt==1
                                 tmp_exp=trkerr_exp(:,1:skip:end,:);
                                 tmp_name='trkerr';
                                 tmp_title='Track Error (km)';
                                 tmp_ytitle='Error (km)';
                            elseif plt==2
                                tmp_exp=interr_exp(:,1:skip:end,:);
                                tmp_name='preserr';
                                tmp_title='Pressure Error (hPa)';
                                tmp_ytitle='Error (hPa)';
                            elseif plt==3
                                tmp_exp=spderr_exp(:,1:skip:end,:);
                                tmp_name='spderr';
                                tmp_title='Wind Speed Error (kts)';
                                tmp_ytitle='Error (kts)';
                             elseif plt==4
                                tmp_exp=ne34err_exp(:,1:skip:end,:);
                                tmp_name='ne34err';
                                tmp_title='R34 NEQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==5
                                tmp_exp=se34err_exp(:,1:skip:end,:);
                                tmp_name='se34err';
                                tmp_title='R34 SEQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==6
                                tmp_exp=sw34err_exp(:,1:skip:end,:);
                                tmp_name='sw34err';
                                tmp_title='R34 SWQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==7
                                tmp_exp=nw34err_exp(:,1:skip:end,:);
                                tmp_name='nw34err';
                                tmp_title='R34 NWQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==8
                                tmp_exp=ne50err_exp(:,1:skip:end,:);
                                tmp_name='ne50err';
                                tmp_title='R50 NEQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==9
                                tmp_exp=se50err_exp(:,1:skip:end,:);
                                tmp_name='se50err';
                                tmp_title='R50 SEQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==10
                                tmp_exp=sw50err_exp(:,1:skip:end,:);
                                tmp_name='sw50err';
                                tmp_title='R50 SWQ Error (km)';
                                tmp_ytitle='Error (km)';
                                yrange=[0 200];
                            elseif plt==11
                                tmp_exp=nw50err_exp(:,1:skip:end,:);
                                tmp_name='nw50err';
                                tmp_title='R50 NWQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==12
                                tmp_exp=ne64err_exp(:,1:skip:end,:);
                                tmp_name='ne64err';
                                tmp_title='R64 NEQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==13
                                tmp_exp=se64err_exp(:,1:skip:end,:);
                                tmp_name='se64err';
                                tmp_title='R64 SEQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==14
                                tmp_exp=sw64err_exp(:,1:skip:end,:);
                                tmp_name='sw64err';
                                tmp_title='R64 SWQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==15
                                tmp_exp=nw64err_exp(:,1:skip:end,:);
                                tmp_name='nw64err';
                                tmp_title='R64 NWQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==16
                                tmp_exp=poerr_exp(:,1:skip:end,:);
                                tmp_name='poerr';
                                tmp_title='Outer Clsd Isbr Prs Error (hPa)';
                                tmp_ytitle='Error (hPa)';
                            elseif plt==17
                                tmp_exp=roerr_exp(:,1:skip:end,:);
                                tmp_name='roerr';
                                tmp_title='Outer Clsd Isbr Rad Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==18
                                tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                tmp_name='rmwerr';
                                tmp_title='RMW Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==19
                                tmp_exp=ateerr_exp(:,1:skip:end,:);
                                tmp_name='ateerr';
                                tmp_title='Along-Track Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==20
                                tmp_exp=xteerr_exp(:,1:skip:end,:);
                                tmp_name='xteerr';
                                tmp_title='Across-Track Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==21
                                tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                tmp_name='34err';
                                tmp_title='R34 Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==22
                                tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                tmp_name='50err';
                                tmp_title='R50 Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==23
                                tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                tmp_name='64err';
                                tmp_title='R64 Error (km)';
                                tmp_ytitle='Error (km)';
                            end
                            if plt <19 || plt >20
                                tmp_exp=abs(tmp_exp); % added for MAE
                            end

                            % YRANGE
                            clear allquad
                            allquad(1)=(max(max(nanmean(abs(ne34err_exp(:,1:skip:end,:)),1))));
                            allquad(2)=(max(max(nanmean(abs(se34err_exp(:,1:skip:end,:)),1))));
                            allquad(3)=(max(max(nanmean(abs(nw34err_exp(:,1:skip:end,:)),1))));
                            allquad(4)=(max(max(nanmean(abs(sw34err_exp(:,1:skip:end,:)),1))));
                            allquad(5)=(max(max(nanmean(abs(ne50err_exp(:,1:skip:end,:)),1))));
                            allquad(6)=(max(max(nanmean(abs(se50err_exp(:,1:skip:end,:)),1))));
                            allquad(7)=(max(max(nanmean(abs(nw50err_exp(:,1:skip:end,:)),1))));
                            allquad(8)=(max(max(nanmean(abs(sw50err_exp(:,1:skip:end,:)),1))));
                            allquad(9)=(max(max(nanmean(abs(ne64err_exp(:,1:skip:end,:)),1))));
                            allquad(10)=(max(max(nanmean(abs(se64err_exp(:,1:skip:end,:)),1))));
                            allquad(11)=(max(max(nanmean(abs(nw64err_exp(:,1:skip:end,:)),1))));
                            allquad(12)=(max(max(nanmean(abs(sw64err_exp(:,1:skip:end,:)),1))));
                            allquadmax=max(max(max(allquad)));
                            allquadmin=min(min(min(allquad)));
                            tmpvalq=max(abs(allquadmin),abs(allquadmax));
                            if isnan(tmpvalq)==1
                                tmpvalq=0;
                            end
                            if numel(num2str(tmpvalq))==3
                                addfacq=100;
                            elseif numel(num2str(tmpvalq))==2
                                addfacq=20;
                            else 
                                addfacq=20;
                            end
                            if numel(num2str(round(max(max(nanmean((tmp_exp),1))))))==3
                                addfac=100;
                            elseif numel(num2str(round(max(max(nanmean((tmp_exp),1))))))==2
                                addfac=20;
                            else
                                addfac=20;
                            end
                            if plt<=3 || (plt>=16 && plt<=18) % 0-end
                                tmpmin=min(min(nanmean((tmp_exp),1)));
                                tmpmax=max(max(nanmean((tmp_exp),1)));
                                tmpval=max(abs(tmpmin),abs(tmpmax));
                                if isnan(tmpval)==1
                                    tmpval=0;
                                end               
                                yrange=[0 round((tmpval+addfac)/10)*10];                
                            elseif plt==19 || plt==20 % -end end 
                                tmpmin=min(min(nanmean((tmp_exp),1)));
                                tmpmax=max(max(nanmean((tmp_exp),1)));
                                tmpval=max(abs(tmpmin),abs(tmpmax));
                                if isnan(tmpval)==1
                                    tmpval=0;
                                end 
                                yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                            elseif (plt>=4 && plt<=15) || plt>=21%quad
                                yrange=[0 round((tmpvalq+addfacq)/10)*10];
                            end

                            for tmp=1:size(identexp,1)
                                l(tmp)=plot(1:size(tmp_exp,2),nanmean(tmp_exp(:,:,tmp)),'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2);
                            end           
                            % Find which experiment to compare to
                            for tmp=1:size(identexp,1)
                                if strcmp(identexp(tmp),identexpsigimp)
                                    tmpimp=tmp;
                                end
                            end
                            plot(-10:89,zeros(1,100),'Color',[.5 .5 .5],'linewidth',1);
                            for tmp=1:size(identexp,1)
                                sigtest=ttestsc(tmp_exp(:,:,tmp),tmp_exp(:,:,tmpimp),'alpha',.05);
                                sigtest_loc=find(sigtest==1);
                                sigtest_exp=nanmean(tmp_exp(:,sigtest_loc,:));
                                for tmpi=tmp
                                    plot(sigtest_loc,sigtest_exp(:,:,tmpi),'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                end
                                sigtest=ttestsc(tmp_exp(:,:,tmp),tmp_exp(:,:,tmpimp),'alpha',.1);
                                sigtest_loc1=find(sigtest==1);
                                sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                sigtest_exp=nanmean(tmp_exp(:,sigtest_loc,:));
                                for tmpi=tmp
                                    plot(sigtest_loc,sigtest_exp(:,:,tmpi),'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                                end
                            end   
                            set(gca,'plotboxaspectratio',[1 1 1])
                            xlabel('Forecast Lead Time (h)','fontsize',20)
                            ylabel(tmp_ytitle,'fontsize',20)
                            set(gca,'fontsize',20)
                            box on
                            if mod(trkerr_sz*3,skiphr)==0  % xrange to nearest tickmark
                                if mod(trkerr_sz*3,12)==0
                                    xlim([1 ((trkerr_sz*3))/skiphr+1])
                                else
                                    xlim([1 ((trkerr_sz*3)+(12-mod(trkerr_sz*3,12)))/skiphr+1]) 
                                end
                            else
                                if mod(trkerr_sz*3-3,12)==0
                                    xlim([1 ((trkerr_sz*3)-3)/skiphr+1])
                                else
                                    xlim([1 ((trkerr_sz*3)-3+(12-mod(trkerr_sz*3-3,12)))/skiphr+1]) 
                                end
                            end

                            ylim(yrange)
                            set(gca,'xtick',1:skiptick:50)
                            set(gca,'xticklabel',{'0','12','24','36','48','60','72','84','96','108','120','132'}) 
                            grid on
                            set(gca,'gridcolor','k','gridalpha',.4,'ygrid','off')
                            set(gca,'fontsize',20)      
                            hold off
                            box on
                            lh=legend(l,identexpshort,'location','northeast');
							lh.FontSize=10;
                            set(gcf,'Units','inches');
                            a1Pos = get(gca,'Position');
                            set(gcf, 'InvertHardcopy', 'off')
                            set(gcf,'Units','inches');
                            screenposition = get(gcf,'Position');
                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                            set(gcf, 'InvertHardcopy', 'off')
                            text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            text(0,1.03,['\textbf{INIT: ',identinittimesunique(1,:),'$\mathbf{-}$',identinittimesunique(end,:),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                            ax=gca;
                            box on
                            set(ax, 'Layer', 'bottom')
                            ax.LineWidth=1; 
                            set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                            set(gca,'Color',[.9 .9 .9])
                            for tmp=1:size(identexp,1)
                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,1:skip:end,tmp)),1);
                            end
                            if sum([cntexp(:)])==0
                                tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                set(tx, 'Layer', 'front')
                            end          
                            if plt==19
                                 tx=text(0.02,0.06,'Slower than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 tx=text(0.02,0.98,'Faster than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 set(tx, 'Layer', 'front')            
                            elseif plt==20
                                 tx=text(0.02,0.06,'Left of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 tx=text(0.02,0.98,'Right of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 set(tx, 'Layer', 'front')            
                            end
                            b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                            set(b,'plotboxaspectratio',[1 1 1])
                            set(b,'Color','none');
                            set(b,'YColor','none');
                            set(b,'tickdir','both')
                            set(b,'XColor',[0 0 0]);
                            set(b,'ytick',[]);
                            if mod(trkerr_sz*3,skiphr)==0  % xrange to nearest tickmark
                                if mod(trkerr_sz*3,12)==0
                                    xlim(b,[1 ((trkerr_sz*3))/skiphr+1])
                                    tmpxend=((trkerr_sz*3))/skiphr+1;
                                else
                                    xlim(b,[1 ((trkerr_sz*3)+(12-mod(trkerr_sz*3,12)))/skiphr+1]) 
                                    tmpxend=((trkerr_sz*3)+(12-mod(trkerr_sz*3,12)))/skiphr+1;
                                end
                            else
                                if mod(trkerr_sz*3-3,12)==0
                                    xlim(b,[1 ((trkerr_sz*3)-3)/skiphr+1])
                                    tmpxend=((trkerr_sz*3)-3)/skiphr+1;
                                else
                                    xlim(b,[1 ((trkerr_sz*3)-3+(12-mod(trkerr_sz*3-3,12)))/skiphr+1]) 
                                    tmpxend=((trkerr_sz*3)-3+(12-mod(trkerr_sz*3-3,12)))/skiphr+1;
                                end
                            end        
                            set(b,'xtick',[1:skiptick:50]);
                            trkerr_exp_fcnt=zeros(1,tmpxend);            
                            trkerr_exp_fcnt1=zeros(1,tmpxend);            
                            trkerr_exp_fcnt2=zeros(1,tmpxend);
                            for tmp=1:size(identexp,1)
                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,1:skip:end,tmp)),1);
                            end  
                            set(gca,'fontsize',12)
                            text(-.065,0,'# fcsts','HorizontalAlignment','center','VerticalAlignment','middle','fontsize',12,'units','normalized','rotation',90);
                            set(gca,'position',[spPos(1)+.02 spPos(2)-.05 spPos(3) spPos(4)])
                            screenposition = get(gcf,'Position');
                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                            set(gcf, 'InvertHardcopy', 'off')
                            % Create a text box at every Tick label position
                            maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1)); 
                            xTicks0 = get(gca, 'xticklabel');
                            xTicks = get(gca, 'xtick');
                            if size(maxmin,1)<size(xTicks0,1)
                                for n=1:size(xTicks0,1)-size(maxmin,1)
                                    maxmin(end+n,:)=0;
                                end
                            end
                            set(b,'xticklabels',[]);
                            minY =0;
                            VerticalOffset1=0.03;
                            HorizontalOffset = 0.2;
                            for xx = 1:size(xTicks0,1)
                                tmptxt0=maxmin(xx,:);
                                tmplines=size(tmptxt0,2);
                                if size(unique(tmptxt0),2)==1
                                    tmptxt1=num2str(tmptxt0(1)); 
                                    text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)                    
                                else
                                    for n=1:tmplines
                                        tmptxt1=[];                            
                                        tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(n,:)),'}',num2str(tmptxt0(n))];                           
                                        if n==1
                                            text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)
                                        else
                                            text(xTicks(xx), minY - (VerticalOffset1+(.02*(n-1))),tmptxt1,'horizontalalignment','center','fontsize',10)                                
                                        end
                                    end    
                                end
                            end
                            f = getframe(hfig);
                            imwrite(f.cdata,[identtrackint,'/FULL/',identn,'_',tmp_name,'.png'],'png');
                            close all
                        end                    
                        % Create Graphics: trk, int, spd improvement vs. deny
                        for plt=1:23
                            clear l cntexp
                            set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                            hfig=figure;
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                            ax1=subplot(3,4,[1:8]);
                            hold on
                            if plt==1
                                 tmp_exp=trkerr_exp(:,1:skip:end,:);
                                 tmp_name='trkskill';
                                 tmp_title='Track Improvement (\%)';
                                 tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==2
                                tmp_exp=interr_exp(:,1:skip:end,:);
                                tmp_name='presskill';
                                tmp_title='Pressure Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==3
                                tmp_exp=spderr_exp(:,1:skip:end,:);
                                tmp_name='spdskill';
                                tmp_title='Wind Speed Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                             elseif plt==4
                                tmp_exp=ne34err_exp(:,1:skip:end,:);
                                tmp_name='ne34skill';
                                tmp_title='R34 NEQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==5
                                tmp_exp=se34err_exp(:,1:skip:end,:);
                                tmp_name='se34skill';
                                tmp_title='R34 SEQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==6
                                tmp_exp=sw34err_exp(:,1:skip:end,:);
                                tmp_name='sw34skill';
                                tmp_title='R34 SWQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==7
                                tmp_exp=nw34err_exp(:,1:skip:end,:);
                                tmp_name='nw34skill';
                                tmp_title='R34 NWQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==8
                                tmp_exp=ne50err_exp(:,1:skip:end,:);
                                tmp_name='ne50skill';
                                tmp_title='R50 NEQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==9
                                tmp_exp=se50err_exp(:,1:skip:end,:);
                                tmp_name='se50skill';
                                tmp_title='R50 SEQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==10
                                tmp_exp=sw50err_exp(:,1:skip:end,:);
                                tmp_name='sw50skill';
                                tmp_title='R50 SWQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==11
                                tmp_exp=nw50err_exp(:,1:skip:end,:);
                                tmp_name='nw50skill';
                                tmp_title='R50 NWQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==12
                                tmp_exp=ne64err_exp(:,1:skip:end,:);
                                tmp_name='ne64skill';
                                tmp_title='R64 NEQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==13
                                tmp_exp=se64err_exp(:,1:skip:end,:);
                                tmp_name='se64skill';
                                tmp_title='R64 SEQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==14
                                tmp_exp=sw64err_exp(:,1:skip:end,:);
                                tmp_name='sw64skill';
                                tmp_title='R64 SWQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==15
                                tmp_exp=nw64err_exp(:,1:skip:end,:);
                                tmp_name='nw64skill';
                                tmp_title='R64 NWQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==16
                                tmp_exp=poerr_exp(:,1:skip:end,:);
                                tmp_name='poskill';
                                tmp_title='Outer Clsd Isbr Prs Improvement (hPa)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==17
                                tmp_exp=roerr_exp(:,1:skip:end,:);
                                tmp_name='roskill';
                                tmp_title='Outer Clsd Isbr Rad Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==18
                                tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                tmp_name='rmwskill';
                                tmp_title='RMW Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==19
                                tmp_exp=ateerr_exp(:,1:skip:end,:);
                                tmp_name='ateskill';
                                tmp_title='Along-Track Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==20
                                tmp_exp=xteerr_exp(:,1:skip:end,:);
                                tmp_name='xteskill';
                                tmp_title='Across-Track Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==21
                                tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                tmp_name='34skill';
                                tmp_title='R34 Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==22
                                tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                tmp_name='50skill';
                                tmp_title='R50 Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==23
                                tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                tmp_name='64skill';
                                tmp_title='R64 Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                            end
                            if plt <19 || plt >20
                                tmp_exp=abs(tmp_exp); % added for MAE
                            end                        % Find which experiment to compare to
                            for tmp=1:size(identexp,1)
                                if strcmp(identexp(tmp),identexpsigimp)
                                    tmpimp=tmp;
                                end
                            end      
                            tmpu=1:size(identexp,1);
                            tmpu(tmpu==tmpimp)=[];
                            plot(-10:89,zeros(1,100),'Color',[.5 .5 .5],'linewidth',1);
                            for tmp=[tmpimp,tmpu]
                                imprv=100.*(1-nanmean(tmp_exp(:,:,tmp))./nanmean(tmp_exp(:,:,tmpimp)));                  
                                imprv2(:,tmp)=imprv;
                                l(tmp)=plot(1:size(imprv,2),imprv,'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2); 
                                sigtest=ttestsc(tmp_exp(:,:,tmp),tmp_exp(:,:,tmpimp),'alpha',.05);
                                sigtest_loc=find(sigtest==1);
                                sigtest_exp=imprv(sigtest_loc);
                                plot(sigtest_loc,sigtest_exp,'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                sigtest=ttestsc(tmp_exp(:,:,tmp),tmp_exp(:,:,tmpimp),'alpha',.1);
                                sigtest_loc1=find(sigtest==1);
                                sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                sigtest_exp=imprv(sigtest_loc);
                                plot(sigtest_loc,sigtest_exp,'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                            end   
                            set(gca,'plotboxaspectratio',[1 1 1])
                            xlabel('Forecast Lead Time (h)','fontsize',20)
                            ylabel(tmp_ytitle,'fontsize',20)
                            set(gca,'fontsize',20)
                            box on
                            if mod(trkerr_sz*3,skiphr)==0  % xrange to nearest tickmark
                                if mod(trkerr_sz*3,12)==0
                                    xlim([1 ((trkerr_sz*3))/skiphr+1])
                                else
                                    xlim([1 ((trkerr_sz*3)+(12-mod(trkerr_sz*3,12)))/skiphr+1]) 
                                end
                            else
                                if mod(trkerr_sz*3-3,12)==0
                                    xlim([1 ((trkerr_sz*3)-3)/skiphr+1])
                                else
                                    xlim([1 ((trkerr_sz*3)-3+(12-mod(trkerr_sz*3-3,12)))/skiphr+1]) 
                                end
                            end

                            % YRANGE
                            clear allquad imprv3
                            imprv3(:,:,1)=100.*(1-nanmean(abs(ne34err_exp(:,1:skip:end,:)))./nanmean(abs(ne34err_exp(:,1:skip:end,tmpimp))));
                            imprv3(:,:,2)=100.*(1-nanmean(abs(se34err_exp(:,1:skip:end,:)))./nanmean(abs(se34err_exp(:,1:skip:end,tmpimp))));
                            imprv3(:,:,3)=100.*(1-nanmean(abs(nw34err_exp(:,1:skip:end,:)))./nanmean(abs(nw34err_exp(:,1:skip:end,tmpimp))));
                            imprv3(:,:,4)=100.*(1-nanmean(abs(sw34err_exp(:,1:skip:end,:)))./nanmean(abs(sw34err_exp(:,1:skip:end,tmpimp))));
                            imprv3(:,:,5)=100.*(1-nanmean(abs(ne34err_exp(:,1:skip:end,:)))./nanmean(abs(ne34err_exp(:,1:skip:end,tmpimp))));
                            imprv3(:,:,6)=100.*(1-nanmean(abs(se34err_exp(:,1:skip:end,:)))./nanmean(abs(se34err_exp(:,1:skip:end,tmpimp))));
                            imprv3(:,:,7)=100.*(1-nanmean(abs(nw34err_exp(:,1:skip:end,:)))./nanmean(abs(nw34err_exp(:,1:skip:end,tmpimp))));
                            imprv3(:,:,8)=100.*(1-nanmean(abs(sw34err_exp(:,1:skip:end,:)))./nanmean(abs(sw34err_exp(:,1:skip:end,tmpimp))));
                            imprv3(:,:,9)=100.*(1-nanmean(abs(ne34err_exp(:,1:skip:end,:)))./nanmean(abs(ne34err_exp(:,1:skip:end,tmpimp))));
                            imprv3(:,:,10)=100.*(1-nanmean(abs(se34err_exp(:,1:skip:end,:)))./nanmean(abs(se34err_exp(:,1:skip:end,tmpimp))));
                            imprv3(:,:,11)=100.*(1-nanmean(abs(nw34err_exp(:,1:skip:end,:)))./nanmean(abs(nw34err_exp(:,1:skip:end,tmpimp))));
                            imprv3(:,:,12)=100.*(1-nanmean(abs(sw34err_exp(:,1:skip:end,:)))./nanmean(abs(sw34err_exp(:,1:skip:end,tmpimp))));
                            allquadmax=max(max(max(imprv3)));
                            allquadmin=min(min(min(imprv3)));
                            tmpvalq=max(abs(allquadmin),abs(allquadmax));
                            if isnan(tmpvalq)==1
                                tmpvalq=0;
                            end
                            if numel(num2str(tmpvalq))==3
                                addfacq=100;
                            elseif numel(num2str(tmpvalq))==2
                                addfacq=20;
                            else
                                addfacq=20;
                            end
                            if numel(num2str(round(max(imprv2(:)))))==3
                                addfac=100;
                            elseif numel(num2str(round(max(imprv2(:)))))==2
                                addfac=20;
                            else
                                addfac=20;
                            end
                            if plt<=3 || (plt>=16 && plt<=18) % 0-end
                                tmpmin=min(imprv2(:));
                                tmpmax=max(imprv2(:));
                                tmpval=max(abs(tmpmin),abs(tmpmax));
                                if isnan(tmpval)==1
                                    tmpval=0;
                                end
                                if tmpval>250
                                    yrange=[-250 250];
                                else
                                    yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                                end
                            elseif plt==19 || plt==20 % -end end 
                                tmpmin=min(imprv2(:));
                                tmpmax=max(imprv2(:));
                                tmpval=max(abs(tmpmin),abs(tmpmax));
                                if isnan(tmpval)==1
                                    tmpval=0;
                                end
                                if tmpval>250
                                    yrange=[-250 250];
                                else
                                    yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                                end
                            elseif (plt>=4 && plt<=15) || plt>=21%quad                   
                                if tmpvalq>250
                                    yrange=[-250 250];
                                else
                                    yrange=[-round((tmpvalq+addfacq)/10)*10 round((tmpvalq+addfacq)/10)*10];
                                end
                            end
                            ylim(yrange)
                            set(gca,'xtick',1:skiptick:50)
                            set(gca,'xticklabel',{'0','12','24','36','48','60','72','84','96','108','120','132'}) 
                            grid on
                            set(gca,'gridcolor','k','gridalpha',.4,'ygrid','off')
                            set(gca,'fontsize',20)      
                            hold off
                            box on
                            lh=legend(l,identexpshort,'location','northeast');
							lh.FontSize=10;
                            set(gcf,'Units','inches');
                            a1Pos = get(gca,'Position');
                            set(gcf, 'InvertHardcopy', 'off')
                            set(gcf,'Units','inches');
                            screenposition = get(gcf,'Position');
                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                            set(gcf, 'InvertHardcopy', 'off')
                            text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            text(0,1.03,['\textbf{INIT: ',identinittimesunique(1,:),'$\mathbf{-}$',identinittimesunique(end,:),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                            ax=gca;
                            box on
                            set(ax, 'Layer', 'bottom')
                            ax.LineWidth=1; 
                            set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                            set(gca,'Color',[.9 .9 .9])            
                            if sum(~isnan((diff(imprv))))==0
                                tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                set(tx, 'Layer', 'front')
                            end
                            % Mean Value            
                            tmpstr=['Mean: '];
                            imprv2(imprv2==-Inf)=0;
                            imprv2(imprv2==Inf)=0;
                            tmpstrmean=nanmean(imprv2,1);
                            tmpstrmean=(find(tmpstrmean~=0));
                            if size(tmpstrmean,2)>0
                                for tmp=tmpstrmean
                                if tmp==tmpstrmean(end)
                                    tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(imprv2(:,tmp)),2)),'%'];
                                else
                                    tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(imprv2(:,tmp)),2)),'% \color[rgb]{0,0,0}| '];
                                end
                                end
                            else
                                tmpstr='';
                            end
                            if sum(sum(~isnan(imprv2)))==0
                                tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                set(tx, 'Layer', 'front')          
                            else
                                tx=text(0.98,0.06,tmpstr,'HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                set(tx, 'Layer', 'front')
                            end 
                            b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                            set(b,'plotboxaspectratio',[1 1 1])
                            set(b,'Color','none');
                            set(b,'YColor','none');
                            set(b,'tickdir','both')
                            set(b,'XColor',[0 0 0]);
                            set(b,'ytick',[]);
                            if mod(trkerr_sz*3,skiphr)==0  % xrange to nearest tickmark
                                if mod(trkerr_sz*3,12)==0
                                    xlim(b,[1 ((trkerr_sz*3))/skiphr+1])
                                    tmpxend=((trkerr_sz*3))/skiphr+1;
                                else
                                    xlim(b,[1 ((trkerr_sz*3)+(12-mod(trkerr_sz*3,12)))/skiphr+1]) 
                                    tmpxend=((trkerr_sz*3)+(12-mod(trkerr_sz*3,12)))/skiphr+1;
                                end
                            else
                                if mod(trkerr_sz*3-3,12)==0
                                    xlim(b,[1 ((trkerr_sz*3)-3)/skiphr+1])
                                    tmpxend=((trkerr_sz*3)-3)/skiphr+1;
                                else
                                    xlim(b,[1 ((trkerr_sz*3)-3+(12-mod(trkerr_sz*3-3,12)))/skiphr+1]) 
                                    tmpxend=((trkerr_sz*3)-3+(12-mod(trkerr_sz*3-3,12)))/skiphr+1;
                                end
                            end        
                            set(b,'xtick',[1:skiptick:50]); 
                            trkerr_exp_fcnt=zeros(1,tmpxend);            
                            trkerr_exp_fcnt1=zeros(1,tmpxend);            
                            trkerr_exp_fcnt2=zeros(1,tmpxend);
                            for tmp=1:size(identexp,1)
                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,1:skip:end,tmp)),1);
                            end  
                            set(gca,'fontsize',12)            
                            text(-.065,0,'# fcsts','HorizontalAlignment','center','VerticalAlignment','middle','fontsize',12,'units','normalized','rotation',90);
                            set(gca,'position',[spPos(1)+.02 spPos(2)-.05 spPos(3) spPos(4)])
                            screenposition = get(gcf,'Position');
                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                            set(gcf, 'InvertHardcopy', 'off')
                            % Create a text box at every Tick label position
                            maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1)); 
                            xTicks0 = get(gca, 'xticklabel');
                            xTicks = get(gca, 'xtick');
                            if size(maxmin,1)<size(xTicks0,1)
                                for n=1:size(xTicks0,1)-size(maxmin,1)
                                    maxmin(end+n,:)=0;
                                end
                            end
                            set(b,'xticklabels',[]);
                            minY =0;
                            VerticalOffset1=0.03;
                            HorizontalOffset = 0.2;
                            for xx = 1:size(xTicks0,1)
                                tmptxt0=maxmin(xx,:);
                                tmplines=size(tmptxt0,2);
                                if size(unique(tmptxt0),2)==1
                                    tmptxt1=num2str(tmptxt0(1)); 
                                    text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)                    
                                else
                                    for n=1:tmplines
                                        tmptxt1=[];                            
                                        tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(n,:)),'}',num2str(tmptxt0(n))];                           
                                        if n==1
                                            text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)
                                        else
                                            text(xTicks(xx), minY - (VerticalOffset1+(.02*(n-1))),tmptxt1,'horizontalalignment','center','fontsize',10)                                
                                        end
                                    end    
                                end
                            end
                            f = getframe(hfig);
                            imwrite(f.cdata,[identtrackint,'/FULL/',identn,'_',tmp_name,'.png'],'png');
                            close all
                        end
                        % Create Graphics: trk, int, spd FSP vs. deny            
                        for plt=1:23
                            clear l cntexp
                            set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                            hfig=figure;
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                            ax1=subplot(3,4,[1:8]);
                            hold on
                            if plt==1
                                 tmp_exp=trkerr_exp(:,1:skip:end,:);
                                 tmp_name='trkfsp';
                                 tmp_title='Track FSP (\%)';
                                 tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==2
                                tmp_exp=interr_exp(:,1:skip:end,:);
                                tmp_name='presfsp';
                                tmp_title='Pressure FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==3
                                tmp_exp=spderr_exp(:,1:skip:end,:);
                                tmp_name='spdfsp';
                                tmp_title='Wind Speed FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                             elseif plt==4
                                tmp_exp=ne34err_exp(:,1:skip:end,:);
                                tmp_name='ne34fsp';
                                tmp_title='R34 NEQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==5
                                tmp_exp=se34err_exp(:,1:skip:end,:);
                                tmp_name='se34fsp';
                                tmp_title='R34 SEQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==6
                                tmp_exp=sw34err_exp(:,1:skip:end,:);
                                tmp_name='sw34fsp';
                                tmp_title='R34 SWQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==7
                                tmp_exp=nw34err_exp(:,1:skip:end,:);
                                tmp_name='nw34fsp';
                                tmp_title='R34 NWQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==8
                                tmp_exp=ne50err_exp(:,1:skip:end,:);
                                tmp_name='ne50fsp';
                                tmp_title='R50 NEQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==9
                                tmp_exp=se50err_exp(:,1:skip:end,:);
                                tmp_name='se50fsp';
                                tmp_title='R50 SEQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==10
                                tmp_exp=sw50err_exp(:,1:skip:end,:);
                                tmp_name='sw50fsp';
                                tmp_title='R50 SWQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==11
                                tmp_exp=nw50err_exp(:,1:skip:end,:);
                                tmp_name='nw50fsp';
                                tmp_title='R50 NWQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==12
                                tmp_exp=ne64err_exp(:,1:skip:end,:);
                                tmp_name='ne64fsp';
                                tmp_title='R64 NEQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==13
                                tmp_exp=se64err_exp(:,1:skip:end,:);
                                tmp_name='se64fsp';
                                tmp_title='R64 SEQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==14
                                tmp_exp=sw64err_exp(:,1:skip:end,:);
                                tmp_name='sw64fsp';
                                tmp_title='R64 SWQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==15
                                tmp_exp=nw64err_exp(:,1:skip:end,:);
                                tmp_name='nw64fsp';
                                tmp_title='R64 NWQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==16
                                tmp_exp=poerr_exp(:,1:skip:end,:);
                                tmp_name='pofsp';
                                tmp_title='Outer Clsd Isbr Prs FSP (hPa)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==17
                                tmp_exp=roerr_exp(:,1:skip:end,:);
                                tmp_name='rofsp';
                                tmp_title='Outer Clsd Isbr Rad FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==18
                                tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                tmp_name='rmwfsp';
                                tmp_title='RMW FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==19
                                tmp_exp=ateerr_exp(:,1:skip:end,:);
                                tmp_name='atefsp';
                                tmp_title='Along-Track FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==20
                                tmp_exp=xteerr_exp(:,1:skip:end,:);
                                tmp_name='xtefsp';
                                tmp_title='Across-Track FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==21
                                tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                tmp_name='34fsp';
                                tmp_title='R34 FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==22
                                tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                tmp_name='50fsp';
                                tmp_title='R50 FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            elseif plt==23
                                tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                tmp_name='64fsp';
                                tmp_title='R64 FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                            end
                            if plt <19 || plt >20
                                tmp_exp=abs(tmp_exp); % added for MAE
                            end                        % Find which experiment to compare to
                            for tmp=1:size(identexp,1)
                                if strcmp(identexp(tmp),identexpsigimp)
                                    tmpimp=tmp;
                                end
                            end      
                            tmpu=1:size(identexp,1);
                            tmpu(tmpu==tmpimp)=[];
                            plot(-10:89,50*ones(1,100),'Color',[.5 .5 .5],'linewidth',1);
                            clear fsp2 l
                            cntl=1;
                            for tmp=tmpu
                                tmp1=tmp_exp(:,:,tmp);
                                tmp2=tmp_exp(:,:,tmpimp);
                                tmp3=sign(tmp1-tmp2);
                                tmp4=tmp3<0;
                                tmp5=tmp3>0;
                                tmp6=tmp3==0;
                                tmptmp=sum(~isnan(tmp3),1);                            
                                fspa=100*(nansum(tmp4,1)+nansum(tmp6,1)./2)./tmptmp;
                                fspb=100*(nansum(tmp5,1)+nansum(tmp6,1)./2)./tmptmp;
                                fsp2(:,tmp)=fspa;
                                %plot(1:size(fspb,2),fspb,'--s','Color',identexpcolors(tmp,:),'linewidth',.5,'markersize',2); 
                                l(cntl)=plot(1:size(fspa,2),fspa,'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2); 
                                cntl=cntl+1;
								sigtest=ttestsc(abs(tmp_exp(:,:,tmp)),abs(tmp_exp(:,:,tmpimp)),'alpha',.05);
                                sigtest_loc=find(sigtest==1);
                                sigtest_exp=fspa(sigtest_loc);
                                plot(sigtest_loc,sigtest_exp,'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                sigtest=ttestsc(abs(tmp_exp(:,:,tmp)),abs(tmp_exp(:,:,tmpimp)),'alpha',.1);
                                sigtest_loc1=find(sigtest==1);
                                sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                sigtest_exp=fspa(sigtest_loc);
                                plot(sigtest_loc,sigtest_exp,'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                            end 
                            set(gca,'plotboxaspectratio',[1 1 1])
                            xlabel('Forecast Lead Time (h)','fontsize',20)
                            ylabel(tmp_ytitle,'fontsize',20)
                            set(gca,'fontsize',20)
                            box on
                            if mod(trkerr_sz*3,skiphr)==0  % xrange to nearest tickmark
                                if mod(trkerr_sz*3,12)==0
                                    xlim([1 ((trkerr_sz*3))/skiphr+1])
                                else
                                    xlim([1 ((trkerr_sz*3)+(12-mod(trkerr_sz*3,12)))/skiphr+1]) 
                                end
                            else
                                if mod(trkerr_sz*3-3,12)==0
                                    xlim([1 ((trkerr_sz*3)-3)/skiphr+1])
                                else
                                    xlim([1 ((trkerr_sz*3)-3+(12-mod(trkerr_sz*3-3,12)))/skiphr+1]) 
                                end
                            end                                
                            ylim([0 100])
                            set(gca,'xtick',1:skiptick:50)
                            set(gca,'xticklabel',{'0','12','24','36','48','60','72','84','96','108','120','132'}) 
                            grid on
                            set(gca,'gridcolor','k','gridalpha',.4,'ygrid','off')
                            set(gca,'fontsize',20)      
                            hold off
                            box on
                            lh=legend(l,identexpshort(tmpu),'location','northeast');
							lh.FontSize=10;
                            set(gcf,'Units','inches');
                            a1Pos = get(gca,'Position');
                            set(gcf, 'InvertHardcopy', 'off')
                            set(gcf,'Units','inches');
                            screenposition = get(gcf,'Position');
                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                            set(gcf, 'InvertHardcopy', 'off')
                            text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            text(0,1.03,['\textbf{INIT: ',identinittimesunique(1,:),'$\mathbf{-}$',identinittimesunique(end,:),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                            ax=gca;
                            box on
                            set(ax, 'Layer', 'bottom')
                            ax.LineWidth=1; 
                            set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                            set(gca,'Color',[.9 .9 .9])            
                            if sum(~isnan((diff(fspa))))==0
                                tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                set(tx, 'Layer', 'front')
                            end
                            % Mean Value            
                            tmpstr=['Mean: '];
                            fsp2(fsp2==-Inf)=0;
                            fsp2(fsp2==Inf)=0;
                            tmpstrmean=nanmean(fsp2,1);
                            tmpstrmean=(find(tmpstrmean~=0));
                            if size(tmpstrmean,2)>0
                                for tmp=tmpstrmean
                                if tmp==tmpstrmean(end)
                                    tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(fsp2(:,tmp)),2)),'%'];
                                else
                                    tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(fsp2(:,tmp)),2)),'% \color[rgb]{0,0,0}| '];
                                end
                                end
                            else
                                tmpstr='';
                            end
                            if sum(sum(~isnan(fsp2)))==0
                                tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                set(tx, 'Layer', 'front')          
                            else
                                tx=text(0.98,0.06,tmpstr,'HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                set(tx, 'Layer', 'front')
                            end 
                            b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                            set(b,'plotboxaspectratio',[1 1 1])
                            set(b,'Color','none');
                            set(b,'YColor','none');
                            set(b,'tickdir','both')
                            set(b,'XColor',[0 0 0]);
                            set(b,'ytick',[]);
                            if mod(trkerr_sz*3,skiphr)==0  % xrange to nearest tickmark
                                if mod(trkerr_sz*3,12)==0
                                    xlim(b,[1 ((trkerr_sz*3))/skiphr+1])
                                    tmpxend=((trkerr_sz*3))/skiphr+1;
                                else
                                    xlim(b,[1 ((trkerr_sz*3)+(12-mod(trkerr_sz*3,12)))/skiphr+1]) 
                                    tmpxend=((trkerr_sz*3)+(12-mod(trkerr_sz*3,12)))/skiphr+1;
                                end
                            else
                                if mod(trkerr_sz*3-3,12)==0
                                    xlim(b,[1 ((trkerr_sz*3)-3)/skiphr+1])
                                    tmpxend=((trkerr_sz*3)-3)/skiphr+1;
                                else
                                    xlim(b,[1 ((trkerr_sz*3)-3+(12-mod(trkerr_sz*3-3,12)))/skiphr+1]) 
                                    tmpxend=((trkerr_sz*3)-3+(12-mod(trkerr_sz*3-3,12)))/skiphr+1;
                                end
                            end        
                            set(b,'xtick',[1:skiptick:50]); 
                            trkerr_exp_fcnt=zeros(1,tmpxend);            
                            trkerr_exp_fcnt1=zeros(1,tmpxend);            
                            trkerr_exp_fcnt2=zeros(1,tmpxend);
                            for tmp=1:size(identexp,1)
                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,1:skip:end,tmp)),1);
                            end  
                            set(gca,'fontsize',12)            
                            text(-.065,0,'# fcsts','HorizontalAlignment','center','VerticalAlignment','middle','fontsize',12,'units','normalized','rotation',90);
                            set(gca,'position',[spPos(1)+.02 spPos(2)-.05 spPos(3) spPos(4)])
                            screenposition = get(gcf,'Position');
                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                            set(gcf, 'InvertHardcopy', 'off')
                            % Create a text box at every Tick label position
                            maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1)); 
                            xTicks0 = get(gca, 'xticklabel');
                            xTicks = get(gca, 'xtick');
                            if size(maxmin,1)<size(xTicks0,1)
                                for n=1:size(xTicks0,1)-size(maxmin,1)
                                    maxmin(end+n,:)=0;
                                end
                            end
                            set(b,'xticklabels',[]);
                            minY =0;
                            VerticalOffset1=0.03;
                            HorizontalOffset = 0.2;
                            for xx = 1:size(xTicks0,1)
                                tmptxt0=maxmin(xx,:);
                                tmplines=size(tmptxt0,2);
                                if size(unique(tmptxt0),2)==1
                                    tmptxt1=num2str(tmptxt0(1)); 
                                    text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)                    
                                else
                                    for n=1:tmplines
                                        tmptxt1=[];                            
                                        tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(n,:)),'}',num2str(tmptxt0(n))];                           
                                        if n==1
                                            text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)
                                        else
                                            text(xTicks(xx), minY - (VerticalOffset1+(.02*(n-1))),tmptxt1,'horizontalalignment','center','fontsize',10)                                
                                        end
                                    end    
                                end
                            end
                            f = getframe(hfig);
                            imwrite(f.cdata,[identtrackint,'/FULL/',identn,'_',tmp_name,'.png'],'png');
                            close all
                        end             
                        % Create Graphics: trk, int, spd bias - bt-gh vs. bt-deny
                        for plt=[2:18,21:23] % no across or along for bias since already in error
                            clear l cntexp
                            set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                            hfig=figure;
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                            ax1=subplot(3,4,[1:8]);
                            hold on
                            if plt==1
                                 tmp_exp=trkerr_exp(:,1:skip:end,:);
                                 tmp_name='trkbias';
                                 tmp_title='Track Bias (km)';
                                 tmp_ytitle='Bias (km)';
                            elseif plt==2
                                tmp_exp=interr_exp(:,1:skip:end,:);
                                tmp_name='presbias';
                                tmp_title='Pressure Bias (hPa)';
                                tmp_ytitle='Bias (hPa)';
                            elseif plt==3
                                tmp_exp=spderr_exp(:,1:skip:end,:);
                                tmp_name='spdbias';
                                tmp_title='Wind Speed Bias (kts)';
                                tmp_ytitle='Bias (kts)';
                             elseif plt==4
                                tmp_exp=ne34err_exp(:,1:skip:end,:);
                                tmp_name='ne34bias';
                                tmp_title='R34 NEQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==5
                                tmp_exp=se34err_exp(:,1:skip:end,:);
                                tmp_name='se34bias';
                                tmp_title='R34 SEQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==6
                                tmp_exp=sw34err_exp(:,1:skip:end,:);
                                tmp_name='sw34bias';
                                tmp_title='R34 SWQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==7
                                tmp_exp=nw34err_exp(:,1:skip:end,:);
                                tmp_name='nw34bias';
                                tmp_title='R34 NWQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==8
                                tmp_exp=ne50err_exp(:,1:skip:end,:);
                                tmp_name='ne50bias';
                                tmp_title='R50 NEQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==9
                                tmp_exp=se50err_exp(:,1:skip:end,:);
                                tmp_name='se50bias';
                                tmp_title='R50 SEQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==10
                                tmp_exp=sw50err_exp(:,1:skip:end,:);
                                tmp_name='sw50bias';
                                tmp_title='R50 SWQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==11
                                tmp_exp=nw50err_exp(:,1:skip:end,:);
                                tmp_name='nw50bias';
                                tmp_title='R50 NWQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==12
                                tmp_exp=ne64err_exp(:,1:skip:end,:);
                                tmp_name='ne64bias';
                                tmp_title='R64 NEQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==13
                                tmp_exp=se64err_exp(:,1:skip:end,:);
                                tmp_name='se64bias';
                                tmp_title='R64 SEQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==14
                                tmp_exp=sw64err_exp(:,1:skip:end,:);
                                tmp_name='sw64bias';
                                tmp_title='R64 SWQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==15
                                tmp_exp=nw64err_exp(:,1:skip:end,:);
                                tmp_name='nw64bias';
                                tmp_title='R64 NWQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==16
                                tmp_exp=poerr_exp(:,1:skip:end,:);
                                tmp_name='pobias';
                                tmp_title='Outer Clsd Isbr Prs Bias (hPa)';
                                tmp_ytitle='Bias (hPa)';
                            elseif plt==17
                                tmp_exp=roerr_exp(:,1:skip:end,:);
                                tmp_name='robias';
                                tmp_title='Outer Clsd Isbr Rad Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==18
                                tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                tmp_name='rmwbias';
                                tmp_title='RMW Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==19
                                tmp_exp=ateerr_exp(:,1:skip:end,:);
                                tmp_name='atebias';
                                tmp_title='Along-Track Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==20
                                tmp_exp=xteerr_exp(:,1:skip:end,:);
                                tmp_name='xtebias';
                                tmp_title='Across-Track Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==21
                                tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                tmp_name='34bias';
                                tmp_title='R34 Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==22
                                tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                tmp_name='50bias';
                                tmp_title='R50 Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==23
                                tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                tmp_name='64bias';
                                tmp_title='R64 Bias (km)';
                                tmp_ytitle='Bias (km)';
                            end
                            for tmp=1:size(identexp,1)
                                l(tmp)=plot(1:size(tmp_exp,2),nanmean(tmp_exp(:,:,tmp)),'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2);
                            end           
                            % Find which experiment to compare to
                            for tmp=1:size(identexp,1)
                                if strcmp(identexp(tmp),identexpsigimp)
                                    tmpimp=tmp;
                                end
                            end
                            plot(-10:89,zeros(1,100),'Color',[.5 .5 .5],'linewidth',1);
                            for tmp=1:size(identexp,1)
                                sigtest=ttestsc(abs(tmp_exp(:,:,tmp)),abs(tmp_exp(:,:,tmpimp)),'alpha',.05);
                                sigtest_loc=find(sigtest==1);
                                sigtest_exp=nanmean(tmp_exp(:,sigtest_loc,:));
                                for tmpi=tmp
                                    plot(sigtest_loc,sigtest_exp(:,:,tmpi),'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                end
                                sigtest=ttestsc(abs(tmp_exp(:,:,tmp)),abs(tmp_exp(:,:,tmpimp)),'alpha',.1);
                                sigtest_loc1=find(sigtest==1);
                                sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                sigtest_exp=nanmean(tmp_exp(:,sigtest_loc,:));
                                for tmpi=tmp
                                    plot(sigtest_loc,sigtest_exp(:,:,tmpi),'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                                end
                            end   
                            set(gca,'plotboxaspectratio',[1 1 1])
                            xlabel('Forecast Lead Time (h)','fontsize',20)
                            ylabel(tmp_ytitle,'fontsize',20)
                            set(gca,'fontsize',20)
                            box on
                            if mod(trkerr_sz*3,skiphr)==0  % xrange to nearest tickmark
                                if mod(trkerr_sz*3,12)==0
                                    xlim([1 ((trkerr_sz*3))/skiphr+1])
                                else
                                    xlim([1 ((trkerr_sz*3)+(12-mod(trkerr_sz*3,12)))/skiphr+1]) 
                                end
                            else
                                if mod(trkerr_sz*3-3,12)==0
                                    xlim([1 ((trkerr_sz*3)-3)/skiphr+1])
                                else
                                    xlim([1 ((trkerr_sz*3)-3+(12-mod(trkerr_sz*3-3,12)))/skiphr+1]) 
                                end
                            end

                            % YRANGE
                            clear allquad
                            allquad(1)=(max(max(nanmean((ne34err_exp(:,1:skip:end,:)),1))));
                            allquad(2)=(max(max(nanmean((se34err_exp(:,1:skip:end,:)),1))));
                            allquad(3)=(max(max(nanmean((nw34err_exp(:,1:skip:end,:)),1))));
                            allquad(4)=(max(max(nanmean((sw34err_exp(:,1:skip:end,:)),1))));
                            allquad(5)=(max(max(nanmean((ne50err_exp(:,1:skip:end,:)),1))));
                            allquad(6)=(max(max(nanmean((se50err_exp(:,1:skip:end,:)),1))));
                            allquad(7)=(max(max(nanmean((nw50err_exp(:,1:skip:end,:)),1))));
                            allquad(8)=(max(max(nanmean((sw50err_exp(:,1:skip:end,:)),1))));
                            allquad(9)=(max(max(nanmean((ne64err_exp(:,1:skip:end,:)),1))));
                            allquad(10)=(max(max(nanmean((se64err_exp(:,1:skip:end,:)),1))));
                            allquad(11)=(max(max(nanmean((nw64err_exp(:,1:skip:end,:)),1))));
                            allquad(12)=(max(max(nanmean((sw64err_exp(:,1:skip:end,:)),1))));
                            allquadmax=max(max(max(allquad)));
                            allquadmin=min(min(min(allquad)));
                            tmpvalq=max(abs(allquadmin),abs(allquadmax));
                            if isnan(tmpvalq)==1
                                tmpvalq=0;
                            end
                            if numel(num2str(tmpvalq))==3
                                addfacq=100;
                            elseif numel(num2str(tmpvalq))==2
                                addfacq=20;
                            else
                                addfacq=20;
                            end
                            if numel(num2str(round(max(max(nanmean((tmp_exp),1))))))==3
                                addfac=100;
                            elseif numel(num2str(round(max(max(nanmean((tmp_exp),1))))))==2
                                addfac=20;
                            else
                                addfac=20;
                            end
                            if plt<=3 || (plt>=16 && plt<=18) % -end-end
                                tmpmin=min(min(nanmean((tmp_exp),1)));
                                tmpmax=max(max(nanmean((tmp_exp),1)));
                                tmpval=max(abs(tmpmin),abs(tmpmax));
                                if isnan(tmpval)==1
                                    tmpval=0;
                                end
                                yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                            elseif plt==19 || plt==20 % -end end 
                                tmpmin=min(min(nanmean((tmp_exp),1)));
                                tmpmax=max(max(nanmean((tmp_exp),1)));
                                tmpval=max(abs(tmpmin),abs(tmpmax));
                                if isnan(tmpval)==1
                                    tmpval=0;
                                end
                                yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                            elseif (plt>=4 && plt<=15) || plt>=21%quad
                                yrange=[-round((tmpvalq+addfacq)/10)*10 round((tmpvalq+addfacq)/10)*10];
                            end              
                            ylim(yrange)
                            set(gca,'xtick',1:skiptick:50)
                            set(gca,'xticklabel',{'0','12','24','36','48','60','72','84','96','108','120','132'}) 
                            grid on
                            set(gca,'gridcolor','k','gridalpha',.4,'ygrid','off')
                            set(gca,'fontsize',20)      
                            hold off
                            box on
                            lh=legend(l,identexpshort,'location','northeast');
							lh.FontSize=10;
                            set(gcf,'Units','inches');
                            a1Pos = get(gca,'Position');
                            set(gcf, 'InvertHardcopy', 'off')
                            set(gcf,'Units','inches');
                            screenposition = get(gcf,'Position');
                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                            set(gcf, 'InvertHardcopy', 'off')
                            text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            text(0,1.03,['\textbf{INIT: ',identinittimesunique(1,:),'$\mathbf{-}$',identinittimesunique(end,:),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                            ax=gca;
                            box on
                            set(ax, 'Layer', 'bottom')
                            ax.LineWidth=1; 
                            set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                            set(gca,'Color',[.9 .9 .9])
                            for tmp=1:size(identexp,1)
                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,1:skip:end,tmp)),1);
                            end
                            if sum([cntexp(:)])==0
                                tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                set(tx, 'Layer', 'front')
                            end          
                            if plt==1 || plt>=4 && plt<=15 || plt==17 || plt==18 || plt>20
                                 tx=text(0.02,0.06,'Too Small','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 tx=text(0.02,0.98,'Too Large','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 set(tx, 'Layer', 'front')  
                            elseif plt==2 || plt==16
                                 tx=text(0.02,0.06,'Too Low','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 tx=text(0.02,0.98,'Too High','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 set(tx, 'Layer', 'front')  
                            elseif plt==3
                                 tx=text(0.02,0.06,'Too Slow','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 tx=text(0.02,0.98,'Too Fast','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 set(tx, 'Layer', 'front') 
                            elseif plt==19
                                 tx=text(0.02,0.06,'Slower than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 tx=text(0.02,0.98,'Faster than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 set(tx, 'Layer', 'front')            
                            elseif plt==20
                                 tx=text(0.02,0.06,'Left of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 tx=text(0.02,0.98,'Right of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 set(tx, 'Layer', 'front')            
                            end
                            b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                            set(b,'plotboxaspectratio',[1 1 1])
                            set(b,'Color','none');
                            set(b,'YColor','none');
                            set(b,'tickdir','both')
                            set(b,'XColor',[0 0 0]);
                            set(b,'ytick',[]);
                            if mod(trkerr_sz*3,skiphr)==0  % xrange to nearest tickmark
                                if mod(trkerr_sz*3,12)==0
                                    xlim(b,[1 ((trkerr_sz*3))/skiphr+1])
                                    tmpxend=((trkerr_sz*3))/skiphr+1;
                                else
                                    xlim(b,[1 ((trkerr_sz*3)+(12-mod(trkerr_sz*3,12)))/skiphr+1]) 
                                    tmpxend=((trkerr_sz*3)+(12-mod(trkerr_sz*3,12)))/skiphr+1;
                                end
                            else
                                if mod(trkerr_sz*3-3,12)==0
                                    xlim(b,[1 ((trkerr_sz*3)-3)/skiphr+1])
                                    tmpxend=((trkerr_sz*3)-3)/skiphr+1;
                                else
                                    xlim(b,[1 ((trkerr_sz*3)-3+(12-mod(trkerr_sz*3-3,12)))/skiphr+1]) 
                                    tmpxend=((trkerr_sz*3)-3+(12-mod(trkerr_sz*3-3,12)))/skiphr+1;
                                end
                            end        
                            set(b,'xtick',[1:skiptick:50]);
                            trkerr_exp_fcnt=zeros(1,tmpxend);            
                            trkerr_exp_fcnt1=zeros(1,tmpxend);            
                            trkerr_exp_fcnt2=zeros(1,tmpxend);
                            for tmp=1:size(identexp,1)
                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,1:skip:end,tmp)),1);
                            end  
                            set(gca,'fontsize',12)
                            text(-.065,0,'# fcsts','HorizontalAlignment','center','VerticalAlignment','middle','fontsize',12,'units','normalized','rotation',90);
                            set(gca,'position',[spPos(1)+.02 spPos(2)-.05 spPos(3) spPos(4)])
                            screenposition = get(gcf,'Position');
                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                            set(gcf, 'InvertHardcopy', 'off')
                            % Create a text box at every Tick label position
                            maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1)); 
                            xTicks0 = get(gca, 'xticklabel');
                            xTicks = get(gca, 'xtick');
                            if size(maxmin,1)<size(xTicks0,1)
                                for n=1:size(xTicks0,1)-size(maxmin,1)
                                    maxmin(end+n,:)=0;
                                end
                            end
                            set(b,'xticklabels',[]);
                            minY =0;
                            VerticalOffset1=0.03;
                            HorizontalOffset = 0.2;
                            for xx = 1:size(xTicks0,1)
                                tmptxt0=maxmin(xx,:);
                                tmplines=size(tmptxt0,2);
                                if size(unique(tmptxt0),2)==1
                                    tmptxt1=num2str(tmptxt0(1)); 
                                    text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)                    
                                else
                                    for n=1:tmplines
                                        tmptxt1=[];                            
                                        tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(n,:)),'}',num2str(tmptxt0(n))];                           
                                        if n==1
                                            text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)
                                        else
                                            text(xTicks(xx), minY - (VerticalOffset1+(.02*(n-1))),tmptxt1,'horizontalalignment','center','fontsize',10)                                
                                        end
                                    end    
                                end
                            end
                            f = getframe(hfig);
                            imwrite(f.cdata,[identtrackint,'/FULL/',identn,'_',tmp_name,'.png'],'png');
                            close all
                        end                       

                        % Create Graphics: by cycle trk, int, spd errors - bt-gh vs. bt-deny
                        for plt=1:23
                            clear l cntexp
                            set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                            hfig=figure;
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                            ax1=subplot(3,4,[1:8]);
                            hold on
                            if plt==1
                                 tmp_exp=trkerr_exp(:,1:skip:end,:);
                                 tmp_name='trkerr';
                                 tmp_title='Track Error (km)';
                                 tmp_ytitle='Error (km)';
                            elseif plt==2
                                tmp_exp=interr_exp(:,1:skip:end,:);
                                tmp_name='preserr';
                                tmp_title='Pressure Error (hPa)';
                                tmp_ytitle='Error (hPa)';
                            elseif plt==3
                                tmp_exp=spderr_exp(:,1:skip:end,:);
                                tmp_name='spderr';
                                tmp_title='Wind Speed Error (kts)';
                                tmp_ytitle='Error (kts)';
                             elseif plt==4
                                tmp_exp=ne34err_exp(:,1:skip:end,:);
                                tmp_name='ne34err';
                                tmp_title='R34 NEQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==5
                                tmp_exp=se34err_exp(:,1:skip:end,:);
                                tmp_name='se34err';
                                tmp_title='R34 SEQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==6
                                tmp_exp=sw34err_exp(:,1:skip:end,:);
                                tmp_name='sw34err';
                                tmp_title='R34 SWQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==7
                                tmp_exp=nw34err_exp(:,1:skip:end,:);
                                tmp_name='nw34err';
                                tmp_title='R34 NWQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==8
                                tmp_exp=ne50err_exp(:,1:skip:end,:);
                                tmp_name='ne50err';
                                tmp_title='R50 NEQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==9
                                tmp_exp=se50err_exp(:,1:skip:end,:);
                                tmp_name='se50err';
                                tmp_title='R50 SEQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==10
                                tmp_exp=sw50err_exp(:,1:skip:end,:);
                                tmp_name='sw50err';
                                tmp_title='R50 SWQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==11
                                tmp_exp=nw50err_exp(:,1:skip:end,:);
                                tmp_name='nw50err';
                                tmp_title='R50 NWQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==12
                                tmp_exp=ne64err_exp(:,1:skip:end,:);
                                tmp_name='ne64err';
                                tmp_title='R64 NEQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==13
                                tmp_exp=se64err_exp(:,1:skip:end,:);
                                tmp_name='se64err';
                                tmp_title='R64 SEQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==14
                                tmp_exp=sw64err_exp(:,1:skip:end,:);
                                tmp_name='sw64err';
                                tmp_title='R64 SWQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==15
                                tmp_exp=nw64err_exp(:,1:skip:end,:);
                                tmp_name='nw64err';
                                tmp_title='R64 NWQ Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==16
                                tmp_exp=poerr_exp(:,1:skip:end,:);
                                tmp_name='poerr';
                                tmp_title='Outer Clsd Isbr Prs Error (hPa)';
                                tmp_ytitle='Error (hPa)';
                            elseif plt==17
                                tmp_exp=roerr_exp(:,1:skip:end,:);
                                tmp_name='roerr';
                                tmp_title='Outer Clsd Isbr Rad Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==18
                                tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                tmp_name='rmwerr';
                                tmp_title='RMW Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==19
                                tmp_exp=ateerr_exp(:,1:skip:end,:);
                                tmp_name='ateerr';
                                tmp_title='Along-Track Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==20
                                tmp_exp=xteerr_exp(:,1:skip:end,:);
                                tmp_name='xteerr';
                                tmp_title='Across-Track Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==21
                                tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                tmp_name='34err';
                                tmp_title='R34 Error (km)';
                                tmp_ytitle='Error (km)';
                            elseif plt==22
                                tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                tmp_name='50err';
                                tmp_title='R50 Error (km';
                                tmp_ytitle='Error (km)';
                            elseif plt==23
                                tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                tmp_name='64err';
                                tmp_title='R64 Error (km)';
                                tmp_ytitle='Error (km)';
                            end
                            if plt <19 || plt >20
                                tmp_exp=abs(tmp_exp); % added for MAE
                            end
                            for tmp=1:size(identexp,1)
                                l(tmp)=plot(nanmean(tmp_exp(:,:,tmp),2),1:size(tmp_exp(:,:,tmp),1),'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2);
                            end
                            % Find which experiment to compare to
                            for tmp=1:size(identexp,1)
                                if strcmp(identexp(tmp),identexpsigimp)
                                    tmpimp=tmp;
                                end
                            end       
                            plot(zeros(1,100),-10:89,'Color',[.5 .5 .5],'linewidth',1);
                            for tmp=1:size(identexp,1)
                                sigtest=ttestsc(tmp_exp(:,:,tmp)',tmp_exp(:,:,tmpimp)','alpha',.05);
                                sigtest_loc=find(sigtest==1);
                                sigtest_exp=nanmean(tmp_exp(sigtest_loc,:,:),2);
                                for tmpi=tmp
                                    plot(sigtest_exp(:,:,tmpi),sigtest_loc,'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                end                
                                sigtest=ttestsc(tmp_exp(:,:,tmp)',tmp_exp(:,:,tmpimp)','alpha',.1);
                                sigtest_loc1=find(sigtest==1);
                                sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                sigtest_exp=nanmean(tmp_exp(sigtest_loc,:,:),2);
                                for tmpi=tmp
                                    plot(sigtest_exp(:,:,tmpi),sigtest_loc,'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                                end
                            end  
                            set(gca,'plotboxaspectratio',[1 1 1])
                            ylabel('Cycle Initialization Time','fontsize',20)
                            xlabel(tmp_ytitle,'fontsize',20)
                            set(gca,'fontsize',20)
                            box on
                            xstart=1;          
                            ylim([xstart-.5 size(BT_lat,1)+.5])

                            %% ERROR
                            % YRANGE
                            clear allquad
                            allquad(1)=(max(max(nanmean(abs(ne34err_exp(:,1:skip:end,:)),2))));
                            allquad(2)=(max(max(nanmean(abs(se34err_exp(:,1:skip:end,:)),2))));
                            allquad(3)=(max(max(nanmean(abs(nw34err_exp(:,1:skip:end,:)),2))));
                            allquad(4)=(max(max(nanmean(abs(sw34err_exp(:,1:skip:end,:)),2))));
                            allquad(5)=(max(max(nanmean(abs(ne50err_exp(:,1:skip:end,:)),2))));
                            allquad(6)=(max(max(nanmean(abs(se50err_exp(:,1:skip:end,:)),2))));
                            allquad(7)=(max(max(nanmean(abs(nw50err_exp(:,1:skip:end,:)),2))));
                            allquad(8)=(max(max(nanmean(abs(sw50err_exp(:,1:skip:end,:)),2))));
                            allquad(9)=(max(max(nanmean(abs(ne64err_exp(:,1:skip:end,:)),2))));
                            allquad(10)=(max(max(nanmean(abs(se64err_exp(:,1:skip:end,:)),2))));
                            allquad(11)=(max(max(nanmean(abs(nw64err_exp(:,1:skip:end,:)),2))));
                            allquad(12)=(max(max(nanmean(abs(sw64err_exp(:,1:skip:end,:)),2))));
                            allquadmax=max(max(max(allquad)));
                            allquadmin=min(min(min(allquad)));
                            tmpvalq=max(abs(allquadmin),abs(allquadmax));
                            if isnan(tmpvalq)==1
                                    tmpvalq=0;
                                end
                            if numel(num2str(tmpvalq))==3
                                addfacq=100;
                            elseif numel(num2str(tmpvalq))==2
                                addfacq=20;
                            else
                                addfacq=20;
                            end
                            if numel(num2str(round(max(max(nanmean((tmp_exp),2))))))==3
                                addfac=100;
                            elseif numel(num2str(round(max(max(nanmean((tmp_exp),2))))))==2
                                addfac=20;
                            else
                                addfac=20;
                            end
                            if plt<=3 || (plt>=16 && plt<=18) % 0-end
                                tmpmin=min(min(nanmean((tmp_exp),2)));
                                tmpmax=max(max(nanmean((tmp_exp),2)));
                                tmpval=max(abs(tmpmin),abs(tmpmax));
                                if isnan(tmpval)==1
                                    tmpval=0;
                                end
                                yrange=[0 round((tmpval+addfac)/10)*10];                                
                            elseif plt==19 || plt==20 % -end end 
                                tmpmin=min(min(nanmean((tmp_exp),2)));
                                tmpmax=max(max(nanmean((tmp_exp),2)));
                                tmpval=max(abs(tmpmin),abs(tmpmax));
                                if isnan(tmpval)==1
                                    tmpval=0;
                                end
                                yrange=[0 round((tmpval+addfac)/10)*10];                
                            elseif (plt>=4 && plt<=15) || plt>=21%quad
                                yrange=[0 round((tmpvalq+addfacq)/10)*10];
                            end
                            xlim(yrange)
                            if size(identinittimesunique,1)>50
                                set(gca,'ytick',1:4:100)
                                set(gca,'yticklabel',identinittimesunique(1:4:end,:))
                            else
                                set(gca,'ytick',1:2:100)
                                set(gca,'yticklabel',identinittimesunique(1:2:end,:))
                            end  
                            grid on
                            set(gca,'gridcolor','k','gridalpha',.4,'xgrid','off')
                            set(gca,'fontsize',20)      
                            hold off
                            box on
                            lh=legend(l,identexpshort,'location','northeast');
							lh.FontSize=10;
                            set(gcf,'Units','inches');
                            a1Pos = get(gca,'Position');
                            set(gcf, 'InvertHardcopy', 'off')
                            set(gcf,'Units','inches');
                            screenposition = get(gcf,'Position');
                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                            set(gcf, 'InvertHardcopy', 'off')
                            text(0,1.03,['\textbf{INIT: ',identinittimesunique(1,:),'$\mathbf{-}$',identinittimesunique(end,:),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                            ax=gca;
                            box on
                            set(ax, 'Layer', 'bottom')
                            ax.LineWidth=1; 
                            set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .85, 0.96]); % maximize figure window
                            set(gca,'Color',[.9 .9 .9])
                            clear cntexp
                            for tmp=1:size(identexp,1)
                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,:,tmp)),2);
                            end
                            if sum([cntexp(:)])==0
                                tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                set(tx, 'Layer', 'front')
                            end   
                            if plt==19
                                 tx=text(0.02,0.06,'Slower than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 tx=text(0.98,0.06,'Faster than BT','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                            elseif plt==20
                                 tx=text(0.02,0.06,'Left of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 tx=text(0.98,0.06,'Right of BT','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                            end
                            b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                            yyaxis left
                            set(b,'YColor','none');
                            yyaxis right
                            set(b,'plotboxaspectratio',[1 1 1])
                            set(b,'Color','none');
                            set(b,'XColor','none');
                            set(b,'tickdir','both')
                            set(b,'YColor',[0 0 0]);
                            set(b,'xtick',[]);
                            ylim(b,[xstart-.5 size(BT_lat,1)+.5])
                            tmpxend=size(BT_lat,1);
                            if size(identinittimesunique,1)>50
                                set(b,'ytick',[1:4:100]); 
                            else
                                set(b,'ytick',[1:2:100]); 
                            end  
                            trkerr_exp_fcnt=zeros(1,tmpxend);            
                            trkerr_exp_fcnt1=zeros(1,tmpxend);            
                            trkerr_exp_fcnt2=zeros(1,tmpxend);
                            clear cntexp
                            for tmp=1:size(identexp,1)
                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,:,tmp)),2);
                            end  
                            set(gca,'fontsize',12)
                            xL=xlim;
                            yL=ylim;
                            ylabel({'# 6-h','fcsts'},'Position',[xL(2) yL(1)],'VerticalAlignment','top','HorizontalAlignment','center','Rotation',0); 
                            set(gca,'position',[spPos(1)+.08 spPos(2)+.05 spPos(3) spPos(4)])
                            screenposition = get(gcf,'Position');
                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                            set(gcf, 'InvertHardcopy', 'off')            
                            % Create a text box at every Tick label position
                            maxmin=squeeze(sum(~isnan(tmp_exp(:,:,:)),2)); 
                            if size(identinittimesunique,1)>50
                                maxmin=maxmin(1:4:end,:); 
                            else
                                maxmin=maxmin(1:2:end,:); 
                            end
                            yTicks0 = get(gca, 'yticklabel');
                            yTicks = get(gca, 'ytick');
                            set(b,'yticklabels',[]);
                            minX =1;
                            HorizontalOffset1=0.03;
                            VerticalOffset = 0.2;
                            for xx = 1:size(yTicks0,1)
                                tmptxt0=maxmin(xx,:);
                                tmptxt1=[];
                                if size(unique(tmptxt0),2)==1
                                    tmptxt1=num2str(tmptxt0(1));
                                else
                                    for xxx=1:size(maxmin,2)
                                          if xxx==size(maxmin,2)
                                              tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(xxx,:)),'}',num2str(tmptxt0(xxx))];
                                          else
                                              tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(xxx,:)),'}',num2str(tmptxt0(xxx)),'\color[rgb]{0,0,0}/'];
                                          end
                                    end
                                end
                                text(minX+HorizontalOffset1,yTicks(xx),tmptxt1,'verticalalignment','middle','fontsize',12)
                            end
                            f = getframe(hfig);
                            imwrite(f.cdata,[identtrackint,'/FULL/',identn,'_',tmp_name,'_cycles.png'],'png');
                            close all
                        end
                        % Create Graphics: by cycle trk, int, spd improvement vs. deny
                        for plt=1:23
                            clear l cntexp
                            set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                            hfig=figure;
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                            ax1=subplot(3,4,[1:8]);
                            hold on
                             if plt==1
                                tmp_exp=trkerr_exp(:,1:skip:end,:);
                                tmp_name='trkskill';
                                tmp_title='Track Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300]; 
                            elseif plt==2
                                tmp_exp=interr_exp(:,1:skip:end,:);
                                tmp_name='presskill';
                                tmp_title='Pressure Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300]; 
                            elseif plt==3
                                tmp_exp=spderr_exp(:,1:skip:end,:);
                                tmp_name='spdskill';
                                tmp_title='Wind Speed Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300]; 
                             elseif plt==4
                                tmp_exp=ne34err_exp(:,1:skip:end,:);
                                tmp_name='ne34skill';
                                tmp_title='R34 NEQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==5
                                tmp_exp=se34err_exp(:,1:skip:end,:);
                                tmp_name='se34skill';
                                tmp_title='R34 SEQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==6
                                tmp_exp=sw34err_exp(:,1:skip:end,:);
                                tmp_name='sw34skill';
                                tmp_title='R34 SWQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==7
                                tmp_exp=nw34err_exp(:,1:skip:end,:);
                                tmp_name='nw34skill';
                                tmp_title='R34 NWQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==8
                                tmp_exp=ne50err_exp(:,1:skip:end,:);
                                tmp_name='ne50skill';
                                tmp_title='R50 NEQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==9
                                tmp_exp=se50err_exp(:,1:skip:end,:);
                                tmp_name='se50skill';
                                tmp_title='R50 SEQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==10
                                tmp_exp=sw50err_exp(:,1:skip:end,:);
                                tmp_name='sw50skill';
                                tmp_title='R50 SWQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==11
                                tmp_exp=nw50err_exp(:,1:skip:end,:);
                                tmp_name='nw50skill';
                                tmp_title='R50 NWQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==12
                                tmp_exp=ne64err_exp(:,1:skip:end,:);
                                tmp_name='ne64skill';
                                tmp_title='R64 NEQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==13
                                tmp_exp=se64err_exp(:,1:skip:end,:);
                                tmp_name='se64skill';
                                tmp_title='R64 SEQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==14
                                tmp_exp=sw64err_exp(:,1:skip:end,:);
                                tmp_name='sw64skill';
                                tmp_title='R64 SWQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==15
                                tmp_exp=nw64err_exp(:,1:skip:end,:);
                                tmp_name='nw64skill';
                                tmp_title='R64 NWQ Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==16
                                tmp_exp=poerr_exp(:,1:skip:end,:);
                                tmp_name='poskill';
                                tmp_title='Outer Clsd Isbr Prs Improvement (hPa)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300]; 
                            elseif plt==17
                                tmp_exp=roerr_exp(:,1:skip:end,:);
                                tmp_name='roskill';
                                tmp_title='Outer Clsd Isbr Rad Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300]; 
                            elseif plt==18
                                tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                tmp_name='rmwskill';
                                tmp_title='RMW Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                             elseif plt==19
                                tmp_exp=ateerr_exp(:,1:skip:end,:);
                                tmp_name='ateskill';
                                tmp_title='Along-Track Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300]; 
                             elseif plt==20
                                tmp_exp=xteerr_exp(:,1:skip:end,:);
                                tmp_name='xteskill';
                                tmp_title='Across-Track Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300]; 
                             elseif plt==21
                                tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                tmp_name='34skill';
                                tmp_title='R34 Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];
                            elseif plt==22
                                tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                tmp_name='50skill';
                                tmp_title='R50 Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];
                            elseif plt==23
                                tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                tmp_name='64skill';
                                tmp_title='R64 Improvement (\%)';
                                tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];
                             end
                             if plt <19 || plt >20
                                tmp_exp=abs(tmp_exp); % added for MAE
                             end
                             % Find which experiment to compare to
                            for tmp=1:size(identexp,1)
                                if strcmp(identexp(tmp),identexpsigimp)
                                    tmpimp=tmp;
                                end
                            end            
                            tmpu=1:size(identexp,1);
                            tmpu(tmpu==tmpimp)=[];
                            plot(zeros(1,100),-10:89,'Color',[.5 .5 .5],'linewidth',1);
                            clear imprv1
                            for tmp=[tmpimp,tmpu]
                                imprv=100.*(1-nanmean(tmp_exp(:,:,tmp),2)./nanmean(tmp_exp(:,:,tmpimp),2));  
                                imprv(imprv<-99999999)=NaN;
                                imprv(imprv>99999999)=NaN;
                                l(tmp)=plot(imprv,1:size(imprv,1),'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2); 
                                sigtest=ttestsc(tmp_exp(:,:,tmp)',tmp_exp(:,:,tmpimp)','alpha',.05);
                                sigtest_loc=find(sigtest==1);
                                sigtest_exp=imprv(sigtest_loc);
                                plot(sigtest_exp,sigtest_loc,'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                sigtest=ttestsc(tmp_exp(:,:,tmp)',tmp_exp(:,:,tmpimp)','alpha',.1);
                                sigtest_loc1=find(sigtest==1);
                                sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                sigtest_exp=imprv(sigtest_loc);
                                plot(sigtest_exp,sigtest_loc,'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                                imprv1(:,tmp)=imprv;
                            end  
                            set(gca,'plotboxaspectratio',[1 1 1])
                            ylabel('Cycle Initialization Time','fontsize',20)
                            xlabel(tmp_ytitle,'fontsize',20)
                            set(gca,'fontsize',20)
                            box on
                            %% IMPROVEMENT
                            % YRANGE
                            clear allquad imprv3
                            imprv3(:,:,1)=100.*(1-nanmean(abs(ne34err_exp(:,1:skip:end,:)),2)./nanmean(abs(ne34err_exp(:,1:skip:end,tmpimp)),2));
                            imprv3(:,:,2)=100.*(1-nanmean(abs(se34err_exp(:,1:skip:end,:)),2)./nanmean(abs(se34err_exp(:,1:skip:end,tmpimp)),2));
                            imprv3(:,:,3)=100.*(1-nanmean(abs(nw34err_exp(:,1:skip:end,:)),2)./nanmean(abs(nw34err_exp(:,1:skip:end,tmpimp)),2));
                            imprv3(:,:,4)=100.*(1-nanmean(abs(sw34err_exp(:,1:skip:end,:)),2)./nanmean(abs(sw34err_exp(:,1:skip:end,tmpimp)),2));
                            imprv3(:,:,5)=100.*(1-nanmean(abs(ne34err_exp(:,1:skip:end,:)),2)./nanmean(abs(ne34err_exp(:,1:skip:end,tmpimp)),2));
                            imprv3(:,:,6)=100.*(1-nanmean(abs(se34err_exp(:,1:skip:end,:)),2)./nanmean(abs(se34err_exp(:,1:skip:end,tmpimp)),2));
                            imprv3(:,:,7)=100.*(1-nanmean(abs(nw34err_exp(:,1:skip:end,:)),2)./nanmean(abs(nw34err_exp(:,1:skip:end,tmpimp)),2));
                            imprv3(:,:,8)=100.*(1-nanmean(abs(sw34err_exp(:,1:skip:end,:)),2)./nanmean(abs(sw34err_exp(:,1:skip:end,tmpimp)),2));
                            imprv3(:,:,9)=100.*(1-nanmean(abs(ne34err_exp(:,1:skip:end,:)),2)./nanmean(abs(ne34err_exp(:,1:skip:end,tmpimp)),2));
                            imprv3(:,:,10)=100.*(1-nanmean(abs(se34err_exp(:,1:skip:end,:)),2)./nanmean(abs(se34err_exp(:,1:skip:end,tmpimp)),2));
                            imprv3(:,:,11)=100.*(1-nanmean(abs(nw34err_exp(:,1:skip:end,:)),2)./nanmean(abs(nw34err_exp(:,1:skip:end,tmpimp)),2));
                            imprv3(:,:,12)=100.*(1-nanmean(abs(sw34err_exp(:,1:skip:end,:)),2)./nanmean(abs(sw34err_exp(:,1:skip:end,tmpimp)),2));
                            allquadmax=max(max(max(imprv3)));
                            allquadmin=min(min(min(imprv3)));
                            tmpvalq=max(abs(allquadmin),abs(allquadmax));
                            if isnan(tmpvalq)==1
                                    tmpvalq=0;
                            end
                            if numel(num2str(tmpvalq))==3
                                addfacq=100;
                            elseif numel(num2str(tmpvalq))==2
                                addfacq=20;
                            else
                                addfacq=20;
                            end
                            if numel(num2str(round(max(max(nanmean((tmp_exp),2))))))==3
                                addfac=100;
                            elseif numel(num2str(round(max(max(nanmean((tmp_exp),2))))))==2
                                addfac=20;
                            else
                                addfac=20;
                            end
                            if plt<=3 || (plt>=16 && plt<=18) % 0-end
                                tmpmin=min(min(((imprv))));
                                tmpmax=max(max(((imprv))));
                                tmpval=max(abs(tmpmin),abs(tmpmax));
                                if isnan(tmpval)==1
                                    tmpval=0;
                                end
                                if tmpval>250
                                    yrange=[-250 250];
                                else
                                    yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                                end                                
                            elseif plt==19 || plt==20 % -end end 
                                tmpmin=min(min(((imprv))));
                                tmpmax=max(max(((imprv))));
                                tmpval=max(abs(tmpmin),abs(tmpmax));
                                if isnan(tmpval)==1
                                    tmpval=0;
                                end
                                if tmpval>250
                                    yrange=[-250 250];
                                else
                                    yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                                end               
                            elseif (plt>=4 && plt<=15) || plt>=21%quad
                                if tmpvalq>250
                                    yrange=[-250 250];
                                else
                                    yrange=[-round((tmpvalq+addfacq)/10)*10 round((tmpvalq+addfacq)/10)*10];
                                end
                            end
                            xlim(yrange)
                            xstart=1;
                            ylim([xstart-.5 size(BT_lat,1)+.5])   
                            if size(identinittimesunique,1)>50
                                set(gca,'ytick',1:4:100)
                                set(gca,'yticklabel',identinittimesunique(1:4:end,:))
                            else
                                set(gca,'ytick',1:2:100)
                                set(gca,'yticklabel',identinittimesunique(1:2:end,:))
                            end                        
                            grid on
                            set(gca,'gridcolor','k','gridalpha',.4,'xgrid','off')
                            set(gca,'fontsize',20)      
                            hold off
                            box on
                            lh=legend(l,identexpshort,'location','northeast');
							lh.FontSize=10;
                            set(gcf,'Units','inches');
                            a1Pos = get(gca,'Position');
                            set(gcf, 'InvertHardcopy', 'off')
                            set(gcf,'Units','inches');
                            screenposition = get(gcf,'Position');
                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                            set(gcf, 'InvertHardcopy', 'off')
                            text(0,1.03,['\textbf{INIT: ',identinittimesunique(1,:),'$\mathbf{-}$',identinittimesunique(end,:),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                            ax=gca;
                            box on
                            set(ax, 'Layer', 'bottom')
                            ax.LineWidth=1; 
                            set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .85, 0.96]); % maximize figure window
                            set(gca,'Color',[.9 .9 .9])
                            clear cntexp
                            for tmp=1:size(identexp,1)
                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,:,tmp)),2);
                            end        
                            % Mean Value            
                            tmpstr=['Mean: '];
                            tmpstrmean=nanmean(imprv1,1);
                            tmpstrmean=(find(tmpstrmean~=0));
                            if size(tmpstrmean,2)>0
                                for tmp=tmpstrmean
                                    if tmp==tmpstrmean(end)
                                        tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(imprv1(:,tmp)),2)),'%'];
                                    else
                                        tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(imprv1(:,tmp)),2)),'% \color[rgb]{0,0,0}| '];
                                    end
                                end
                            else
                                tmpstr=[''];
                            end
                            if sum(cntexp(:))==0 || sum(sum(~isnan(imprv1)))==0
                                tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                set(tx, 'Layer', 'front')          
                            else
                                tx=text(0.98,0.06,tmpstr,'HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                set(tx, 'Layer', 'front')
                            end   
                            b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                            yyaxis left
                            set(b,'YColor','none');
                            yyaxis right
                            set(b,'plotboxaspectratio',[1 1 1])
                            set(b,'Color','none');
                            set(b,'XColor','none');
                            set(b,'tickdir','both')
                            set(b,'YColor',[0 0 0]);
                            set(b,'xtick',[]);
                            ylim(b,[xstart-.5 size(BT_lat,1)+.5])
                            tmpxend=size(BT_lat,1);
                            if size(identinittimesunique,1)>50
                                set(b,'ytick',[1:4:100]); 
                            else
                                set(b,'ytick',[1:2:100]); 
                            end    
                            trkerr_exp_fcnt=zeros(1,tmpxend);            
                            trkerr_exp_fcnt1=zeros(1,tmpxend);            
                            trkerr_exp_fcnt2=zeros(1,tmpxend);
                            clear cntexp
                            for tmp=1:size(identexp,1)
                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,:,tmp)),2);
                            end  
                            set(gca,'fontsize',12)
                            xL=xlim;
                            yL=ylim;
                            ylabel({'# 6-h','fcsts'},'Position',[xL(2) yL(1)],'VerticalAlignment','top','HorizontalAlignment','center','Rotation',0); 
                            set(gca,'position',[spPos(1)+.08 spPos(2)+.05 spPos(3) spPos(4)])
                            screenposition = get(gcf,'Position');
                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                            set(gcf, 'InvertHardcopy', 'off')
                            % Create a text box at every Tick label position
                            maxmin=squeeze(sum(~isnan(tmp_exp(:,:,:)),2)); 
                            if size(identinittimesunique,1)>50
                                maxmin=maxmin(1:4:end,:); 
                            else
                                maxmin=maxmin(1:2:end,:); 
                            end                        
                            yTicks0 = get(gca, 'yticklabel');
                            yTicks = get(gca, 'ytick');
                            set(b,'yticklabels',[]);
                            minX =1;
                            HorizontalOffset1=0.03;
                            VerticalOffset = 0.2;
                            for xx = 1:size(yTicks0,1)
                                tmptxt0=maxmin(xx,:);
                                tmptxt1=[];
                                if size(unique(tmptxt0),2)==1
                                    tmptxt1=num2str(tmptxt0(1));
                                else
                                    for xxx=1:size(maxmin,2)
                                          if xxx==size(maxmin,2)
                                              tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(xxx,:)),'}',num2str(tmptxt0(xxx))];
                                          else
                                              tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(xxx,:)),'}',num2str(tmptxt0(xxx)),'\color[rgb]{0,0,0}/'];
                                          end
                                    end
                                end
                                text(minX+HorizontalOffset1,yTicks(xx),tmptxt1,'verticalalignment','middle','fontsize',12)
                            end
                            f = getframe(hfig);
                            imwrite(f.cdata,[identtrackint,'/FULL/',identn,'_',tmp_name,'_cycles.png'],'png');
                            close all
                        end
                        % Create Graphics: by cycle trk, int, spd FSP vs. deny            
                        for plt=1:23
                            clear l cntexp
                            set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                            hfig=figure;
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                            ax1=subplot(3,4,[1:8]);
                            hold on
                             if plt==1
                                tmp_exp=trkerr_exp(:,1:skip:end,:);
                                tmp_name='trkfsp';
                                tmp_title='Track FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300]; 
                            elseif plt==2
                                tmp_exp=interr_exp(:,1:skip:end,:);
                                tmp_name='presfsp';
                                tmp_title='Pressure FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300]; 
                            elseif plt==3
                                tmp_exp=spderr_exp(:,1:skip:end,:);
                                tmp_name='spdfsp';
                                tmp_title='Wind Speed FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300]; 
                             elseif plt==4
                                tmp_exp=ne34err_exp(:,1:skip:end,:);
                                tmp_name='ne34fsp';
                                tmp_title='R34 NEQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==5
                                tmp_exp=se34err_exp(:,1:skip:end,:);
                                tmp_name='se34fsp';
                                tmp_title='R34 SEQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==6
                                tmp_exp=sw34err_exp(:,1:skip:end,:);
                                tmp_name='sw34fsp';
                                tmp_title='R34 SWQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==7
                                tmp_exp=nw34err_exp(:,1:skip:end,:);
                                tmp_name='nw34fsp';
                                tmp_title='R34 NWQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==8
                                tmp_exp=ne50err_exp(:,1:skip:end,:);
                                tmp_name='ne50fsp';
                                tmp_title='R50 NEQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==9
                                tmp_exp=se50err_exp(:,1:skip:end,:);
                                tmp_name='se50fsp';
                                tmp_title='R50 SEQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==10
                                tmp_exp=sw50err_exp(:,1:skip:end,:);
                                tmp_name='sw50fsp';
                                tmp_title='R50 SWQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==11
                                tmp_exp=nw50err_exp(:,1:skip:end,:);
                                tmp_name='nw50fsp';
                                tmp_title='R50 NWQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==12
                                tmp_exp=ne64err_exp(:,1:skip:end,:);
                                tmp_name='ne64fsp';
                                tmp_title='R64 NEQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==13
                                tmp_exp=se64err_exp(:,1:skip:end,:);
                                tmp_name='se64fsp';
                                tmp_title='R64 SEQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==14
                                tmp_exp=sw64err_exp(:,1:skip:end,:);
                                tmp_name='sw64fsp';
                                tmp_title='R64 SWQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==15
                                tmp_exp=nw64err_exp(:,1:skip:end,:);
                                tmp_name='nw64fsp';
                                tmp_title='R64 NWQ FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                            elseif plt==16
                                tmp_exp=poerr_exp(:,1:skip:end,:);
                                tmp_name='pofsp';
                                tmp_title='Outer Clsd Isbr Prs FSP (hPa)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300]; 
                            elseif plt==17
                                tmp_exp=roerr_exp(:,1:skip:end,:);
                                tmp_name='rofsp';
                                tmp_title='Outer Clsd Isbr Rad FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300]; 
                            elseif plt==18
                                tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                tmp_name='rmwfsp';
                                tmp_title='RMW FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];                 
                             elseif plt==19
                                tmp_exp=ateerr_exp(:,1:skip:end,:);
                                tmp_name='atefsp';
                                tmp_title='Along-Track FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300]; 
                             elseif plt==20
                                tmp_exp=xteerr_exp(:,1:skip:end,:);
                                tmp_name='xtefsp';
                                tmp_title='Across-Track FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300]; 
                             elseif plt==21
                                tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                tmp_name='34fsp';
                                tmp_title='R34 FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];
                            elseif plt==22
                                tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                tmp_name='50fsp';
                                tmp_title='R50 FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];
                            elseif plt==23
                                tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                tmp_name='64fsp';
                                tmp_title='R64 FSP (\%)';
                                tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                yrange=[-300 300];
                             end
                             if plt <19 || plt >20
                                tmp_exp=abs(tmp_exp); % added for MAE
                             end
                             % Find which experiment to compare to
                            for tmp=1:size(identexp,1)
                                if strcmp(identexp(tmp),identexpsigimp)
                                    tmpimp=tmp;
                                end
                            end            
                            tmpu=1:size(identexp,1);
                            tmpu(tmpu==tmpimp)=[];
                            plot(50*ones(1,100),-10:89,'Color',[.5 .5 .5],'linewidth',1);
                            clear fsp2
                            cntl=1;
                            for tmp=tmpu
                                tmp1=tmp_exp(:,:,tmp);
                                tmp2=tmp_exp(:,:,tmpimp);
                                tmp3=sign(tmp1-tmp2);
                                tmp4=tmp3<0;
                                tmp5=tmp3>0;
                                tmp6=tmp3==0;
                                tmptmp=sum(~isnan(tmp3),2);                            
                                fspa=100*(nansum(tmp4,2)+nansum(tmp6,2)./2)./tmptmp;
                                fspb=100*(nansum(tmp5,2)+nansum(tmp6,2)./2)./tmptmp;
                                fsp2(:,tmp)=fspa;
                                %plot(fspb,1:size(fspb,1),'--s','Color',identexpcolors(tmp,:),'linewidth',.5,'markersize',2); 
                                l(cntl)=plot(fspa,1:size(fspa,1),'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2); 
                                cntl=cntl+1;								
								sigtest=ttestsc(tmp_exp(:,:,tmp)',tmp_exp(:,:,tmpimp)','alpha',.05);
                                sigtest_loc=find(sigtest==1);
                                sigtest_exp=fspa(sigtest_loc);
                                plot(sigtest_exp,sigtest_loc,'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                sigtest=ttestsc(tmp_exp(:,:,tmp)',tmp_exp(:,:,tmpimp)','alpha',.1);
                                sigtest_loc1=find(sigtest==1);
                                sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                sigtest_exp=fspa(sigtest_loc);
                                plot(sigtest_exp,sigtest_loc,'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                            end
                            set(gca,'plotboxaspectratio',[1 1 1])
                            ylabel('Cycle Initialization Time','fontsize',20)
                            xlabel(tmp_ytitle,'fontsize',20)
                            set(gca,'fontsize',20)
                            box on
                            %% FSP                
                            xlim([0 100])
                            xstart=1;
                            ylim([xstart-.5 size(BT_lat,1)+.5])   
                            if size(identinittimesunique,1)>50
                                set(gca,'ytick',1:4:100)
                                set(gca,'yticklabel',identinittimesunique(1:4:end,:))
                            else
                                set(gca,'ytick',1:2:100)
                                set(gca,'yticklabel',identinittimesunique(1:2:end,:))
                            end                        
                            grid on
                            set(gca,'gridcolor','k','gridalpha',.4,'xgrid','off')
                            set(gca,'fontsize',20)      
                            hold off
                            box on
                            lh=legend(l,identexpshort(tmpu),'location','northeast');
							lh.FontSize=10;
                            set(gcf,'Units','inches');
                            a1Pos = get(gca,'Position');
                            set(gcf, 'InvertHardcopy', 'off')
                            set(gcf,'Units','inches');
                            screenposition = get(gcf,'Position');
                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                            set(gcf, 'InvertHardcopy', 'off')
                            text(0,1.03,['\textbf{INIT: ',identinittimesunique(1,:),'$\mathbf{-}$',identinittimesunique(end,:),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                            ax=gca;
                            box on
                            set(ax, 'Layer', 'bottom')
                            ax.LineWidth=1; 
                            set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .85, 0.96]); % maximize figure window
                            set(gca,'Color',[.9 .9 .9])
                            clear cntexp
                            for tmp=1:size(identexp,1)
                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,:,tmp)),2);
                            end        
                            % Mean Value            
                            tmpstr=['Mean: '];
                            tmpstrmean=nanmean(fsp2,1);
                            tmpstrmean=(find(tmpstrmean~=0));
                            if size(tmpstrmean,2)>0
                                for tmp=tmpstrmean
                                    if tmp==tmpstrmean(end)
                                        tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(fsp2(:,tmp)),2)),'%'];
                                    else
                                        tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(fsp2(:,tmp)),2)),'% \color[rgb]{0,0,0}| '];
                                    end
                                end
                            else
                                tmpstr=[''];
                            end
                            if sum(cntexp(:))==0 || sum(sum(~isnan(fsp2)))==0
                                tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                set(tx, 'Layer', 'front')          
                            else
                                tx=text(0.98,0.06,tmpstr,'HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                set(tx, 'Layer', 'front')
                            end   
                            b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                            yyaxis left
                            set(b,'YColor','none');
                            yyaxis right
                            set(b,'plotboxaspectratio',[1 1 1])
                            set(b,'Color','none');
                            set(b,'XColor','none');
                            set(b,'tickdir','both')
                            set(b,'YColor',[0 0 0]);
                            set(b,'xtick',[]);
                            ylim(b,[xstart-.5 size(BT_lat,1)+.5])
                            tmpxend=size(BT_lat,1);
                            if size(identinittimesunique,1)>50
                                set(b,'ytick',[1:4:100]); 
                            else
                                set(b,'ytick',[1:2:100]); 
                            end    
                            trkerr_exp_fcnt=zeros(1,tmpxend);            
                            trkerr_exp_fcnt1=zeros(1,tmpxend);            
                            trkerr_exp_fcnt2=zeros(1,tmpxend);
                            clear cntexp
                            for tmp=1:size(identexp,1)
                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,:,tmp)),2);
                            end  
                            set(gca,'fontsize',12)
                            xL=xlim;
                            yL=ylim;
                            ylabel({'# 6-h','fcsts'},'Position',[xL(2) yL(1)],'VerticalAlignment','top','HorizontalAlignment','center','Rotation',0); 
                            set(gca,'position',[spPos(1)+.08 spPos(2)+.05 spPos(3) spPos(4)])
                            screenposition = get(gcf,'Position');
                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                            set(gcf, 'InvertHardcopy', 'off')
                            % Create a text box at every Tick label position
                            maxmin=squeeze(sum(~isnan(tmp_exp(:,:,:)),2)); 
                            if size(identinittimesunique,1)>50
                                maxmin=maxmin(1:4:end,:); 
                            else
                                maxmin=maxmin(1:2:end,:); 
                            end                        
                            yTicks0 = get(gca, 'yticklabel');
                            yTicks = get(gca, 'ytick');
                            set(b,'yticklabels',[]);
                            minX =1;
                            HorizontalOffset1=0.03;
                            VerticalOffset = 0.2;
                            for xx = 1:size(yTicks0,1)
                                tmptxt0=maxmin(xx,:);
                                tmptxt1=[];
                                if size(unique(tmptxt0),2)==1
                                    tmptxt1=num2str(tmptxt0(1));
                                else
                                    for xxx=1:size(maxmin,2)
                                          if xxx==size(maxmin,2)
                                              tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(xxx,:)),'}',num2str(tmptxt0(xxx))];
                                          else
                                              tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(xxx,:)),'}',num2str(tmptxt0(xxx)),'\color[rgb]{0,0,0}/'];
                                          end
                                    end
                                end
                                text(minX+HorizontalOffset1,yTicks(xx),tmptxt1,'verticalalignment','middle','fontsize',12)
                            end
                            f = getframe(hfig);
                            imwrite(f.cdata,[identtrackint,'/FULL/',identn,'_',tmp_name,'_cycles.png'],'png');
                            close all
                        end            
                        % Create Graphics: by cycle trk, int, spd bias - bt-gh vs. bt-deny
                        for plt=[2:18,21:23] % no across or along for bias since already in error
                            clear l cntexp
                            set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                            hfig=figure;
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                            ax1=subplot(3,4,[1:8]);
                            hold on
                            if plt==1
                                 tmp_exp=trkerr_exp(:,1:skip:end,:);
                                 tmp_name='trkbias';
                                 tmp_title='Track Bias (km)';
                                 tmp_ytitle='Bias (km)';
                            elseif plt==2
                                tmp_exp=interr_exp(:,1:skip:end,:);
                                tmp_name='presbias';
                                tmp_title='Pressure Bias (hPa)';
                                tmp_ytitle='Bias (hPa)';
                            elseif plt==3
                                tmp_exp=spderr_exp(:,1:skip:end,:);
                                tmp_name='spdbias';
                                tmp_title='Wind Speed Bias (kts)';
                                tmp_ytitle='Bias (kts)';
                             elseif plt==4
                                tmp_exp=ne34err_exp(:,1:skip:end,:);
                                tmp_name='ne34bias';
                                tmp_title='R34 NEQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                                yrange=[-200 200];
                            elseif plt==5
                                tmp_exp=se34err_exp(:,1:skip:end,:);
                                tmp_name='se34bias';
                                tmp_title='R34 SEQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                                yrange=[-200 200];
                            elseif plt==6
                                tmp_exp=sw34err_exp(:,1:skip:end,:);
                                tmp_name='sw34bias';
                                tmp_title='R34 SWQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                                yrange=[-200 200];
                            elseif plt==7
                                tmp_exp=nw34err_exp(:,1:skip:end,:);
                                tmp_name='nw34bias';
                                tmp_title='R34 NWQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                                yrange=[-200 200];
                            elseif plt==8
                                tmp_exp=ne50err_exp(:,1:skip:end,:);
                                tmp_name='ne50bias';
                                tmp_title='R50 NEQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                                yrange=[-200 200];
                            elseif plt==9
                                tmp_exp=se50err_exp(:,1:skip:end,:);
                                tmp_name='se50bias';
                                tmp_title='R50 SEQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                                yrange=[-200 200];
                            elseif plt==10
                                tmp_exp=sw50err_exp(:,1:skip:end,:);
                                tmp_name='sw50bias';
                                tmp_title='R50 SWQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                                yrange=[-200 200];
                            elseif plt==11
                                tmp_exp=nw50err_exp(:,1:skip:end,:);
                                tmp_name='nw50bias';
                                tmp_title='R50 NWQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                                yrange=[-200 200];
                            elseif plt==12
                                tmp_exp=ne64err_exp(:,1:skip:end,:);
                                tmp_name='ne64bias';
                                tmp_title='R64 NEQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                                yrange=[-200 200];
                            elseif plt==13
                                tmp_exp=se64err_exp(:,1:skip:end,:);
                                tmp_name='se64bias';
                                tmp_title='R64 SEQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                                yrange=[-200 200];
                            elseif plt==14
                                tmp_exp=sw64err_exp(:,1:skip:end,:);
                                tmp_name='sw64bias';
                                tmp_title='R64 SWQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                                yrange=[-200 200];
                            elseif plt==15
                                tmp_exp=nw64err_exp(:,1:skip:end,:);
                                tmp_name='nw64bias';
                                tmp_title='R64 NWQ Bias (km)';
                                tmp_ytitle='Bias (km)';
                                yrange=[-200 200];
                            elseif plt==16
                                tmp_exp=poerr_exp(:,1:skip:end,:);
                                tmp_name='pobias';
                                tmp_title='Outer Clsd Isbr Prs Bias (hPa)';
                                tmp_ytitle='Bias (hPa)';
                            elseif plt==17
                                tmp_exp=roerr_exp(:,1:skip:end,:);
                                tmp_name='robias';
                                tmp_title='Outer Clsd Isbr Rad Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==18
                                tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                tmp_name='rmwbias';
                                tmp_title='RMW Bias (km)';
                                tmp_ytitle='Bias (km)';
                            elseif plt==19
                                tmp_exp=ateerr_exp(:,1:skip:end,:);
                                tmp_name='atebias';
                                tmp_title='Along-Track Bias (km)';
                                tmp_ytitle='Bias (km)';
                                yrange=[-500 500];                
                            elseif plt==20
                                tmp_exp=xteerr_exp(:,1:skip:end,:);
                                tmp_name='xtebias';
                                tmp_title='Across-Track Bias (km)';
                                tmp_ytitle='Bias (km)';
                                yrange=[-500 500]; 
                            elseif plt==21
                                tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                tmp_name='34bias';
                                tmp_title='R34 Bias (km)';
                                tmp_ytitle='Bias (km)';
                                yrange=[-200 200];
                            elseif plt==22
                                tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                tmp_name='50bias';
                                tmp_title='R50 Bias (km)';
                                tmp_ytitle='Bias (km)';
                                yrange=[-200 200];
                            elseif plt==23
                                tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                tmp_name='64bias';
                                tmp_title='R64 Bias (km)';
                                tmp_ytitle='Bias (km)';
                                yrange=[-200 200]; 
                            end                                                
                            for tmp=1:size(identexp,1)
                                l(tmp)=plot(nanmean(tmp_exp(:,:,tmp),2),1:size(tmp_exp(:,:,tmp),1),'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2);
                            end
                            % Find which experiment to compare to
                            for tmp=1:size(identexp,1)
                                if strcmp(identexp(tmp),identexpsigimp)
                                    tmpimp=tmp;
                                end
                            end       
                            plot(zeros(1,100),-10:89,'Color',[.5 .5 .5],'linewidth',1);
                            for tmp=1:size(identexp,1)
                                sigtest=ttestsc(abs(tmp_exp(:,:,tmp))',abs(tmp_exp(:,:,tmpimp))','alpha',.05);
                                sigtest_loc=find(sigtest==1);
                                sigtest_exp=nanmean(tmp_exp(sigtest_loc,:,:),2);
                                for tmpi=tmp
                                    plot(sigtest_exp(:,:,tmpi),sigtest_loc,'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                end                
                                sigtest=ttestsc(abs(tmp_exp(:,:,tmp))',abs(tmp_exp(:,:,tmpimp))','alpha',.1);
                                sigtest_loc1=find(sigtest==1);
                                sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                sigtest_exp=nanmean(tmp_exp(sigtest_loc,:,:),2);
                                for tmpi=tmp
                                    plot(sigtest_exp(:,:,tmpi),sigtest_loc,'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                                end
                            end  
                            set(gca,'plotboxaspectratio',[1 1 1])
                            ylabel('Cycle Initialization Time','fontsize',20)
                            xlabel(tmp_ytitle,'fontsize',20)
                            set(gca,'fontsize',20)
                            box on
                            xstart=1;          
                            ylim([xstart-.5 size(BT_lat,1)+.5])  
                            %% BIAS
                            % YRANGE
                            clear allquad
                            allquad(1)=(max(max(nanmean((ne34err_exp(:,1:skip:end,:)),2))));
                            allquad(2)=(max(max(nanmean((se34err_exp(:,1:skip:end,:)),2))));
                            allquad(3)=(max(max(nanmean((nw34err_exp(:,1:skip:end,:)),2))));
                            allquad(4)=(max(max(nanmean((sw34err_exp(:,1:skip:end,:)),2))));
                            allquad(5)=(max(max(nanmean((ne50err_exp(:,1:skip:end,:)),2))));
                            allquad(6)=(max(max(nanmean((se50err_exp(:,1:skip:end,:)),2))));
                            allquad(7)=(max(max(nanmean((nw50err_exp(:,1:skip:end,:)),2))));
                            allquad(8)=(max(max(nanmean((sw50err_exp(:,1:skip:end,:)),2))));
                            allquad(9)=(max(max(nanmean((ne64err_exp(:,1:skip:end,:)),2))));
                            allquad(10)=(max(max(nanmean((se64err_exp(:,1:skip:end,:)),2))));
                            allquad(11)=(max(max(nanmean((nw64err_exp(:,1:skip:end,:)),2))));
                            allquad(12)=(max(max(nanmean((sw64err_exp(:,1:skip:end,:)),2))));
                            allquadmax=max(max(max(allquad)));
                            allquadmin=min(min(min(allquad)));
                            tmpvalq=max(abs(allquadmin),abs(allquadmax));
                            if isnan(tmpvalq)==1
                                    tmpvalq=0;
                            end
                            if numel(num2str(tmpvalq))==3
                                addfacq=100;
                            elseif numel(num2str(tmpvalq))==2
                                addfacq=20;
                            else
                                addfacq=20;
                            end
                            if numel(num2str(round(max(max(nanmean((tmp_exp),2))))))==3
                                addfac=100;
                            elseif numel(num2str(round(max(max(nanmean((tmp_exp),2))))))==2
                                addfac=20;
                            else
                                addfac=20;
                            end
                            if plt<=3 || (plt>=16 && plt<=18) % 0-end
                                tmpmin=min(min(nanmean((tmp_exp),2)));
                                tmpmax=max(max(nanmean((tmp_exp),2)));
                                tmpval=max(abs(tmpmin),abs(tmpmax));
                                if isnan(tmpval)==1
                                    tmpval=0;
                                end
                                yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];                                
                            elseif plt==19 || plt==20 % -end end 
                                tmpmin=min(min(nanmean((tmp_exp),2)));
                                tmpmax=max(max(nanmean((tmp_exp),2)));
                                tmpval=max(abs(tmpmin),abs(tmpmax));
                                if isnan(tmpval)==1
                                    tmpval=0;
                                end
                                yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];                
                            elseif (plt>=4 && plt<=15) || plt>=21%quad
                                yrange=[-round((tmpvalq+addfacq)/10)*10 round((tmpvalq+addfacq)/10)*10];
                            end
                            xlim(yrange)
                            if size(identinittimesunique,1)>50
                                set(gca,'ytick',1:4:100)
                                set(gca,'yticklabel',identinittimesunique(1:4:end,:))
                            else
                                set(gca,'ytick',1:2:100)
                                set(gca,'yticklabel',identinittimesunique(1:2:end,:))
                            end  
                            grid on
                            set(gca,'gridcolor','k','gridalpha',.4,'xgrid','off')
                            set(gca,'fontsize',20)      
                            hold off
                            box on
                            lh=legend(l,identexpshort,'location','northeast');
							lh.FontSize=10;
                            set(gcf,'Units','inches');
                            a1Pos = get(gca,'Position');
                            set(gcf, 'InvertHardcopy', 'off')
                            set(gcf,'Units','inches');
                            screenposition = get(gcf,'Position');
                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                            set(gcf, 'InvertHardcopy', 'off')
                            text(0,1.03,['\textbf{INIT: ',identinittimesunique(1,:),'$\mathbf{-}$',identinittimesunique(end,:),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                            text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                            ax=gca;
                            box on
                            set(ax, 'Layer', 'bottom')
                            ax.LineWidth=1; 
                            set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .85, 0.96]); % maximize figure window
                            set(gca,'Color',[.9 .9 .9])
                            clear cntexp
                            for tmp=1:size(identexp,1)
                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,:,tmp)),2);
                            end
                            if sum([cntexp(:)])==0
                                tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                set(tx, 'Layer', 'front')
                            end   
                            if plt==1 || plt>=4 && plt<=15 || plt==17 || plt==18 || plt>20
                                 tx=text(0.02,0.06,'Too Small','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 tx=text(0.98,0.06,'Too Large','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 set(tx, 'Layer', 'front')  
                            elseif plt==2 || plt==16
                                 tx=text(0.02,0.06,'Too Low','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 tx=text(0.98,0.06,'Too High','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 set(tx, 'Layer', 'front')  
                            elseif plt==3
                                 tx=text(0.02,0.06,'Too Slow','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 tx=text(0.98,0.06,'Too Fast','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 set(tx, 'Layer', 'front') 
                            elseif plt==19
                                 tx=text(0.02,0.06,'Slower than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 tx=text(0.98,0.06,'Faster than BT','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 set(tx, 'Layer', 'front')            
                            elseif plt==20
                                 tx=text(0.02,0.06,'Left of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 tx=text(0.98,0.06,'Right of BT','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                 set(tx, 'Layer', 'front')            
                            end                                              
                            b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                            yyaxis left
                            set(b,'YColor','none');
                            yyaxis right
                            set(b,'plotboxaspectratio',[1 1 1])
                            set(b,'Color','none');
                            set(b,'XColor','none');
                            set(b,'tickdir','both')
                            set(b,'YColor',[0 0 0]);
                            set(b,'xtick',[]);
                            ylim(b,[xstart-.5 size(BT_lat,1)+.5])
                            tmpxend=size(BT_lat,1);
                            if size(identinittimesunique,1)>50
                                set(b,'ytick',[1:4:100]); 
                            else
                                set(b,'ytick',[1:2:100]); 
                            end  
                            trkerr_exp_fcnt=zeros(1,tmpxend);            
                            trkerr_exp_fcnt1=zeros(1,tmpxend);            
                            trkerr_exp_fcnt2=zeros(1,tmpxend);
                            clear cntexp
                            for tmp=1:size(identexp,1)
                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,:,tmp)),2);
                            end  
                            set(gca,'fontsize',12)
                            xL=xlim;
                            yL=ylim;
                            ylabel({'# 6-h','fcsts'},'Position',[xL(2) yL(1)],'VerticalAlignment','top','HorizontalAlignment','center','Rotation',0); 
                            set(gca,'position',[spPos(1)+.08 spPos(2)+.05 spPos(3) spPos(4)])
                            screenposition = get(gcf,'Position');
                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                            set(gcf, 'InvertHardcopy', 'off')            
                            % Create a text box at every Tick label position
                            maxmin=squeeze(sum(~isnan(tmp_exp(:,:,:)),2)); 
                            if size(identinittimesunique,1)>50
                                maxmin=maxmin(1:4:end,:); 
                            else
                                maxmin=maxmin(1:2:end,:); 
                            end
                            yTicks0 = get(gca, 'yticklabel');
                            yTicks = get(gca, 'ytick');
                            set(b,'yticklabels',[]);
                            minX =1;
                            HorizontalOffset1=0.03;
                            VerticalOffset = 0.2;
                            for xx = 1:size(yTicks0,1)
                                tmptxt0=maxmin(xx,:);
                                tmptxt1=[];
                                if size(unique(tmptxt0),2)==1
                                    tmptxt1=num2str(tmptxt0(1));
                                else
                                    for xxx=1:size(maxmin,2)
                                          if xxx==size(maxmin,2)
                                              tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(xxx,:)),'}',num2str(tmptxt0(xxx))];
                                          else
                                              tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(xxx,:)),'}',num2str(tmptxt0(xxx)),'\color[rgb]{0,0,0}/'];
                                          end
                                    end
                                end
                                text(minX+HorizontalOffset1,yTicks(xx),tmptxt1,'verticalalignment','middle','fontsize',12)
                            end
                            f = getframe(hfig);
                            imwrite(f.cdata,[identtrackint,'/FULL/',identn,'_',tmp_name,'_cycles.png'],'png');
                            close all
                        end


                        %% NaN NOT TD TS HU - this is a switch in the namelist
                        if exist('BT_cat','var')==1
                            btct=BT_cat(:);
                            for i=1:size(btct)
                                if isempty(btct{i})==1
                                    btct0(i,:)='XX';
                                else
                                    btct0(i,:)=btct{i};
                                end
                            end
                            btct=unique(btct0,'rows');
                            if strcmp(btct,'XX')==1 %% no category designation yet! this wont be NHC verified
                                disp(['The BT for ',identn,' does not have a category designation yet! Therefore it cannot be NHC verified. While FULL/ graphics are created for this storm, subsets will NOT be generated and it will NOT be included in any composites']);
                            else

                                if identremoveinv==1
                                    % First remove forecasts when
                                    % t=0=nottropicalorsubtropical
                                    for exrm=1:size(BT_cat,1)
                                        if strcmp(BT_cat{exrm,1},'TD')==0 && strcmp(BT_cat{exrm,1},'TS')==0 && strcmp(BT_cat{exrm,1},'HU')==0 && strcmp(BT_cat{exrm,1},'SD')==0 && strcmp(BT_cat{exrm,1},'SS')==0
                                            for exno=1:size(BT_cat,2)
                                                BT_cat{exrm,exno}=NaN;                        
                                                BT_lon(exrm,exno)=NaN;
                                                BT_lat(exrm,exno)=NaN;
                                                BT_maxspd(exrm,exno)=NaN;
                                                BT_minpres(exrm,exno)=NaN;
                                                BT_ne34(exrm,exno)=NaN;
                                                BT_ne50(exrm,exno)=NaN;
                                                BT_ne64(exrm,exno)=NaN;
                                                BT_se34(exrm,exno)=NaN;
                                                BT_se50(exrm,exno)=NaN;
                                                BT_se64(exrm,exno)=NaN;
                                                BT_sw34(exrm,exno)=NaN;
                                                BT_sw50(exrm,exno)=NaN;
                                                BT_sw64(exrm,exno)=NaN;
                                                BT_nw34(exrm,exno)=NaN;
                                                BT_nw50(exrm,exno)=NaN;
                                                BT_nw64(exrm,exno)=NaN;
                                                BT_po(exrm,exno)=NaN;
                                                BT_ro(exrm,exno)=NaN;
                                                BT_rmw(exrm,exno)=NaN;         
                                                EXP_lon(exrm,exno,:)=NaN;
                                                EXP_lat(exrm,exno,:)=NaN;
                                                EXP_maxspd(exrm,exno,:)=NaN;
                                                EXP_minpres(exrm,exno,:)=NaN;
                                                EXP_ne34(exrm,exno,:)=NaN;
                                                EXP_ne50(exrm,exno,:)=NaN;
                                                EXP_ne64(exrm,exno,:)=NaN;
                                                EXP_se34(exrm,exno,:)=NaN;
                                                EXP_se50(exrm,exno,:)=NaN;
                                                EXP_se64(exrm,exno,:)=NaN;
                                                EXP_sw34(exrm,exno,:)=NaN;
                                                EXP_sw50(exrm,exno,:)=NaN;
                                                EXP_sw64(exrm,exno,:)=NaN;
                                                EXP_nw34(exrm,exno,:)=NaN;
                                                EXP_nw50(exrm,exno,:)=NaN;
                                                EXP_nw64(exrm,exno,:)=NaN;
                                                EXP_po(exrm,exno,:)=NaN;
                                                EXP_ro(exrm,exno,:)=NaN;
                                                EXP_rmw(exrm,exno,:)=NaN;         
                                                ateerr_exp(exrm,exno,:)=NaN;
                                                xteerr_exp(exrm,exno,:)=NaN;
                                                trkerr_exp(exrm,exno,:)=NaN;
                                                interr_exp(exrm,exno,:)=NaN;
                                                spderr_exp(exrm,exno,:)=NaN;
                                                ne34err_exp(exrm,exno,:)=NaN;
                                                se34err_exp(exrm,exno,:)=NaN;
                                                sw34err_exp(exrm,exno,:)=NaN;
                                                nw34err_exp(exrm,exno,:)=NaN;
                                                ne50err_exp(exrm,exno,:)=NaN;
                                                se50err_exp(exrm,exno,:)=NaN;
                                                sw50err_exp(exrm,exno,:)=NaN;
                                                nw50err_exp(exrm,exno,:)=NaN;
                                                ne64err_exp(exrm,exno,:)=NaN;
                                                se64err_exp(exrm,exno,:)=NaN;
                                                sw64err_exp(exrm,exno,:)=NaN;
                                                nw64err_exp(exrm,exno,:)=NaN;
                                                poerr_exp(exrm,exno,:)=NaN;
                                                roerr_exp(exrm,exno,:)=NaN;
                                                rmwerr_exp(exrm,exno,:)=NaN;
                                            end       
                                        end
                                    end                    

                                    % Second remove times when t=0=tropical and t=x=nottropical
                                    for exrm=1:size(BT_cat,1)
                                        for exno=1:size(BT_cat,2)
                                            if strcmp(BT_cat{exrm,exno},'TD')==0 && strcmp(BT_cat{exrm,exno},'TS')==0 && strcmp(BT_cat{exrm,exno},'HU')==0 && strcmp(BT_cat{exrm,exno},'SD')==0  && strcmp(BT_cat{exrm,exno},'SS')==0  
                                                BT_cat{exrm,exno}=NaN;                        
                                                BT_lon(exrm,exno)=NaN;
                                                BT_lat(exrm,exno)=NaN;
                                                BT_maxspd(exrm,exno)=NaN;
                                                BT_minpres(exrm,exno)=NaN;
                                                BT_ne34(exrm,exno)=NaN;
                                                BT_ne50(exrm,exno)=NaN;
                                                BT_ne64(exrm,exno)=NaN;
                                                BT_se34(exrm,exno)=NaN;
                                                BT_se50(exrm,exno)=NaN;
                                                BT_se64(exrm,exno)=NaN;
                                                BT_sw34(exrm,exno)=NaN;
                                                BT_sw50(exrm,exno)=NaN;
                                                BT_sw64(exrm,exno)=NaN;
                                                BT_nw34(exrm,exno)=NaN;
                                                BT_nw50(exrm,exno)=NaN;
                                                BT_nw64(exrm,exno)=NaN;
                                                BT_po(exrm,exno)=NaN;
                                                BT_ro(exrm,exno)=NaN;
                                                BT_rmw(exrm,exno)=NaN;         
                                                EXP_lon(exrm,exno,:)=NaN;
                                                EXP_lat(exrm,exno,:)=NaN;
                                                EXP_maxspd(exrm,exno,:)=NaN;
                                                EXP_minpres(exrm,exno,:)=NaN;
                                                EXP_ne34(exrm,exno,:)=NaN;
                                                EXP_ne50(exrm,exno,:)=NaN;
                                                EXP_ne64(exrm,exno,:)=NaN;
                                                EXP_se34(exrm,exno,:)=NaN;
                                                EXP_se50(exrm,exno,:)=NaN;
                                                EXP_se64(exrm,exno,:)=NaN;
                                                EXP_sw34(exrm,exno,:)=NaN;
                                                EXP_sw50(exrm,exno,:)=NaN;
                                                EXP_sw64(exrm,exno,:)=NaN;
                                                EXP_nw34(exrm,exno,:)=NaN;
                                                EXP_nw50(exrm,exno,:)=NaN;
                                                EXP_nw64(exrm,exno,:)=NaN;
                                                EXP_po(exrm,exno,:)=NaN;
                                                EXP_ro(exrm,exno,:)=NaN;
                                                EXP_rmw(exrm,exno,:)=NaN;         
                                                ateerr_exp(exrm,exno,:)=NaN;
                                                xteerr_exp(exrm,exno,:)=NaN;
                                                trkerr_exp(exrm,exno,:)=NaN;
                                                interr_exp(exrm,exno,:)=NaN;
                                                spderr_exp(exrm,exno,:)=NaN;
                                                ne34err_exp(exrm,exno,:)=NaN;
                                                se34err_exp(exrm,exno,:)=NaN;
                                                sw34err_exp(exrm,exno,:)=NaN;
                                                nw34err_exp(exrm,exno,:)=NaN;
                                                ne50err_exp(exrm,exno,:)=NaN;
                                                se50err_exp(exrm,exno,:)=NaN;
                                                sw50err_exp(exrm,exno,:)=NaN;
                                                nw50err_exp(exrm,exno,:)=NaN;
                                                ne64err_exp(exrm,exno,:)=NaN;
                                                se64err_exp(exrm,exno,:)=NaN;
                                                sw64err_exp(exrm,exno,:)=NaN;
                                                nw64err_exp(exrm,exno,:)=NaN;
                                                poerr_exp(exrm,exno,:)=NaN;
                                                roerr_exp(exrm,exno,:)=NaN;
                                                rmwerr_exp(exrm,exno,:)=NaN;
                                            end       
                                        end
                                    end                    
                                end

                                %% NaN TIMES NOT EX - this is a switch in the namelist
                                if identremoveex==1
                                    % First remove forecasts when t=0=EX
                                    for exrm=1:size(BT_cat,1)
                                        if strcmp(BT_cat{exrm,1},'EX')==1 
                                            for exno=1:size(BT_cat,2)
                                                BT_cat{exrm,exno}=NaN;                        
                                                BT_lon(exrm,exno)=NaN;
                                                BT_lat(exrm,exno)=NaN;
                                                BT_maxspd(exrm,exno)=NaN;
                                                BT_minpres(exrm,exno)=NaN;
                                                BT_ne34(exrm,exno)=NaN;
                                                BT_ne50(exrm,exno)=NaN;
                                                BT_ne64(exrm,exno)=NaN;
                                                BT_se34(exrm,exno)=NaN;
                                                BT_se50(exrm,exno)=NaN;
                                                BT_se64(exrm,exno)=NaN;
                                                BT_sw34(exrm,exno)=NaN;
                                                BT_sw50(exrm,exno)=NaN;
                                                BT_sw64(exrm,exno)=NaN;
                                                BT_nw34(exrm,exno)=NaN;
                                                BT_nw50(exrm,exno)=NaN;
                                                BT_nw64(exrm,exno)=NaN;
                                                BT_po(exrm,exno)=NaN;
                                                BT_ro(exrm,exno)=NaN;
                                                BT_rmw(exrm,exno)=NaN;         
                                                EXP_lon(exrm,exno,:)=NaN;
                                                EXP_lat(exrm,exno,:)=NaN;
                                                EXP_maxspd(exrm,exno,:)=NaN;
                                                EXP_minpres(exrm,exno,:)=NaN;
                                                EXP_ne34(exrm,exno,:)=NaN;
                                                EXP_ne50(exrm,exno,:)=NaN;
                                                EXP_ne64(exrm,exno,:)=NaN;
                                                EXP_se34(exrm,exno,:)=NaN;
                                                EXP_se50(exrm,exno,:)=NaN;
                                                EXP_se64(exrm,exno,:)=NaN;
                                                EXP_sw34(exrm,exno,:)=NaN;
                                                EXP_sw50(exrm,exno,:)=NaN;
                                                EXP_sw64(exrm,exno,:)=NaN;
                                                EXP_nw34(exrm,exno,:)=NaN;
                                                EXP_nw50(exrm,exno,:)=NaN;
                                                EXP_nw64(exrm,exno,:)=NaN;
                                                EXP_po(exrm,exno,:)=NaN;
                                                EXP_ro(exrm,exno,:)=NaN;
                                                EXP_rmw(exrm,exno,:)=NaN;         
                                                ateerr_exp(exrm,exno,:)=NaN;
                                                xteerr_exp(exrm,exno,:)=NaN;
                                                trkerr_exp(exrm,exno,:)=NaN;
                                                interr_exp(exrm,exno,:)=NaN;
                                                spderr_exp(exrm,exno,:)=NaN;
                                                ne34err_exp(exrm,exno,:)=NaN;
                                                se34err_exp(exrm,exno,:)=NaN;
                                                sw34err_exp(exrm,exno,:)=NaN;
                                                nw34err_exp(exrm,exno,:)=NaN;
                                                ne50err_exp(exrm,exno,:)=NaN;
                                                se50err_exp(exrm,exno,:)=NaN;
                                                sw50err_exp(exrm,exno,:)=NaN;
                                                nw50err_exp(exrm,exno,:)=NaN;
                                                ne64err_exp(exrm,exno,:)=NaN;
                                                se64err_exp(exrm,exno,:)=NaN;
                                                sw64err_exp(exrm,exno,:)=NaN;
                                                nw64err_exp(exrm,exno,:)=NaN;
                                                poerr_exp(exrm,exno,:)=NaN;
                                                roerr_exp(exrm,exno,:)=NaN;
                                                rmwerr_exp(exrm,exno,:)=NaN;
                                            end       
                                        end
                                    end                    

                                    % Second remove forecasts when t=x=EX            
                                    for exrm=1:size(BT_cat,1)
                                        for exno=1:size(BT_cat,2)
                                            if strcmp(BT_cat{exrm,1},'EX')==1 
                                                BT_cat{exrm,exno}=NaN;                        
                                                BT_lon(exrm,exno)=NaN;
                                                BT_lat(exrm,exno)=NaN;
                                                BT_maxspd(exrm,exno)=NaN;
                                                BT_minpres(exrm,exno)=NaN;
                                                BT_ne34(exrm,exno)=NaN;
                                                BT_ne50(exrm,exno)=NaN;
                                                BT_ne64(exrm,exno)=NaN;
                                                BT_se34(exrm,exno)=NaN;
                                                BT_se50(exrm,exno)=NaN;
                                                BT_se64(exrm,exno)=NaN;
                                                BT_sw34(exrm,exno)=NaN;
                                                BT_sw50(exrm,exno)=NaN;
                                                BT_sw64(exrm,exno)=NaN;
                                                BT_nw34(exrm,exno)=NaN;
                                                BT_nw50(exrm,exno)=NaN;
                                                BT_nw64(exrm,exno)=NaN;
                                                BT_po(exrm,exno)=NaN;
                                                BT_ro(exrm,exno)=NaN;
                                                BT_rmw(exrm,exno)=NaN;         
                                                EXP_lon(exrm,exno,:)=NaN;
                                                EXP_lat(exrm,exno,:)=NaN;
                                                EXP_maxspd(exrm,exno,:)=NaN;
                                                EXP_minpres(exrm,exno,:)=NaN;
                                                EXP_ne34(exrm,exno,:)=NaN;
                                                EXP_ne50(exrm,exno,:)=NaN;
                                                EXP_ne64(exrm,exno,:)=NaN;
                                                EXP_se34(exrm,exno,:)=NaN;
                                                EXP_se50(exrm,exno,:)=NaN;
                                                EXP_se64(exrm,exno,:)=NaN;
                                                EXP_sw34(exrm,exno,:)=NaN;
                                                EXP_sw50(exrm,exno,:)=NaN;
                                                EXP_sw64(exrm,exno,:)=NaN;
                                                EXP_nw34(exrm,exno,:)=NaN;
                                                EXP_nw50(exrm,exno,:)=NaN;
                                                EXP_nw64(exrm,exno,:)=NaN;
                                                EXP_po(exrm,exno,:)=NaN;
                                                EXP_ro(exrm,exno,:)=NaN;
                                                EXP_rmw(exrm,exno,:)=NaN;         
                                                ateerr_exp(exrm,exno,:)=NaN;
                                                xteerr_exp(exrm,exno,:)=NaN;
                                                trkerr_exp(exrm,exno,:)=NaN;
                                                interr_exp(exrm,exno,:)=NaN;
                                                spderr_exp(exrm,exno,:)=NaN;
                                                ne34err_exp(exrm,exno,:)=NaN;
                                                se34err_exp(exrm,exno,:)=NaN;
                                                sw34err_exp(exrm,exno,:)=NaN;
                                                nw34err_exp(exrm,exno,:)=NaN;
                                                ne50err_exp(exrm,exno,:)=NaN;
                                                se50err_exp(exrm,exno,:)=NaN;
                                                sw50err_exp(exrm,exno,:)=NaN;
                                                nw50err_exp(exrm,exno,:)=NaN;
                                                ne64err_exp(exrm,exno,:)=NaN;
                                                se64err_exp(exrm,exno,:)=NaN;
                                                sw64err_exp(exrm,exno,:)=NaN;
                                                nw64err_exp(exrm,exno,:)=NaN;
                                                poerr_exp(exrm,exno,:)=NaN;
                                                roerr_exp(exrm,exno,:)=NaN;
                                                rmwerr_exp(exrm,exno,:)=NaN;
                                            end       
                                        end
                                    end                    
                                end

                                if sum(~isnan(BT_lat(:)))==0
                                    % delete the folder of the storm if no data 
                                    rmdir([identout,'RESULTS/',identfold,'VERIFICATION/',identremovename,'/',ident(1:2),'/',identn,'/'],'s')
                                else

                                    % Subsets
                                    if identconv==1 || identsatobs==1 
                                        stratlist=[1:9,21:28];
                                        BT_drops=identdropcyc;
                                        BT_target=identdropcyc;
                                        btd=find(BT_drops==1);
                                        if isempty(btd)==1 && identconv==1 % if the storm has conventional obs...           
                                            keepstm=NaN;
                                        elseif isempty(btd)==1 && identconv==0 % if conventional obs are turned off...
                                            keepstm=1;
                                        else
                                            BT_target(btd(1):end)=1; % from first time conventional obs detected in storm through end of storm
                                            keepstm=1; % save storm index since it has conventional obs
                                        end
                                    else
                                        stratlist=[1,4:9];
                                        keepstm=NaN;
                                    end
                                    
                                    if identns==1
                                        stratlist=[stratlist 888];
                                    end

                                    BT_cat1=BT_maxspd(:,1);
                                    BT_lat1=BT_lat(:,1);
                                    for strat=stratlist    
                                        if strat==1 % none
                                            clear breakstrat
                                            stname='none';
                                        elseif strat==2 % by those that had obs
                                            clear breakstrat
                                            stname='obs';
                                            if sum(BT_drops==1)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_OBS.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: OBS');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==3 % by those storms from first point of obs till end
                                            clear breakstrat
                                            stname='recon';
                                             if sum(BT_target==1)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_RECON.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: RECON');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==4 % by intensity
                                            clear breakstrat
                                            stname='TD'; % <34 kts
                                            if sum(BT_cat1<34)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_TD.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: TD');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==5
                                            clear breakstrat
                                            stname='TS'; % >34 kts & < 63 kts
                                            if sum(BT_cat1>=34 & BT_cat1<63)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_TS.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: TS');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==6
                                            clear breakstrat
                                            stname='MN'; % > 64 kts & < 95 kts
                                            if sum(BT_cat1>=63 & BT_cat1<95)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_MN.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: MN');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==7
                                            clear breakstrat
                                            stname='MJ'; % > 96 kts
                                            if sum(BT_cat1>=96)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_MJ.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: MJ');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==8 
                                            clear breakstrat
                                            stname='N30'; % north of 30N
                                            if sum(BT_lat1>=30)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_N30.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: N30');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==9
                                            clear breakstrat
                                            stname='S30'; % south of 30N
                                            if sum(BT_lat1<30)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_S30.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: S30');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==10
                                            clear breakstrat
                                            stname='RI'; % rapidly intensifying storms
                                        elseif strat==11
                                            clear breakstrat
                                            stname='IN'; % intensifying storms
                                        elseif strat==12
                                            clear breakstrat
                                            stname='SS'; % steady-state storms
                                        elseif strat==13
                                            clear breakstrat
                                            stname='WK'; % weakening storms 
                                        elseif strat==14
                                            clear breakstrat
                                            stname='RW'; % rapidly weakening storms    
                                        elseif strat==15 %% TD strat obs only
                                            clear breakstrat
                                            stname='TD-OBS'; % <34 kts
                                            if sum(BT_cat1<34 & BT_drops'==1)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_TD-OBS.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: TD-OBS');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==16 %% TS strat obs only
                                            clear breakstrat
                                            stname='TS-OBS'; % >34 kts & < 63 kts
                                            if sum(BT_cat1>=34 & BT_cat1<63 & BT_drops'==1)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_TS-OBS.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: TS-OBS');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==17 %% MN strat obs only
                                            clear breakstrat
                                            stname='MN-OBS'; % > 64 kts & < 95 kts
                                            if sum(BT_cat1>=63 & BT_cat1<95 & BT_drops'==1)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_MN-OBS.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: MN-OBS');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==18 %% MJ strat obs only
                                            clear breakstrat
                                            stname='MJ-OBS'; % > 96 kts
                                            if sum(BT_cat1>=96 & BT_drops'==1)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_MJ-OBS.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: MJ-OBS');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==19 %% N30 strat obs only
                                            clear breakstrat
                                            stname='N30-OBS'; % north of 30N
                                            if sum(BT_lat1>=30 & BT_drops'==1)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_N30-OBS.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: N30-OBS');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==20 %% S30 strat obs only
                                            clear breakstrat
                                            stname='S30-OBS'; % south of 30N
                                            if sum(BT_lat1<30 & BT_drops'==1)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_S30-OBS.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: S30-OBS');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end  
                                        elseif strat==21 % by those that had no obs
                                            clear breakstrat
                                            stname='noobs';
                                            if sum(BT_drops'==0)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_NOOBS.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: NOOBS');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==22 % by those storms before the first point of ob
                                            clear breakstrat
                                            stname='prerecon';
                                            if sum(BT_target'==0)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_PRERECON.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: PRERECON');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                         elseif strat==23 %% TD strat NOOBS only
                                            clear breakstrat
                                            stname='TD-NOOBS'; % <34 kts
                                            if sum(BT_cat1<34 & BT_drops'==0)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_TD-NOOBS.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: TD-NOOBS');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==24 %% TS strat NOOBS only
                                            clear breakstrat
                                            stname='TS-NOOBS'; % >34 kts & < 63 kts
                                            if sum(BT_cat1>=34 & BT_cat1<63 & BT_drops'==0)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_TS-NOOBS.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: TS-NOOBS');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==25 %% MN strat NOOBS only
                                            clear breakstrat
                                            stname='MN-NOOBS'; % > 64 kts & < 95 kts
                                            if sum(BT_cat1>=63 & BT_cat1<95 & BT_drops'==0)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_MN-NOOBS.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: MN-NOOBS');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==26 %% MJ strat NOOBS only
                                            clear breakstrat
                                            stname='MJ-NOOBS'; % > 96 kts
                                            if sum(BT_cat1>=96 & BT_drops'==0)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_MJ-NOOBS.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: MJ-NOOBS');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==27 %% N30 strat NOOBS only
                                            clear breakstrat
                                            stname='N30-NOOBS'; % north of 30N
                                            if sum(BT_lat1>=30 & BT_drops'==0)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_N30-NOOBS.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: N30-NOOBS');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end
                                        elseif strat==28 %% S30 strat NOOBS only
                                            clear breakstrat
                                            stname='S30-NOOBS'; % south of 30N
                                            if sum(BT_lat1<30 & BT_drops'==0)==0
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_S30-NOOBS.txt'],'wt');
                                                fprintf(fid,'%s\n','STRATIFICATION: S30-NOOBS');
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end      
                                        elseif strat==888
                                            clear breakstrat
                                            stname=identnsname;
                                            clear tmpyrb
                                            numlist=[];
                                            for ins=1:size(identnewsub,1)
                                                tmp=identnewsub(ins,:);
                                                for ins2=1:size(identinittimesunique,1)
                                                    if strcmp(identinittimesunique(ins2,:),tmp)==1
                                                        numlist=[numlist ins2];
                                                    end
                                                end
                                            end
                                            if isempty(numlist)==1
                                                breakstrat='yes';
                                                fid = fopen([identtrackint,'/STRAT_',identnsname,'.txt'],'wt');
                                                fprintf(fid,'%s\n',['STRATIFICATION: ',identnsname]);
                                                fprintf(fid,'%s\n','none');
                                                fclose(fid);
                                            end  
                                        end

                                        if exist('breakstrat','var')==1
                                        else    
                                            if sum(isnan(keepstm))-size(keepstm,2)==0 && (strat==2 || strat==3) % no storms have obs...skip strat 2 & 3
                                                disp('None of the storms in the composite have obs...skipping the OBS and TARGET stratifications...')
                                            else
                                                % Create Graphics: trk, int, spd errors - bt-gh vs. bt-deny
                                                for plt=1:23
                                                    clear l cntexp
                                                    set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                                    hfig=figure;
                                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                                    ax1=subplot(3,4,[1:8]);
                                                    hold on
                                                    if plt==1
                                                         tmp_exp=trkerr_exp(:,1:skip:end,:);
                                                         tmp_name='trkerr';
                                                         tmp_title='Track Error (km)';
                                                         tmp_ytitle='Error (km)';
                                                    elseif plt==2
                                                        tmp_exp=interr_exp(:,1:skip:end,:);
                                                        tmp_name='preserr';
                                                        tmp_title='Pressure Error (hPa)';
                                                        tmp_ytitle='Error (hPa)';
                                                    elseif plt==3
                                                        tmp_exp=spderr_exp(:,1:skip:end,:);
                                                        tmp_name='spderr';
                                                        tmp_title='Wind Speed Error (kts)';
                                                        tmp_ytitle='Error (kts)';
                                                     elseif plt==4
                                                        tmp_exp=ne34err_exp(:,1:skip:end,:);
                                                        tmp_name='ne34err';
                                                        tmp_title='R34 NEQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==5
                                                        tmp_exp=se34err_exp(:,1:skip:end,:);
                                                        tmp_name='se34err';
                                                        tmp_title='R34 SEQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==6
                                                        tmp_exp=sw34err_exp(:,1:skip:end,:);
                                                        tmp_name='sw34err';
                                                        tmp_title='R34 SWQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==7
                                                        tmp_exp=nw34err_exp(:,1:skip:end,:);
                                                        tmp_name='nw34err';
                                                        tmp_title='R34 NWQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==8
                                                        tmp_exp=ne50err_exp(:,1:skip:end,:);
                                                        tmp_name='ne50err';
                                                        tmp_title='R50 NEQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==9
                                                        tmp_exp=se50err_exp(:,1:skip:end,:);
                                                        tmp_name='se50err';
                                                        tmp_title='R50 SEQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==10
                                                        tmp_exp=sw50err_exp(:,1:skip:end,:);
                                                        tmp_name='sw50err';
                                                        tmp_title='R50 SWQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==11
                                                        tmp_exp=nw50err_exp(:,1:skip:end,:);
                                                        tmp_name='nw50err';
                                                        tmp_title='R50 NWQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==12
                                                        tmp_exp=ne64err_exp(:,1:skip:end,:);
                                                        tmp_name='ne64err';
                                                        tmp_title='R64 NEQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==13
                                                        tmp_exp=se64err_exp(:,1:skip:end,:);
                                                        tmp_name='se64err';
                                                        tmp_title='R64 SEQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==14
                                                        tmp_exp=sw64err_exp(:,1:skip:end,:);
                                                        tmp_name='sw64err';
                                                        tmp_title='R64 SWQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==15
                                                        tmp_exp=nw64err_exp(:,1:skip:end,:);
                                                        tmp_name='nw64err';
                                                        tmp_title='R64 NWQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==16
                                                        tmp_exp=poerr_exp(:,1:skip:end,:);
                                                        tmp_name='poerr';
                                                        tmp_title='Outer Clsd Isbr Prs Error (hPa)';
                                                        tmp_ytitle='Error (hPa)';
                                                    elseif plt==17
                                                        tmp_exp=roerr_exp(:,1:skip:end,:);
                                                        tmp_name='roerr';
                                                        tmp_title='Outer Clsd Isbr Rad Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                    elseif plt==18
                                                        tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                                        tmp_name='rmwerr';
                                                        tmp_title='RMW Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                    elseif plt==19
                                                        tmp_exp=ateerr_exp(:,1:skip:end,:);
                                                        tmp_name='ateerr';
                                                        tmp_title='Along-Track Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[-500 500];                
                                                    elseif plt==20
                                                        tmp_exp=xteerr_exp(:,1:skip:end,:);
                                                        tmp_name='xteerr';
                                                        tmp_title='Across-Track Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[-500 500]; 
                                                    elseif plt==21
                                                        tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                                        tmp_name='34err';
                                                        tmp_title='R34 Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 100];
                                                    elseif plt==22
                                                        tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                                        tmp_name='50err';
                                                        tmp_title='R50 Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 100];
                                                    elseif plt==23
                                                        tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                                        tmp_name='64err';
                                                        tmp_title='R64 Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 100];
                                                    end
                                                    if plt <19 || plt >20
                                                        tmp_exp=abs(tmp_exp); % added for MAE
                                                    end
                                                    tmp_exp0=tmp_exp;

                                                     % Strat
                                                    if strat==1
                                                        clear tmpyrb
                                                        tmpnm=identinittimesunique(~isnan(BT_cat1)==1,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_ALL.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: ALL');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end
                                                    elseif strat==2
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_drops==1,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_drops'==1 & ~isnan(BT_cat1)==1,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_OBS.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: OBS');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end
                                                    elseif strat==3
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_target==1,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_target'==1 & ~isnan(BT_cat1)==1,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_TARGETED.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: TARGETED');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end
                                                    elseif strat==4 % TD
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1<34,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_cat1<34,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_TD.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: TD');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end                
                                                    elseif strat==5 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=34 & BT_cat1<63,:,:);
                                                        end 
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_TS.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: TS');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end   
                                                    elseif strat==6 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<95,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=63 & BT_cat1<95,:,:);
                                                        end                  
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_MN.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: MN');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end   
                                                    elseif strat==7 % MJ
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=96,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=96,:,:);
                                                        end     
                                                        tmpnm=identinittimesunique(BT_cat1>=96,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_MJ.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: MJ');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end   
                                                    elseif strat==8 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1>=30,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1>=30,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_N30.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: N30');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end   
                                                    elseif strat==9 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1<30,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_S30.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: S30');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end 
                                                    elseif strat==15 %% TD strat obs only
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1<34 & BT_drops'==1,:,:);
                                                        end   
                                                        tmpnm=identinittimesunique(BT_cat1<34 & BT_drops'==1,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_TD-OBS.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: TD-OBS');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end 
                                                    elseif strat==16 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=34 & BT_cat1<63 & BT_drops'==1,:,:);
                                                        end            
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63 & BT_drops'==1,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_TS-OBS.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: TS-OBS');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end   
                                                    elseif strat==17 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=63 & BT_cat1<95 & BT_drops'==1,:,:);
                                                         end
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95 & BT_drops'==1,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_MN-OBS.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: MN-OBS');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end   
                                                    elseif strat==18 % MJ
                                                        clear tmpyrb
                                                       if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                       else
                                                            tmp_exp=tmp_exp(BT_cat1>=96 & BT_drops'==1,:,:);
                                                       end
                                                        tmpnm=identinittimesunique(BT_cat1>=96 & BT_drops'==1,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_MJ-OBS.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: MJ-OBS');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end   
                                                    elseif strat==19 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1>=30 & BT_drops'==1,:,:);
                                                         end   
                                                        tmpnm=identinittimesunique(BT_lat1>=30 & BT_drops'==1,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_N30-OBS.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: N30-OBS');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end   
                                                    elseif strat==20 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1<30 & BT_drops'==1,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30 & BT_drops'==1,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_S30-OBS.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: S30-OBS');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end
                                                    elseif strat==21
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_drops==0,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_drops'==0 & ~isnan(BT_cat1)==1,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_NOOBS.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: NOOBS');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end
                                                    elseif strat==22
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_target==0,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_target'==0 & ~isnan(BT_cat1)==1,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_PRERECON.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: PRERECON');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end    
                                                    elseif strat==23 %% TD strat NOOBS only
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1<34 & BT_drops'==0,:,:);
                                                        end   
                                                        tmpnm=identinittimesunique(BT_cat1<34 & BT_drops'==0,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_TD-NOOBS.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: TD-NOOBS');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end 
                                                    elseif strat==24 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=34 & BT_cat1<63 & BT_drops'==0,:,:);
                                                        end            
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63 & BT_drops'==0,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_TS-NOOBS.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: TS-NOOBS');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end   
                                                    elseif strat==25 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=63 & BT_cat1<95 & BT_drops'==0,:,:);
                                                         end
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95 & BT_drops'==0,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_MN-NOOBS.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: MN-NOOBS');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end   
                                                    elseif strat==26 % MJ
                                                        clear tmpyrb
                                                       if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                       else
                                                            tmp_exp=tmp_exp(BT_cat1>=96 & BT_drops'==0,:,:);
                                                       end
                                                        tmpnm=identinittimesunique(BT_cat1>=96 & BT_drops'==0,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_MJ-NOOBS.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: MJ-NOOBS');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end   
                                                    elseif strat==27 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1>=30 & BT_drops'==0,:,:);
                                                         end   
                                                        tmpnm=identinittimesunique(BT_lat1>=30 & BT_drops'==0,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_N30-NOOBS.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: N30-NOOBS');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end   
                                                    elseif strat==28 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1<30 & BT_drops'==0,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30 & BT_drops'==0,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_S30-NOOBS.txt'],'wt');
                                                            fprintf(fid,'%s\n','STRATIFICATION: S30-NOOBS');
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end    
                                                    elseif strat==888
                                                        clear tmpyrb
                                                        numlist=[];
                                                        for ins=1:size(identnewsub,1)
                                                            tmp=identnewsub(ins,:);
                                                            for ins2=1:size(identinittimesunique,1)
                                                                if strcmp(identinittimesunique(ins2,:),tmp)==1
                                                                    numlist=[numlist ins2];
                                                                end
                                                            end
                                                        end
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([numlist;numlist;numlist;numlist],:,:);
                                                        else
                                                            tmp_exp=tmp_exp(numlist,:,:);
                                                        end                  
                                                        tmpnm=identinittimesunique(numlist,:);
                                                        if plt==1
                                                            fid = fopen([identtrackint,'/STRAT_',stname,'.txt'],'wt');
                                                            fprintf(fid,'%s\n',['STRATIFICATION ',stname]);
                                                            for prn=1:size(tmpnm,1)
                                                                fprintf(fid,'%s\n',tmpnm(prn,:));
                                                            end
                                                            fclose(fid); 
                                                        end  
                                                    end


                                                    for tmp=1:size(identexp,1)
                                                        l(tmp)=plot(1:size(tmp_exp,2),nanmean(tmp_exp(:,:,tmp),1),'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2);
                                                    end           
                                                    % Find which experiment to compare to
                                                    for tmp=1:size(identexp,1)
                                                        if strcmp(identexp(tmp),identexpsigimp)
                                                            tmpimp=tmp;
                                                        end
                                                    end
                                                    plot(-10:89,zeros(1,100),'Color',[.5 .5 .5],'linewidth',1);
                                                    for tmp=1:size(identexp,1)
                                                        sigtest=ttestsc(tmp_exp(:,:,tmp),tmp_exp(:,:,tmpimp),'alpha',.05);
                                                        sigtest_loc=find(sigtest==1);
                                                        sigtest_exp=nanmean(tmp_exp(:,sigtest_loc,:),1);
                                                        for tmpi=tmp
                                                            plot(sigtest_loc,sigtest_exp(:,:,tmpi),'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                                        end
                                                        sigtest=ttestsc(tmp_exp(:,:,tmp),tmp_exp(:,:,tmpimp),'alpha',.1);
                                                        sigtest_loc1=find(sigtest==1);
                                                        sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                                        sigtest_exp=nanmean(tmp_exp(:,sigtest_loc,:),1);
                                                        for tmpi=tmp
                                                            plot(sigtest_loc,sigtest_exp(:,:,tmpi),'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                                                        end
                                                    end   
                                                    set(gca,'plotboxaspectratio',[1 1 1])
                                                    xlabel('Forecast Lead Time (h)','fontsize',20)
                                                    ylabel(tmp_ytitle,'fontsize',20)
                                                    set(gca,'fontsize',20)
                                                    box on
                                                    if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                                        if mod(identmaxfhr*3,12)==0
                                                            xlim([1 ((identmaxfhr*3))/skiphr+1])
                                                        else
                                                            xlim([1 ((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1]) 
                                                        end
                                                    else
                                                        if mod(identmaxfhr*3-3,12)==0
                                                            xlim([1 ((identmaxfhr*3)-3)/skiphr+1])
                                                        else
                                                            xlim([1 ((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1]) 
                                                        end
                                                    end
                                                     % YRANGE
                                                    clear allquad
                                                    allquad(1)=(max(max(nanmean(abs(ne34err_exp(:,1:skip:end,:)),1))));
                                                    allquad(2)=(max(max(nanmean(abs(se34err_exp(:,1:skip:end,:)),1))));
                                                    allquad(3)=(max(max(nanmean(abs(nw34err_exp(:,1:skip:end,:)),1))));
                                                    allquad(4)=(max(max(nanmean(abs(sw34err_exp(:,1:skip:end,:)),1))));
                                                    allquad(5)=(max(max(nanmean(abs(ne50err_exp(:,1:skip:end,:)),1))));
                                                    allquad(6)=(max(max(nanmean(abs(se50err_exp(:,1:skip:end,:)),1))));
                                                    allquad(7)=(max(max(nanmean(abs(nw50err_exp(:,1:skip:end,:)),1))));
                                                    allquad(8)=(max(max(nanmean(abs(sw50err_exp(:,1:skip:end,:)),1))));
                                                    allquad(9)=(max(max(nanmean(abs(ne64err_exp(:,1:skip:end,:)),1))));
                                                    allquad(10)=(max(max(nanmean(abs(se64err_exp(:,1:skip:end,:)),1))));
                                                    allquad(11)=(max(max(nanmean(abs(nw64err_exp(:,1:skip:end,:)),1))));
                                                    allquad(12)=(max(max(nanmean(abs(sw64err_exp(:,1:skip:end,:)),1))));
                                                    allquadmax=max(max(max(allquad)));
                                                    allquadmin=min(min(min(allquad)));
                                                    tmpvalq=max(abs(allquadmin),abs(allquadmax));
                                                    if isnan(tmpvalq)==1
                                                        tmpvalq=0;
                                                    end
                                                    if numel(num2str(tmpvalq))==3
                                                        addfacq=100;
                                                    elseif numel(num2str(tmpvalq))==2
                                                        addfacq=20;
                                                    else 
                                                        addfacq=20;
                                                    end
                                                    if numel(num2str(round(max(max(nanmean((tmp_exp0),1))))))==3
                                                        addfac=100;
                                                    elseif numel(num2str(round(max(max(nanmean((tmp_exp0),1))))))==2
                                                        addfac=20;
                                                    else
                                                        addfac=20;
                                                    end
                                                    if plt<=3 || (plt>=16 && plt<=18) % 0-end
                                                        tmpmin=min(min(nanmean((tmp_exp0),1)));
                                                        tmpmax=max(max(nanmean((tmp_exp0),1)));
                                                        tmpval=max(abs(tmpmin),abs(tmpmax));
                                                        if isnan(tmpval)==1
                                                            tmpval=0;
                                                        end
                                                        yrange=[0 round((tmpval+addfac)/10)*10];                
                                                    elseif plt==19 || plt==20 % -end end 
                                                        tmpmin=min(min(nanmean((tmp_exp0),1)));
                                                        tmpmax=max(max(nanmean((tmp_exp0),1)));
                                                        tmpval=max(abs(tmpmin),abs(tmpmax));
                                                        if isnan(tmpval)==1
                                                            tmpval=0;
                                                        end
                                                        yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                                                    elseif (plt>=4 && plt<=15) || plt>=21%quad
                                                        yrange=[0 round((tmpvalq+addfacq)/10)*10];
                                                    end
                %                                     if plt==1
                %                                         for lo=1:50
                %                                             if max(nanmean(tmp_exp,1))>100*lo
                %                                                 ylim([0 200+100*lo])
                %                                             end
                %                                         end
                %                                     elseif plt==2 || plt==3 || plt>15 && plt <19
                %                                         for lo=1:2:50
                %                                             if max(nanmean(tmp_exp,1))>5*lo
                %                                                 ylim([0 10+5*(lo+1)])
                %                                             end
                %                                         end 
                %                                     else
                                                        ylim(yrange)
                %                                     end
                                                    set(gca,'xtick',1:skiptick:50)
                                                    set(gca,'xticklabel',{'0','12','24','36','48','60','72','84','96','108','120','132'}) 
                                                    grid on
                                                    set(gca,'gridcolor','k','gridalpha',.4,'ygrid','off')
                                                    set(gca,'fontsize',20)      
                                                    hold off
                                                    box on
                                                    lh=legend(l,identexpshort,'location','northeast');
													lh.FontSize=10;
                                                    set(gcf,'Units','inches');
                                                    a1Pos = get(gca,'Position');
                                                    set(gcf, 'InvertHardcopy', 'off')
                                                    set(gcf,'Units','inches');
                                                    screenposition = get(gcf,'Position');
                                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                    set(gcf, 'InvertHardcopy', 'off')
                                                    text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')    
                                    %                 if strat==1
                                                        text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                    %                 else
                                    %                     text(1,1.065,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                    %                     text(1,1.03,[''],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                    %                 end                
                                                    tmpuv = size(tmpnm,1);                               
                                                    tmpphrase=[num2str(tmpuv),'/',num2str(size(identinittimesunique,1))];
                                                    if strat==1
                                                    text(0,1.03,['\textbf{CYCLES: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    else
                                                    text(0,1.03,['\textbf{SUBSET: ',upper(stname),' $\mid$ CYCLES: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    end
                                                    ax=gca;
                                                    box on
                                                    set(ax, 'Layer', 'bottom')
                                                    ax.LineWidth=1; 
                                                    set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                                    set(gca,'Color',[.9 .9 .9])
                                                    for tmp=1:size(identexp,1)
                                                        cntexp(:,tmp)=sum(~isnan(tmp_exp(:,1:skip:end,tmp)),1);
                                                    end
                                                    if sum([cntexp(:)])==0
                                                        tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                        set(tx, 'Layer', 'front')
                                                    end          
                                                    if plt==19
                                                         tx=text(0.02,0.06,'Slower than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                         tx=text(0.02,0.98,'Faster than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                         set(tx, 'Layer', 'front')            
                                                    elseif plt==20
                                                         tx=text(0.02,0.06,'Left of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                         tx=text(0.02,0.98,'Right of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                         set(tx, 'Layer', 'front')            
                                                    end
                                                    b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                                                    set(b,'plotboxaspectratio',[1 1 1])
                                                    set(b,'Color','none');
                                                    set(b,'YColor','none');
                                                    set(b,'tickdir','both')
                                                    set(b,'XColor',[0 0 0]);
                                                    set(b,'ytick',[]);
                                                    if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                                        if mod(identmaxfhr*3,12)==0
                                                            xlim(b,[1 ((identmaxfhr*3))/skiphr+1])
                                                            tmpxend=((identmaxfhr*3))/skiphr+1;
                                                        else
                                                            xlim(b,[1 ((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1]) 
                                                            tmpxend=((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1;
                                                        end
                                                    else
                                                        if mod(identmaxfhr*3-3,12)==0
                                                            xlim(b,[1 ((identmaxfhr*3)-3)/skiphr+1])
                                                            tmpxend=((identmaxfhr*3)-3)/skiphr+1;
                                                        else
                                                            xlim(b,[1 ((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1]) 
                                                            tmpxend=((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1;
                                                        end
                                                    end        
                                                    set(b,'xtick',[1:skiptick:50]);
                                                    trkerr_exp_fcnt=zeros(1,tmpxend);            
                                                    trkerr_exp_fcnt1=zeros(1,tmpxend);            
                                                    trkerr_exp_fcnt2=zeros(1,tmpxend);
                                                    for tmp=1:size(identexp,1)
                                                        cntexp(:,tmp)=sum(~isnan(tmp_exp(:,1:skip:end,tmp)),1);
                                                    end  
                                                %     if size(identexp,1)==2
                                                %         trkerr_exp_fcnt1(1:size(sum(~isnan(tmp_exp(:,1:skip:end,1)),1),2))=sum(~isnan(tmp_exp(:,1:skip:end,1)),1);            
                                                %         trkerr_exp_fcnt2(1:size(sum(~isnan(tmp_exp(:,1:skip:end,2)),1),2))=sum(~isnan(tmp_exp(:,1:skip:end,2)),1);            
                                                %         for i=1:size(trkerr_exp_fcnt1,2)
                                                %             if trkerr_exp_fcnt1(i)==trkerr_exp_fcnt2(i)
                                                %                 b.XTickLabel{i} = num2str(trkerr_exp_fcnt1(i));
                                                %             else
                                                %                 b.XTickLabel{i} = ['\color[rgb]{',num2str(identexpcolors(1,:)),'}',num2str(trkerr_exp_fcnt1(i)),'\color[rgb]{0,0,0}/\color[rgb]{',num2str(identexpcolors(2,:)),'}',num2str(trkerr_exp_fcnt2(i)),''];
                                                %             end
                                                %         end
                                                %     elseif size(identexp,1)>2
                                                %         maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1));         
                                                %         first=min(maxmin');    
                                                %         second=max(maxmin');
                                                %         for i=1:size(maxmin,1)
                                                %             if first(i)==second(i)
                                                %                 b.XTickLabel{i} = num2str(first(i));
                                                %             else
                                                %                 b.XTickLabel{i} = [num2str(first(i)),'/',num2str(second(i)),''];
                                                %             end
                                                %         end
                                                %     end
                                                    %if size(trkerr_gh,2)*3<max(0:size(1:skiptick:tmpxend,2):size(1:skiptick:tmpxend,2)*11)
                                                    %    trkerr_gh_fcnt(end-1:end)=0;
                                                    %end
                                                    set(gca,'fontsize',10)
                                                    xlabel('# fcsts','Position',[-.5 0],'VerticalAlignment','top','HorizontalAlignment','center','Rotation',90,'units','normalized'); 
                                                    set(gca,'position',[spPos(1)+.02 spPos(2)-.05 spPos(3) spPos(4)])
                                                    screenposition = get(gcf,'Position');
                                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                    set(gcf, 'InvertHardcopy', 'off')
                                                    % Create a text box at every Tick label position
                                                    maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1)); 
                                                    xTicks0 = get(gca, 'xticklabel');
                                                    xTicks = get(gca, 'xtick');
                                                    if size(maxmin,1)<size(xTicks0,1)
                                                        for n=1:size(xTicks0,1)-size(maxmin,1)
                                                            maxmin(end+n,:)=0;
                                                        end
                                                    end
                                                    set(b,'xticklabels',[]);
                                                    minY =0;
                                                    VerticalOffset1=0.03;
                                                    HorizontalOffset = 0.2;
                                                    for xx = 1:size(xTicks0,1)
                                                        tmptxt0=maxmin(xx,:);
                                                        tmplines=size(tmptxt0,2);
                                                        if size(unique(tmptxt0),2)==1
                                                            tmptxt1=num2str(tmptxt0(1)); 
                                                            text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)                    
                                                        else
                                                            for n=1:tmplines
                                                                tmptxt1=[];                            
                                                                tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(n,:)),'}',num2str(tmptxt0(n))];                           
                                                                if n==1
                                                                    text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)
                                                                else
                                                                    text(xTicks(xx), minY - (VerticalOffset1+(.02*(n-1))),tmptxt1,'horizontalalignment','center','fontsize',10)                                
                                                                end
                                                            end    
                                                        end
                                                    end
                                                    f = getframe(hfig);
                                                    imwrite(f.cdata,[identtrackint,'/',identn,'_',tmp_name,'_',stname,'.png'],'png');
                                                    close all
                                                end   
                                                % Create Graphics: trk, int, spd improvement vs. deny
                                                for plt=1:23
                                                    clear l cntexp
                                                    set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                                    hfig=figure;
                                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                                    ax1=subplot(3,4,[1:8]);
                                                    hold on
                                                    if plt==1
                                                         tmp_exp=trkerr_exp(:,1:skip:end,:);
                                                         tmp_name='trkskill';
                                                         tmp_title='Track Improvement (\%)';
                                                         tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                         yrange=[-20 20];
                                                    elseif plt==2
                                                        tmp_exp=interr_exp(:,1:skip:end,:);
                                                        tmp_name='presskill';
                                                        tmp_title='Pressure Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                    elseif plt==3
                                                        tmp_exp=spderr_exp(:,1:skip:end,:);
                                                        tmp_name='spdskill';
                                                        tmp_title='Wind Speed Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                     elseif plt==4
                                                        tmp_exp=ne34err_exp(:,1:skip:end,:);
                                                        tmp_name='ne34skill';
                                                        tmp_title='R34 NEQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==5
                                                        tmp_exp=se34err_exp(:,1:skip:end,:);
                                                        tmp_name='se34skill';
                                                        tmp_title='R34 SEQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==6
                                                        tmp_exp=sw34err_exp(:,1:skip:end,:);
                                                        tmp_name='sw34skill';
                                                        tmp_title='R34 SWQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==7
                                                        tmp_exp=nw34err_exp(:,1:skip:end,:);
                                                        tmp_name='nw34skill';
                                                        tmp_title='R34 NWQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==8
                                                        tmp_exp=ne50err_exp(:,1:skip:end,:);
                                                        tmp_name='ne50skill';
                                                        tmp_title='R50 NEQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==9
                                                        tmp_exp=se50err_exp(:,1:skip:end,:);
                                                        tmp_name='se50skill';
                                                        tmp_title='R50 SEQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==10
                                                        tmp_exp=sw50err_exp(:,1:skip:end,:);
                                                        tmp_name='sw50skill';
                                                        tmp_title='R50 SWQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==11
                                                        tmp_exp=nw50err_exp(:,1:skip:end,:);
                                                        tmp_name='nw50skill';
                                                        tmp_title='R50 NWQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==12
                                                        tmp_exp=ne64err_exp(:,1:skip:end,:);
                                                        tmp_name='ne64skill';
                                                        tmp_title='R64 NEQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==13
                                                        tmp_exp=se64err_exp(:,1:skip:end,:);
                                                        tmp_name='se64skill';
                                                        tmp_title='R64 SEQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==14
                                                        tmp_exp=sw64err_exp(:,1:skip:end,:);
                                                        tmp_name='sw64skill';
                                                        tmp_title='R64 SWQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==15
                                                        tmp_exp=nw64err_exp(:,1:skip:end,:);
                                                        tmp_name='nw64skill';
                                                        tmp_title='R64 NWQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==16
                                                        tmp_exp=poerr_exp(:,1:skip:end,:);
                                                        tmp_name='poskill';
                                                        tmp_title='Outer Clsd Isbr Prs Improvement (hPa)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                    elseif plt==17
                                                        tmp_exp=roerr_exp(:,1:skip:end,:);
                                                        tmp_name='roskill';
                                                        tmp_title='Outer Clsd Isbr Rad Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                    elseif plt==18
                                                        tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                                        tmp_name='rmwskill';
                                                        tmp_title='RMW Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                    elseif plt==19
                                                        tmp_exp=ateerr_exp(:,1:skip:end,:);
                                                        tmp_name='ateskill';
                                                        tmp_title='Along-Track Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-200 200];                                 
                                                    elseif plt==20
                                                        tmp_exp=xteerr_exp(:,1:skip:end,:);
                                                        tmp_name='xteskill';
                                                        tmp_title='Across-Track Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-200 200];                                 
                                                    elseif plt==21
                                                        tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                                        tmp_name='34skill';
                                                        tmp_title='R34 Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-50 50];
                                                    elseif plt==22
                                                        tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                                        tmp_name='50skill';
                                                        tmp_title='R50 Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-50 50];
                                                    elseif plt==23
                                                        tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                                        tmp_name='64skill';
                                                        tmp_title='R64 Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-50 50];
                                                    end
                                                    if plt <19 || plt >20
                                                        tmp_exp=abs(tmp_exp); % added for MAE
                                                    end
                                                    tmp_exp0=squeeze(100.*(1-nanmean(tmp_exp(:,:,:),1)./nanmean(tmp_exp(:,:,tmpimp),1)));                  
                                                    % Strat
                                                                                        % Strat
                                                    if strat==1
                                                        clear tmpyrb
                                                        tmpnm=identinittimesunique(~isnan(BT_cat1)==1,:);
                                                    elseif strat==2
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_drops==1,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_drops'==1 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==3
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_target==1,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_target'==1 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==4 % TD
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1<34,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_cat1<34,:);
                                                    elseif strat==5 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=34 & BT_cat1<63,:,:);
                                                        end 
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63,:);
                                                    elseif strat==6 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<95,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=63 & BT_cat1<95,:,:);
                                                        end                  
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95,:);
                                                    elseif strat==7 % MJ
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=96,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=96,:,:);
                                                        end     
                                                        tmpnm=identinittimesunique(BT_cat1>=96,:);
                                                    elseif strat==8 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1>=30,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1>=30,:);
                                                    elseif strat==9 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1<30,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30,:);
                                                    elseif strat==15 %% TD strat obs only
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1<34 & BT_drops'==1,:,:);
                                                        end   
                                                        tmpnm=identinittimesunique(BT_cat1<34 & BT_drops'==1,:);
                                                    elseif strat==16 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=34 & BT_cat1<63 & BT_drops'==1,:,:);
                                                        end            
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63 & BT_drops'==1,:);
                                                    elseif strat==17 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=63 & BT_cat1<95 & BT_drops'==1,:,:);
                                                         end
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95 & BT_drops'==1,:);
                                                    elseif strat==18 % MJ
                                                        clear tmpyrb
                                                       if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                       else
                                                            tmp_exp=tmp_exp(BT_cat1>=96 & BT_drops'==1,:,:);
                                                       end
                                                        tmpnm=identinittimesunique(BT_cat1>=96 & BT_drops'==1,:);
                                                    elseif strat==19 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1>=30 & BT_drops'==1,:,:);
                                                         end   
                                                        tmpnm=identinittimesunique(BT_lat1>=30 & BT_drops'==1,:);
                                                    elseif strat==20 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1<30 & BT_drops'==1,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30 & BT_drops'==1,:);                                        
                                                    elseif strat==21
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_drops==0,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_drops'==0 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==22
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_target==0,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_target'==0 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==23 %% TD strat NOOBS only
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1<34 & BT_drops'==0,:,:);
                                                        end   
                                                        tmpnm=identinittimesunique(BT_cat1<34 & BT_drops'==0,:);
                                                    elseif strat==24 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=34 & BT_cat1<63 & BT_drops'==0,:,:);
                                                        end            
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63 & BT_drops'==0,:);
                                                    elseif strat==25 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=63 & BT_cat1<95 & BT_drops'==0,:,:);
                                                         end
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95 & BT_drops'==0,:);
                                                    elseif strat==26 % MJ
                                                        clear tmpyrb
                                                       if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                       else
                                                            tmp_exp=tmp_exp(BT_cat1>=96 & BT_drops'==0,:,:);
                                                       end
                                                        tmpnm=identinittimesunique(BT_cat1>=96 & BT_drops'==0,:);
                                                    elseif strat==27 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1>=30 & BT_drops'==0,:,:);
                                                         end   
                                                        tmpnm=identinittimesunique(BT_lat1>=30 & BT_drops'==0,:);
                                                    elseif strat==28 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1<30 & BT_drops'==0,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30 & BT_drops'==0,:);    
                                                    elseif strat==888
                                                        clear tmpyrb
                                                        numlist=[];
                                                        for ins=1:size(identnewsub,1)
                                                            tmp=identnewsub(ins,:);
                                                            for ins2=1:size(identinittimesunique,1)
                                                                if strcmp(identinittimesunique(ins2,:),tmp)==1
                                                                    numlist=[numlist ins2];
                                                                end
                                                            end
                                                        end
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([numlist;numlist;numlist;numlist],:,:);
                                                        else
                                                            tmp_exp=tmp_exp(numlist,:,:);
                                                        end                  
                                                        tmpnm=identinittimesunique(numlist,:); 
                                                    end    
                                                    % Find which experiment to compare to
                                                    for tmp=1:size(identexp,1)
                                                        if strcmp(identexp(tmp),identexpsigimp)
                                                            tmpimp=tmp;
                                                        end
                                                    end      
                                                    tmpu=1:size(identexp,1);
                                                    tmpu(tmpu==tmpimp)=[];
                                                    plot(-10:89,zeros(1,100),'Color',[.5 .5 .5],'linewidth',1);
                                                    for tmp=[tmpimp,tmpu]
                                                        imprv=100.*(1-nanmean(tmp_exp(:,:,tmp),1)./nanmean(tmp_exp(:,:,tmpimp),1));                  
                                                        imprv2(:,tmp)=imprv;
                                                        l(tmp)=plot(1:size(imprv,2),imprv,'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2); 
                                                        sigtest=ttestsc(tmp_exp(:,:,tmp),tmp_exp(:,:,tmpimp),'alpha',.05);
                                                        sigtest_loc=find(sigtest==1);
                                                        sigtest_exp=imprv(sigtest_loc);
                                                        plot(sigtest_loc,sigtest_exp,'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                                        sigtest=ttestsc(tmp_exp(:,:,tmp),tmp_exp(:,:,tmpimp),'alpha',.1);
                                                        sigtest_loc1=find(sigtest==1);
                                                        sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                                        sigtest_exp=imprv(sigtest_loc);
                                                        plot(sigtest_loc,sigtest_exp,'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                                                    end   
                                                    set(gca,'plotboxaspectratio',[1 1 1])
                                                    xlabel('Forecast Lead Time (h)','fontsize',20)
                                                    ylabel(tmp_ytitle,'fontsize',20)
                                                    set(gca,'fontsize',20)
                                                    box on
                                                    if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                                        if mod(identmaxfhr*3,12)==0
                                                            xlim([1 ((identmaxfhr*3))/skiphr+1])
                                                        else
                                                            xlim([1 ((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1]) 
                                                        end
                                                    else
                                                        if mod(identmaxfhr*3-3,12)==0
                                                            xlim([1 ((identmaxfhr*3)-3)/skiphr+1])
                                                        else
                                                            xlim([1 ((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1]) 
                                                        end
                                                    end
                                                    % YRANGE
                                                    clear allquad imprv3
                                                    imprv3(:,:,1)=100.*(1-nanmean(abs(ne34err_exp(:,1:skip:end,:)))./nanmean(abs(ne34err_exp(:,1:skip:end,tmpimp))));
                                                    imprv3(:,:,2)=100.*(1-nanmean(abs(se34err_exp(:,1:skip:end,:)))./nanmean(abs(se34err_exp(:,1:skip:end,tmpimp))));
                                                    imprv3(:,:,3)=100.*(1-nanmean(abs(nw34err_exp(:,1:skip:end,:)))./nanmean(abs(nw34err_exp(:,1:skip:end,tmpimp))));
                                                    imprv3(:,:,4)=100.*(1-nanmean(abs(sw34err_exp(:,1:skip:end,:)))./nanmean(abs(sw34err_exp(:,1:skip:end,tmpimp))));
                                                    imprv3(:,:,5)=100.*(1-nanmean(abs(ne34err_exp(:,1:skip:end,:)))./nanmean(abs(ne34err_exp(:,1:skip:end,tmpimp))));
                                                    imprv3(:,:,6)=100.*(1-nanmean(abs(se34err_exp(:,1:skip:end,:)))./nanmean(abs(se34err_exp(:,1:skip:end,tmpimp))));
                                                    imprv3(:,:,7)=100.*(1-nanmean(abs(nw34err_exp(:,1:skip:end,:)))./nanmean(abs(nw34err_exp(:,1:skip:end,tmpimp))));
                                                    imprv3(:,:,8)=100.*(1-nanmean(abs(sw34err_exp(:,1:skip:end,:)))./nanmean(abs(sw34err_exp(:,1:skip:end,tmpimp))));
                                                    imprv3(:,:,9)=100.*(1-nanmean(abs(ne34err_exp(:,1:skip:end,:)))./nanmean(abs(ne34err_exp(:,1:skip:end,tmpimp))));
                                                    imprv3(:,:,10)=100.*(1-nanmean(abs(se34err_exp(:,1:skip:end,:)))./nanmean(abs(se34err_exp(:,1:skip:end,tmpimp))));
                                                    imprv3(:,:,11)=100.*(1-nanmean(abs(nw34err_exp(:,1:skip:end,:)))./nanmean(abs(nw34err_exp(:,1:skip:end,tmpimp))));
                                                    imprv3(:,:,12)=100.*(1-nanmean(abs(sw34err_exp(:,1:skip:end,:)))./nanmean(abs(sw34err_exp(:,1:skip:end,tmpimp))));
                                                    allquadmax=max(max(max(imprv3)));
                                                    allquadmin=min(min(min(imprv3)));
                                                    tmpvalq=max(abs(allquadmin),abs(allquadmax));
                                                    if isnan(tmpvalq)==1
                                                        tmpvalq=0;
                                                    end
                                                    if numel(num2str(tmpvalq))==3
                                                        addfacq=100;
                                                    elseif numel(num2str(tmpvalq))==2
                                                        addfacq=20;
                                                    else
                                                        addfacq=20;
                                                    end

                                                    if numel(num2str(round(max(tmp_exp0(:)))))==3
                                                        addfac=100;
                                                    elseif numel(num2str(round(max(tmp_exp0(:)))))==2
                                                        addfac=20;
                                                    else
                                                        addfac=20;
                                                    end
                                                    if plt<=3 || (plt>=16 && plt<=18) % 0-end
                                                        tmpmin=min(tmp_exp0(:));
                                                        tmpmax=max(tmp_exp0(:));
                                                        tmpval=max(abs(tmpmin),abs(tmpmax));
                                                        if isnan(tmpval)==1
                                                            tmpval=0;
                                                        end
                                                        if tmpval>250
                                                            yrange=[-250 250];
                                                        else
                                                            yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                                                        end
                                                    elseif plt==19 || plt==20 % -end end 
                                                        tmpmin=min(tmp_exp0(:));
                                                        tmpmax=max(tmp_exp0(:));
                                                        tmpval=max(abs(tmpmin),abs(tmpmax));
                                                        if isnan(tmpval)==1
                                                            tmpval=0;
                                                        end
                                                        if tmpval>250
                                                            yrange=[-250 250];
                                                        else
                                                            yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                                                        end
                                                    elseif (plt>=4 && plt<=15) || plt>=21%quad 
                                                        if tmpvalq>250
                                                            yrange=[-250 250];
                                                        else
                                                            yrange=[-round((tmpvalq+addfacq)/10)*10 round((tmpvalq+addfacq)/10)*10];
                                                        end
                                                    end
                %                                     if plt==2 || plt==3 || plt>15 && plt<19
                %                                         for lo=1:2:200
                %                                             if max(abs(imprv))>5*lo
                %                                                 ylim([-10-5*(lo+1) 10+5*(lo+1)])
                %                                             end
                %                                         end  
                %                                     else
                                                        ylim(yrange)
                %                                     end
                                                    set(gca,'xtick',1:skiptick:50)
                                                    set(gca,'xticklabel',{'0','12','24','36','48','60','72','84','96','108','120','132'}) 
                                                    grid on
                                                    set(gca,'gridcolor','k','gridalpha',.4,'ygrid','off')
                                                    set(gca,'fontsize',20)      
                                                    hold off
                                                    box on
                                                    lh=legend(l,identexpshort,'location','northeast');
													lh.FontSize=10;
                                                    set(gcf,'Units','inches');
                                                    a1Pos = get(gca,'Position');
                                                    set(gcf, 'InvertHardcopy', 'off')
                                                    set(gcf,'Units','inches');
                                                    screenposition = get(gcf,'Position');
                                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                    set(gcf, 'InvertHardcopy', 'off')
                                                    text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                                    tmpuv = size(tmpnm,1);                               
                                                    tmpphrase=[num2str(tmpuv),'/',num2str(size(identinittimesunique,1))];                    
                                                    if strat==1
                                                    text(0,1.03,['\textbf{CYCLES: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    else
                                                    text(0,1.03,['\textbf{SUBSET: ',upper(stname),' $\mid$ CYCLES: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    end
                                                    ax=gca;
                                                    box on
                                                    set(ax, 'Layer', 'bottom')
                                                    ax.LineWidth=1; 
                                                    set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                                    set(gca,'Color',[.9 .9 .9])            
                                                    if sum(~isnan((diff(imprv))))==0
                                                        tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                        set(tx, 'Layer', 'front')
                                                    end
                                                    % Mean Value            
                                                    tmpstr=['Mean: '];
                                                    tmpstrmean=nanmean(imprv2,1);
                                                    tmpstrmean=(find(tmpstrmean~=0));
                                                    for tmp=tmpstrmean
                                                        if tmp==tmpstrmean(end)
                                                            tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(imprv2(:,tmp)),2)),'%'];
                                                        else
                                                            tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(imprv2(:,tmp)),2)),'% \color[rgb]{0,0,0}| '];
                                                        end
                                                    end
                                                    if sum(sum(~isnan(imprv2)))==0
                                                        tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                        set(tx, 'Layer', 'front')          
                                                    else
                                                        tx=text(0.98,0.06,tmpstr,'HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                        set(tx, 'Layer', 'front')
                                                    end 
                                                    b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                                                    set(b,'plotboxaspectratio',[1 1 1])
                                                    set(b,'Color','none');
                                                    set(b,'YColor','none');
                                                    set(b,'tickdir','both')
                                                    set(b,'XColor',[0 0 0]);
                                                    set(b,'ytick',[]);
                                                    if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                                        if mod(identmaxfhr*3,12)==0
                                                            xlim(b,[1 ((identmaxfhr*3))/skiphr+1])
                                                            tmpxend=((identmaxfhr*3))/skiphr+1;
                                                        else
                                                            xlim(b,[1 ((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1]) 
                                                            tmpxend=((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1;
                                                        end
                                                    else
                                                        if mod(identmaxfhr*3-3,12)==0
                                                            xlim(b,[1 ((identmaxfhr*3)-3)/skiphr+1])
                                                            tmpxend=((identmaxfhr*3)-3)/skiphr+1;
                                                        else
                                                            xlim(b,[1 ((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1]) 
                                                            tmpxend=((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1;
                                                        end
                                                    end        
                                                    set(b,'xtick',[1:skiptick:50]); 
                                                    trkerr_exp_fcnt=zeros(1,tmpxend);            
                                                    trkerr_exp_fcnt1=zeros(1,tmpxend);            
                                                    trkerr_exp_fcnt2=zeros(1,tmpxend);
                                                    for tmp=1:size(identexp,1)
                                                        cntexp(:,tmp)=sum(~isnan(tmp_exp(:,1:skip:end,tmp)),1);
                                                    end  
                                                %     if size(identexp,1)==2
                                                %         trkerr_exp_fcnt1(1:size(sum(~isnan(tmp_exp(:,1:skip:end,1)),1),2))=sum(~isnan(tmp_exp(:,1:skip:end,1)),1);            
                                                %         trkerr_exp_fcnt2(1:size(sum(~isnan(tmp_exp(:,1:skip:end,2)),1),2))=sum(~isnan(tmp_exp(:,1:skip:end,2)),1);            
                                                %         for i=1:size(trkerr_exp_fcnt1,2)
                                                %             if trkerr_exp_fcnt1(i)==trkerr_exp_fcnt2(i)
                                                %                 b.XTickLabel{i} = num2str(trkerr_exp_fcnt1(i));
                                                %             else
                                                %                 b.XTickLabel{i} = ['\color[rgb]{',num2str(identexpcolors(1,:)),'}',num2str(trkerr_exp_fcnt1(i)),'\color[rgb]{0,0,0}/\color[rgb]{',num2str(identexpcolors(2,:)),'}',num2str(trkerr_exp_fcnt2(i)),''];
                                                %             end
                                                %         end
                                                %     elseif size(identexp,1)>2
                                                %         maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1));         
                                                %         first=min(maxmin');    
                                                %         second=max(maxmin');
                                                %         for i=1:size(maxmin,1)
                                                %             if first(i)==second(i)
                                                %                 b.XTickLabel{i} = num2str(first(i));
                                                %             else
                                                %                 b.XTickLabel{i} = [num2str(first(i)),'/',num2str(second(i)),''];
                                                %             end
                                                %         end
                                                %     end
                                                    set(gca,'fontsize',10)
                                                    xlabel('# fcsts','Position',[-.5 0],'VerticalAlignment','top','HorizontalAlignment','center','Rotation',90,'units','normalized'); 
                                                    set(gca,'position',[spPos(1)+.02 spPos(2)-.05 spPos(3) spPos(4)])
                                                    screenposition = get(gcf,'Position');
                                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                    set(gcf, 'InvertHardcopy', 'off')
                                                    % Create a text box at every Tick label position
                                                    maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1)); 
                                                    xTicks0 = get(gca, 'xticklabel');
                                                    xTicks = get(gca, 'xtick');
                                                    if size(maxmin,1)<size(xTicks0,1)
                                                        for n=1:size(xTicks0,1)-size(maxmin,1)
                                                            maxmin(end+n,:)=0;
                                                        end
                                                    end
                                                    set(b,'xticklabels',[]);
                                                    minY =0;
                                                    VerticalOffset1=0.03;
                                                    HorizontalOffset = 0.2;
                                                    for xx = 1:size(xTicks0,1)
                                                        tmptxt0=maxmin(xx,:);
                                                        tmplines=size(tmptxt0,2);
                                                        if size(unique(tmptxt0),2)==1
                                                            tmptxt1=num2str(tmptxt0(1)); 
                                                            text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)                    
                                                        else
                                                            for n=1:tmplines
                                                                tmptxt1=[];                            
                                                                tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(n,:)),'}',num2str(tmptxt0(n))];                           
                                                                if n==1
                                                                    text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)
                                                                else
                                                                    text(xTicks(xx), minY - (VerticalOffset1+(.02*(n-1))),tmptxt1,'horizontalalignment','center','fontsize',10)                                
                                                                end
                                                            end    
                                                        end
                                                    end
                                                    f = getframe(hfig);
                                                    imwrite(f.cdata,[identtrackint,'/',identn,'_',tmp_name,'_',stname,'.png'],'png');
                                                    close all
                                                end
                                                % Create Graphics: trk, int, spd FSP vs. deny                                    
                                                for plt=1:23
                                                    clear l cntexp
                                                    set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                                    hfig=figure;
                                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                                    ax1=subplot(3,4,[1:8]);
                                                    hold on
                                                    if plt==1
                                                         tmp_exp=trkerr_exp(:,1:skip:end,:);
                                                         tmp_name='trkfsp';
                                                         tmp_title='Track FSP (\%)';
                                                         tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                         yrange=[-20 20];
                                                    elseif plt==2
                                                        tmp_exp=interr_exp(:,1:skip:end,:);
                                                        tmp_name='presfsp';
                                                        tmp_title='Pressure FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                    elseif plt==3
                                                        tmp_exp=spderr_exp(:,1:skip:end,:);
                                                        tmp_name='spdfsp';
                                                        tmp_title='Wind Speed FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                     elseif plt==4
                                                        tmp_exp=ne34err_exp(:,1:skip:end,:);
                                                        tmp_name='ne34fsp';
                                                        tmp_title='R34 NEQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==5
                                                        tmp_exp=se34err_exp(:,1:skip:end,:);
                                                        tmp_name='se34fsp';
                                                        tmp_title='R34 SEQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==6
                                                        tmp_exp=sw34err_exp(:,1:skip:end,:);
                                                        tmp_name='sw34fsp';
                                                        tmp_title='R34 SWQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==7
                                                        tmp_exp=nw34err_exp(:,1:skip:end,:);
                                                        tmp_name='nw34fsp';
                                                        tmp_title='R34 NWQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==8
                                                        tmp_exp=ne50err_exp(:,1:skip:end,:);
                                                        tmp_name='ne50fsp';
                                                        tmp_title='R50 NEQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==9
                                                        tmp_exp=se50err_exp(:,1:skip:end,:);
                                                        tmp_name='se50fsp';
                                                        tmp_title='R50 SEQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==10
                                                        tmp_exp=sw50err_exp(:,1:skip:end,:);
                                                        tmp_name='sw50fsp';
                                                        tmp_title='R50 SWQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==11
                                                        tmp_exp=nw50err_exp(:,1:skip:end,:);
                                                        tmp_name='nw50fsp';
                                                        tmp_title='R50 NWQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==12
                                                        tmp_exp=ne64err_exp(:,1:skip:end,:);
                                                        tmp_name='ne64fsp';
                                                        tmp_title='R64 NEQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==13
                                                        tmp_exp=se64err_exp(:,1:skip:end,:);
                                                        tmp_name='se64fsp';
                                                        tmp_title='R64 SEQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==14
                                                        tmp_exp=sw64err_exp(:,1:skip:end,:);
                                                        tmp_name='sw64fsp';
                                                        tmp_title='R64 SWQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==15
                                                        tmp_exp=nw64err_exp(:,1:skip:end,:);
                                                        tmp_name='nw64fsp';
                                                        tmp_title='R64 NWQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==16
                                                        tmp_exp=poerr_exp(:,1:skip:end,:);
                                                        tmp_name='pofsp';
                                                        tmp_title='Outer Clsd Isbr Prs FSP (hPa)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                    elseif plt==17
                                                        tmp_exp=roerr_exp(:,1:skip:end,:);
                                                        tmp_name='rofsp';
                                                        tmp_title='Outer Clsd Isbr Rad FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                    elseif plt==18
                                                        tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                                        tmp_name='rmwfsp';
                                                        tmp_title='RMW FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                    elseif plt==19
                                                        tmp_exp=ateerr_exp(:,1:skip:end,:);
                                                        tmp_name='atefsp';
                                                        tmp_title='Along-Track FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-200 200];                                 
                                                    elseif plt==20
                                                        tmp_exp=xteerr_exp(:,1:skip:end,:);
                                                        tmp_name='xtefsp';
                                                        tmp_title='Across-Track FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-200 200];                                 
                                                    elseif plt==21
                                                        tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                                        tmp_name='34fsp';
                                                        tmp_title='R34 FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-50 50];
                                                    elseif plt==22
                                                        tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                                        tmp_name='50fsp';
                                                        tmp_title='R50 FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-50 50];
                                                    elseif plt==23
                                                        tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                                        tmp_name='64fsp';
                                                        tmp_title='R64 FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-50 50];
                                                    end
                                                    if plt <19 || plt >20
                                                        tmp_exp=abs(tmp_exp); % added for MAE
                                                    end
                                                    tmp_exp0=squeeze(100.*(1-nanmean(tmp_exp(:,:,:),1)./nanmean(tmp_exp(:,:,tmpimp),1)));                  
                                                    % Strat
                                                                                        % Strat
                                                    if strat==1
                                                        clear tmpyrb
                                                        tmpnm=identinittimesunique(~isnan(BT_cat1)==1,:);
                                                    elseif strat==2
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_drops==1,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_drops'==1 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==3
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_target==1,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_target'==1 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==4 % TD
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1<34,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_cat1<34,:);
                                                    elseif strat==5 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=34 & BT_cat1<63,:,:);
                                                        end 
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63,:);
                                                    elseif strat==6 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<95,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=63 & BT_cat1<95,:,:);
                                                        end                  
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95,:);
                                                    elseif strat==7 % MJ
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=96,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=96,:,:);
                                                        end     
                                                        tmpnm=identinittimesunique(BT_cat1>=96,:);
                                                    elseif strat==8 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1>=30,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1>=30,:);
                                                    elseif strat==9 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1<30,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30,:);
                                                    elseif strat==15 %% TD strat obs only
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1<34 & BT_drops'==1,:,:);
                                                        end   
                                                        tmpnm=identinittimesunique(BT_cat1<34 & BT_drops'==1,:);
                                                    elseif strat==16 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=34 & BT_cat1<63 & BT_drops'==1,:,:);
                                                        end            
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63 & BT_drops'==1,:);
                                                    elseif strat==17 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=63 & BT_cat1<95 & BT_drops'==1,:,:);
                                                         end
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95 & BT_drops'==1,:);
                                                    elseif strat==18 % MJ
                                                        clear tmpyrb
                                                       if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                       else
                                                            tmp_exp=tmp_exp(BT_cat1>=96 & BT_drops'==1,:,:);
                                                       end
                                                        tmpnm=identinittimesunique(BT_cat1>=96 & BT_drops'==1,:);
                                                    elseif strat==19 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1>=30 & BT_drops'==1,:,:);
                                                         end   
                                                        tmpnm=identinittimesunique(BT_lat1>=30 & BT_drops'==1,:);
                                                    elseif strat==20 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1<30 & BT_drops'==1,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30 & BT_drops'==1,:);
                                                    elseif strat==21
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_drops==0,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_drops'==0 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==22
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_target==0,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_target'==0 & ~isnan(BT_cat1)==1,:); 
                                                    elseif strat==23 %% TD strat NOOBS only
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1<34 & BT_drops'==0,:,:);
                                                        end   
                                                        tmpnm=identinittimesunique(BT_cat1<34 & BT_drops'==0,:);
                                                    elseif strat==24 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=34 & BT_cat1<63 & BT_drops'==0,:,:);
                                                        end            
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63 & BT_drops'==0,:);
                                                    elseif strat==25 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=63 & BT_cat1<95 & BT_drops'==0,:,:);
                                                         end
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95 & BT_drops'==0,:);
                                                    elseif strat==26 % MJ
                                                        clear tmpyrb
                                                       if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                       else
                                                            tmp_exp=tmp_exp(BT_cat1>=96 & BT_drops'==0,:,:);
                                                       end
                                                        tmpnm=identinittimesunique(BT_cat1>=96 & BT_drops'==0,:);
                                                    elseif strat==27 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1>=30 & BT_drops'==0,:,:);
                                                         end   
                                                        tmpnm=identinittimesunique(BT_lat1>=30 & BT_drops'==0,:);
                                                    elseif strat==28 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1<30 & BT_drops'==0,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30 & BT_drops'==0,:);    
                                                    elseif strat==888
                                                        clear tmpyrb
                                                        numlist=[];
                                                        for ins=1:size(identnewsub,1)
                                                            tmp=identnewsub(ins,:);
                                                            for ins2=1:size(identinittimesunique,1)
                                                                if strcmp(identinittimesunique(ins2,:),tmp)==1
                                                                    numlist=[numlist ins2];
                                                                end
                                                            end
                                                        end
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([numlist;numlist;numlist;numlist],:,:);
                                                        else
                                                            tmp_exp=tmp_exp(numlist,:,:);
                                                        end                  
                                                        tmpnm=identinittimesunique(numlist,:); 
                                                    end
                                                    % Find which experiment to compare to
                                                    for tmp=1:size(identexp,1)
                                                        if strcmp(identexp(tmp),identexpsigimp)
                                                            tmpimp=tmp;
                                                        end
                                                    end      
                                                    tmpu=1:size(identexp,1);
                                                    tmpu(tmpu==tmpimp)=[];
                                                    plot(-10:89,50*ones(1,100),'Color',[.5 .5 .5],'linewidth',1);
                                                    clear fsp2
                                                    cntl=1;
                                                    for tmp=tmpu
                                                        tmp1=tmp_exp(:,:,tmp);
                                                        tmp2=tmp_exp(:,:,tmpimp);
                                                        tmp3=sign(tmp1-tmp2);
                                                        tmp4=tmp3<0;
                                                        tmp5=tmp3>0;
                                                        tmp6=tmp3==0;
                                                        tmptmp=sum(~isnan(tmp3),1);                            
                                                        fspa=100*(nansum(tmp4,1)+nansum(tmp6,1)./2)./tmptmp;
                                                        fspb=100*(nansum(tmp5,1)+nansum(tmp6,1)./2)./tmptmp;
                                                        fsp2(:,tmp)=fspa;
                                                        %plot(1:size(fspb,2),fspb,'--s','Color',identexpcolors(tmp,:),'linewidth',.5,'markersize',2); 
                                                        l(cntl)=plot(1:size(fspa,2),fspa,'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2); 
                                                        cntl=cntl+1;
														sigtest=ttestsc(abs(tmp_exp(:,:,tmp)),abs(tmp_exp(:,:,tmpimp)),'alpha',.05);
                                                        sigtest_loc=find(sigtest==1);
                                                        sigtest_exp=fspa(sigtest_loc);
                                                        plot(sigtest_loc,sigtest_exp,'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                                        sigtest=ttestsc(abs(tmp_exp(:,:,tmp)),abs(tmp_exp(:,:,tmpimp)),'alpha',.1);
                                                        sigtest_loc1=find(sigtest==1);
                                                        sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                                        sigtest_exp=fspa(sigtest_loc);
                                                        plot(sigtest_loc,sigtest_exp,'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                                                    end
                                                    set(gca,'plotboxaspectratio',[1 1 1])
                                                    xlabel('Forecast Lead Time (h)','fontsize',20)
                                                    ylabel(tmp_ytitle,'fontsize',20)
                                                    set(gca,'fontsize',20)
                                                    box on
                                                    if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                                        if mod(identmaxfhr*3,12)==0
                                                            xlim([1 ((identmaxfhr*3))/skiphr+1])
                                                        else
                                                            xlim([1 ((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1]) 
                                                        end
                                                    else
                                                        if mod(identmaxfhr*3-3,12)==0
                                                            xlim([1 ((identmaxfhr*3)-3)/skiphr+1])
                                                        else
                                                            xlim([1 ((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1]) 
                                                        end
                                                    end
                                                    ylim([0 100])
                                                    set(gca,'xtick',1:skiptick:50)
                                                    set(gca,'xticklabel',{'0','12','24','36','48','60','72','84','96','108','120','132'}) 
                                                    grid on
                                                    set(gca,'gridcolor','k','gridalpha',.4,'ygrid','off')
                                                    set(gca,'fontsize',20)      
                                                    hold off
                                                    box on
                                                    lh=legend(l,identexpshort(tmpu),'location','northeast');
													lh.FontSize=10;
                                                    set(gcf,'Units','inches');
                                                    a1Pos = get(gca,'Position');
                                                    set(gcf, 'InvertHardcopy', 'off')
                                                    set(gcf,'Units','inches');
                                                    screenposition = get(gcf,'Position');
                                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                    set(gcf, 'InvertHardcopy', 'off')
                                                    text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                                    tmpuv = size(tmpnm,1);                               
                                                    tmpphrase=[num2str(tmpuv),'/',num2str(size(identinittimesunique,1))];                    
                                                    if strat==1
                                                    text(0,1.03,['\textbf{CYCLES: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    else
                                                    text(0,1.03,['\textbf{SUBSET: ',upper(stname),' $\mid$ CYCLES: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    end
                                                    ax=gca;
                                                    box on
                                                    set(ax, 'Layer', 'bottom')
                                                    ax.LineWidth=1; 
                                                    set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                                    set(gca,'Color',[.9 .9 .9])            
                                                    if sum(~isnan((diff(fspa))))==0
                                                        tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                        set(tx, 'Layer', 'front')
                                                    end
                                                    % Mean Value            
                                                    tmpstr=['Mean: '];
                                                    tmpstrmean=nanmean(fsp2,1);
                                                    tmpstrmean=(find(tmpstrmean~=0));
                                                    for tmp=tmpstrmean
                                                        if tmp==tmpstrmean(end)
                                                            tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(fsp2(:,tmp)),2)),'%'];
                                                        else
                                                            tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(fsp2(:,tmp)),2)),'% \color[rgb]{0,0,0}| '];
                                                        end
                                                    end
                                                    if sum(sum(~isnan(fsp2)))==0
                                                        tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                        set(tx, 'Layer', 'front')          
                                                    else
                                                        tx=text(0.98,0.06,tmpstr,'HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                        set(tx, 'Layer', 'front')
                                                    end 
                                                    b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                                                    set(b,'plotboxaspectratio',[1 1 1])
                                                    set(b,'Color','none');
                                                    set(b,'YColor','none');
                                                    set(b,'tickdir','both')
                                                    set(b,'XColor',[0 0 0]);
                                                    set(b,'ytick',[]);
                                                    if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                                        if mod(identmaxfhr*3,12)==0
                                                            xlim(b,[1 ((identmaxfhr*3))/skiphr+1])
                                                            tmpxend=((identmaxfhr*3))/skiphr+1;
                                                        else
                                                            xlim(b,[1 ((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1]) 
                                                            tmpxend=((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1;
                                                        end
                                                    else
                                                        if mod(identmaxfhr*3-3,12)==0
                                                            xlim(b,[1 ((identmaxfhr*3)-3)/skiphr+1])
                                                            tmpxend=((identmaxfhr*3)-3)/skiphr+1;
                                                        else
                                                            xlim(b,[1 ((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1]) 
                                                            tmpxend=((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1;
                                                        end
                                                    end        
                                                    set(b,'xtick',[1:skiptick:50]); 
                                                    trkerr_exp_fcnt=zeros(1,tmpxend);            
                                                    trkerr_exp_fcnt1=zeros(1,tmpxend);            
                                                    trkerr_exp_fcnt2=zeros(1,tmpxend);
                                                    for tmp=1:size(identexp,1)
                                                        cntexp(:,tmp)=sum(~isnan(tmp_exp(:,1:skip:end,tmp)),1);
                                                    end  
                                                %     if size(identexp,1)==2
                                                %         trkerr_exp_fcnt1(1:size(sum(~isnan(tmp_exp(:,1:skip:end,1)),1),2))=sum(~isnan(tmp_exp(:,1:skip:end,1)),1);            
                                                %         trkerr_exp_fcnt2(1:size(sum(~isnan(tmp_exp(:,1:skip:end,2)),1),2))=sum(~isnan(tmp_exp(:,1:skip:end,2)),1);            
                                                %         for i=1:size(trkerr_exp_fcnt1,2)
                                                %             if trkerr_exp_fcnt1(i)==trkerr_exp_fcnt2(i)
                                                %                 b.XTickLabel{i} = num2str(trkerr_exp_fcnt1(i));
                                                %             else
                                                %                 b.XTickLabel{i} = ['\color[rgb]{',num2str(identexpcolors(1,:)),'}',num2str(trkerr_exp_fcnt1(i)),'\color[rgb]{0,0,0}/\color[rgb]{',num2str(identexpcolors(2,:)),'}',num2str(trkerr_exp_fcnt2(i)),''];
                                                %             end
                                                %         end
                                                %     elseif size(identexp,1)>2
                                                %         maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1));         
                                                %         first=min(maxmin');    
                                                %         second=max(maxmin');
                                                %         for i=1:size(maxmin,1)
                                                %             if first(i)==second(i)
                                                %                 b.XTickLabel{i} = num2str(first(i));
                                                %             else
                                                %                 b.XTickLabel{i} = [num2str(first(i)),'/',num2str(second(i)),''];
                                                %             end
                                                %         end
                                                %     end
                                                    set(gca,'fontsize',10)
                                                    xlabel('# fcsts','Position',[-.5 0],'VerticalAlignment','top','HorizontalAlignment','center','Rotation',90,'units','normalized'); 
                                                    set(gca,'position',[spPos(1)+.02 spPos(2)-.05 spPos(3) spPos(4)])
                                                    screenposition = get(gcf,'Position');
                                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                    set(gcf, 'InvertHardcopy', 'off')
                                                    % Create a text box at every Tick label position
                                                    maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1)); 
                                                    xTicks0 = get(gca, 'xticklabel');
                                                    xTicks = get(gca, 'xtick');
                                                    if size(maxmin,1)<size(xTicks0,1)
                                                        for n=1:size(xTicks0,1)-size(maxmin,1)
                                                            maxmin(end+n,:)=0;
                                                        end
                                                    end
                                                    set(b,'xticklabels',[]);
                                                    minY =0;
                                                    VerticalOffset1=0.03;
                                                    HorizontalOffset = 0.2;
                                                    for xx = 1:size(xTicks0,1)
                                                        tmptxt0=maxmin(xx,:);
                                                        tmplines=size(tmptxt0,2);
                                                        if size(unique(tmptxt0),2)==1
                                                            tmptxt1=num2str(tmptxt0(1)); 
                                                            text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)                    
                                                        else
                                                            for n=1:tmplines
                                                                tmptxt1=[];                            
                                                                tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(n,:)),'}',num2str(tmptxt0(n))];                           
                                                                if n==1
                                                                    text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)
                                                                else
                                                                    text(xTicks(xx), minY - (VerticalOffset1+(.02*(n-1))),tmptxt1,'horizontalalignment','center','fontsize',10)                                
                                                                end
                                                            end    
                                                        end
                                                    end
                                                    f = getframe(hfig);
                                                    imwrite(f.cdata,[identtrackint,'/',identn,'_',tmp_name,'_',stname,'.png'],'png');
                                                    close all
                                                end                                    
                                                % Create Graphics: trk, int, spd bias - bt-gh vs. bt-deny
                                                for plt=[2:18,21:23] % no across or along for bias since already in error
                                                    clear l cntexp
                                                    set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                                    hfig=figure;
                                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                                    ax1=subplot(3,4,[1:8]);
                                                    hold on
                                                    if plt==1
                                                         tmp_exp=trkerr_exp(:,1:skip:end,:);
                                                         tmp_name='trkbias';
                                                         tmp_title='Track Bias (km)';
                                                         tmp_ytitle='Bias (km)';
                                                    elseif plt==2
                                                        tmp_exp=interr_exp(:,1:skip:end,:);
                                                        tmp_name='presbias';
                                                        tmp_title='Pressure Bias (hPa)';
                                                        tmp_ytitle='Bias (hPa)';
                                                    elseif plt==3
                                                        tmp_exp=spderr_exp(:,1:skip:end,:);
                                                        tmp_name='spdbias';
                                                        tmp_title='Wind Speed Bias (kts)';
                                                        tmp_ytitle='Bias (kts)';
                                                     elseif plt==4
                                                        tmp_exp=ne34err_exp(:,1:skip:end,:);
                                                        tmp_name='ne34bias';
                                                        tmp_title='R34 NEQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==5
                                                        tmp_exp=se34err_exp(:,1:skip:end,:);
                                                        tmp_name='se34bias';
                                                        tmp_title='R34 SEQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==6
                                                        tmp_exp=sw34err_exp(:,1:skip:end,:);
                                                        tmp_name='sw34bias';
                                                        tmp_title='R34 SWQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==7
                                                        tmp_exp=nw34err_exp(:,1:skip:end,:);
                                                        tmp_name='nw34bias';
                                                        tmp_title='R34 NWQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==8
                                                        tmp_exp=ne50err_exp(:,1:skip:end,:);
                                                        tmp_name='ne50bias';
                                                        tmp_title='R50 NEQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==9
                                                        tmp_exp=se50err_exp(:,1:skip:end,:);
                                                        tmp_name='se50bias';
                                                        tmp_title='R50 SEQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==10
                                                        tmp_exp=sw50err_exp(:,1:skip:end,:);
                                                        tmp_name='sw50bias';
                                                        tmp_title='R50 SWQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==11
                                                        tmp_exp=nw50err_exp(:,1:skip:end,:);
                                                        tmp_name='nw50bias';
                                                        tmp_title='R50 NWQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==12
                                                        tmp_exp=ne64err_exp(:,1:skip:end,:);
                                                        tmp_name='ne64bias';
                                                        tmp_title='R64 NEQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==13
                                                        tmp_exp=se64err_exp(:,1:skip:end,:);
                                                        tmp_name='se64bias';
                                                        tmp_title='R64 SEQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==14
                                                        tmp_exp=sw64err_exp(:,1:skip:end,:);
                                                        tmp_name='sw64bias';
                                                        tmp_title='R64 SWQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==15
                                                        tmp_exp=nw64err_exp(:,1:skip:end,:);
                                                        tmp_name='nw64bias';
                                                        tmp_title='R64 NWQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==16
                                                        tmp_exp=poerr_exp(:,1:skip:end,:);
                                                        tmp_name='pobias';
                                                        tmp_title='Outer Clsd Isbr Prs Bias (hPa)';
                                                        tmp_ytitle='Bias (hPa)';
                                                    elseif plt==17
                                                        tmp_exp=roerr_exp(:,1:skip:end,:);
                                                        tmp_name='robias';
                                                        tmp_title='Outer Clsd Isbr Rad Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                    elseif plt==18
                                                        tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                                        tmp_name='rmwbias';
                                                        tmp_title='RMW Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                    elseif plt==19
                                                        tmp_exp=ateerr_exp(:,1:skip:end,:);
                                                        tmp_name='atebias';
                                                        tmp_title='Along-Track Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-500 500];                
                                                    elseif plt==20
                                                        tmp_exp=xteerr_exp(:,1:skip:end,:);
                                                        tmp_name='xtebias';
                                                        tmp_title='Across-Track Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-500 500]; 
                                                    elseif plt==21
                                                        tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                                        tmp_name='34bias';
                                                        tmp_title='R34 Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-100 100];
                                                    elseif plt==22
                                                        tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                                        tmp_name='50bias';
                                                        tmp_title='R50 Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-100 100];
                                                    elseif plt==23
                                                        tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                                        tmp_name='64bias';
                                                        tmp_title='R64 Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-100 100];
                                                    end
                                                    tmp_exp0=tmp_exp;
                                                    % Strat
                                                    if strat==1
                                                        clear tmpyrb
                                                        tmpnm=identinittimesunique(~isnan(BT_cat1)==1,:);
                                                    elseif strat==2
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_drops==1,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_drops'==1 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==3
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_target==1,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_target'==1 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==4 % TD
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1<34,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_cat1<34,:);
                                                    elseif strat==5 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=34 & BT_cat1<63,:,:);
                                                        end 
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63,:);
                                                    elseif strat==6 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<95,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=63 & BT_cat1<95,:,:);
                                                        end                  
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95,:);
                                                    elseif strat==7 % MJ
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=96,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=96,:,:);
                                                        end     
                                                        tmpnm=identinittimesunique(BT_cat1>=96,:);
                                                    elseif strat==8 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1>=30,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1>=30,:);
                                                    elseif strat==9 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1<30,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30,:);
                                                    elseif strat==15 %% TD strat obs only
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1<34 & BT_drops'==1,:,:);
                                                        end   
                                                        tmpnm=identinittimesunique(BT_cat1<34 & BT_drops'==1,:);
                                                    elseif strat==16 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=34 & BT_cat1<63 & BT_drops'==1,:,:);
                                                        end            
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63 & BT_drops'==1,:);
                                                    elseif strat==17 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=63 & BT_cat1<95 & BT_drops'==1,:,:);
                                                         end
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95 & BT_drops'==1,:);
                                                    elseif strat==18 % MJ
                                                        clear tmpyrb
                                                       if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                       else
                                                            tmp_exp=tmp_exp(BT_cat1>=96 & BT_drops'==1,:,:);
                                                       end
                                                        tmpnm=identinittimesunique(BT_cat1>=96 & BT_drops'==1,:);
                                                    elseif strat==19 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1>=30 & BT_drops'==1,:,:);
                                                         end   
                                                        tmpnm=identinittimesunique(BT_lat1>=30 & BT_drops'==1,:);
                                                    elseif strat==20 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1<30 & BT_drops'==1,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30 & BT_drops'==1,:);
                                                    elseif strat==21
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_drops==0,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_drops'==0 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==22
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_target==0,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_target'==0 & ~isnan(BT_cat1)==1,:);  
                                                    elseif strat==23 %% TD strat NOOBS only
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1<34 & BT_drops'==0,:,:);
                                                        end   
                                                        tmpnm=identinittimesunique(BT_cat1<34 & BT_drops'==0,:);
                                                    elseif strat==24 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=34 & BT_cat1<63 & BT_drops'==0,:,:);
                                                        end            
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63 & BT_drops'==0,:);
                                                    elseif strat==25 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_cat1>=63 & BT_cat1<95 & BT_drops'==0,:,:);
                                                         end
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95 & BT_drops'==0,:);
                                                    elseif strat==26 % MJ
                                                        clear tmpyrb
                                                       if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                       else
                                                            tmp_exp=tmp_exp(BT_cat1>=96 & BT_drops'==0,:,:);
                                                       end
                                                        tmpnm=identinittimesunique(BT_cat1>=96 & BT_drops'==0,:);
                                                    elseif strat==27 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1>=30 & BT_drops'==0,:,:);
                                                         end   
                                                        tmpnm=identinittimesunique(BT_lat1>=30 & BT_drops'==0,:);
                                                    elseif strat==28 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                                        else
                                                            tmp_exp=tmp_exp(BT_lat1<30 & BT_drops'==0,:,:);
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30 & BT_drops'==0,:);    
                                                    elseif strat==888
                                                        clear tmpyrb
                                                        numlist=[];
                                                        for ins=1:size(identnewsub,1)
                                                            tmp=identnewsub(ins,:);
                                                            for ins2=1:size(identinittimesunique,1)
                                                                if strcmp(identinittimesunique(ins2,:),tmp)==1
                                                                    numlist=[numlist ins2];
                                                                end
                                                            end
                                                        end
                                                        if plt>=21 && plt<=23
                                                            tmp_exp=tmp_exp([numlist;numlist;numlist;numlist],:,:);
                                                        else
                                                            tmp_exp=tmp_exp(numlist,:,:);
                                                        end                  
                                                        tmpnm=identinittimesunique(numlist,:); 
                                                    end
                                                    for tmp=1:size(identexp,1)
                                                        l(tmp)=plot(1:size(tmp_exp,2),nanmean(tmp_exp(:,:,tmp),1),'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2);
                                                    end           
                                                    % Find which experiment to compare to
                                                    for tmp=1:size(identexp,1)
                                                        if strcmp(identexp(tmp),identexpsigimp)
                                                            tmpimp=tmp;
                                                        end
                                                    end
                                                    plot(-10:89,zeros(1,100),'Color',[.5 .5 .5],'linewidth',1);
                                                    for tmp=1:size(identexp,1)
                                                        sigtest=ttestsc(abs(tmp_exp(:,:,tmp)),abs(tmp_exp(:,:,tmpimp)),'alpha',.05);
                                                        sigtest_loc=find(sigtest==1);
                                                        sigtest_exp=nanmean(tmp_exp(:,sigtest_loc,:),1);
                                                        for tmpi=tmp
                                                            plot(sigtest_loc,sigtest_exp(:,:,tmpi),'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                                        end
                                                        sigtest=ttestsc(abs(tmp_exp(:,:,tmp)),abs(tmp_exp(:,:,tmpimp)),'alpha',.1);
                                                        sigtest_loc1=find(sigtest==1);
                                                        sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                                        sigtest_exp=nanmean(tmp_exp(:,sigtest_loc,:),1);
                                                        for tmpi=tmp
                                                            plot(sigtest_loc,sigtest_exp(:,:,tmpi),'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                                                        end
                                                    end   
                                                    set(gca,'plotboxaspectratio',[1 1 1])
                                                    xlabel('Forecast Lead Time (h)','fontsize',20)
                                                    ylabel(tmp_ytitle,'fontsize',20)
                                                    set(gca,'fontsize',20)
                                                    box on
                                                    if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                                        if mod(identmaxfhr*3,12)==0
                                                            xlim([1 ((identmaxfhr*3))/skiphr+1])
                                                        else
                                                            xlim([1 ((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1]) 
                                                        end
                                                    else
                                                        if mod(identmaxfhr*3-3,12)==0
                                                            xlim([1 ((identmaxfhr*3)-3)/skiphr+1])
                                                        else
                                                            xlim([1 ((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1]) 
                                                        end
                                                    end
                                                    % YRANGE
                                                    clear allquad
                                                    allquad(1)=(max(max(nanmean((ne34err_exp(:,1:skip:end,:)),1))));
                                                    allquad(2)=(max(max(nanmean((se34err_exp(:,1:skip:end,:)),1))));
                                                    allquad(3)=(max(max(nanmean((nw34err_exp(:,1:skip:end,:)),1))));
                                                    allquad(4)=(max(max(nanmean((sw34err_exp(:,1:skip:end,:)),1))));
                                                    allquad(5)=(max(max(nanmean((ne50err_exp(:,1:skip:end,:)),1))));
                                                    allquad(6)=(max(max(nanmean((se50err_exp(:,1:skip:end,:)),1))));
                                                    allquad(7)=(max(max(nanmean((nw50err_exp(:,1:skip:end,:)),1))));
                                                    allquad(8)=(max(max(nanmean((sw50err_exp(:,1:skip:end,:)),1))));
                                                    allquad(9)=(max(max(nanmean((ne64err_exp(:,1:skip:end,:)),1))));
                                                    allquad(10)=(max(max(nanmean((se64err_exp(:,1:skip:end,:)),1))));
                                                    allquad(11)=(max(max(nanmean((nw64err_exp(:,1:skip:end,:)),1))));
                                                    allquad(12)=(max(max(nanmean((sw64err_exp(:,1:skip:end,:)),1))));
                                                    allquadmax=max(max(max(allquad)));
                                                    allquadmin=min(min(min(allquad)));
                                                    tmpvalq=max(abs(allquadmin),abs(allquadmax));
                                                    if isnan(tmpvalq)==1
                                                        tmpvalq=0;
                                                    end
                                                    if numel(num2str(tmpvalq))==3
                                                        addfacq=100;
                                                    elseif numel(num2str(tmpvalq))==2
                                                        addfacq=20;
                                                    else
                                                        addfacq=20;
                                                    end
                                                    if numel(num2str(round(max(max(nanmean((tmp_exp0),1))))))==3
                                                        addfac=100;
                                                    elseif numel(num2str(round(max(max(nanmean((tmp_exp0),1))))))==2
                                                        addfac=20;
                                                    else
                                                        addfac=20;
                                                    end
                                                    if plt<=3 || (plt>=16 && plt<=18) % -end-end
                                                        tmpmin=min(min(nanmean((tmp_exp0),1)));
                                                        tmpmax=max(max(nanmean((tmp_exp0),1)));
                                                        tmpval=max(abs(tmpmin),abs(tmpmax));
                                                        if isnan(tmpval)==1
                                                            tmpval=0;
                                                        end
                                                        yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                                                    elseif plt==19 || plt==20 % -end end 
                                                        tmpmin=min(min(nanmean((tmp_exp0),1)));
                                                        tmpmax=max(max(nanmean((tmp_exp0),1)));
                                                        tmpval=max(abs(tmpmin),abs(tmpmax));
                                                        if isnan(tmpval)==1
                                                            tmpval=0;
                                                        end
                                                        yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                                                    elseif (plt>=4 && plt<=15) || plt>=21%quad
                                                        yrange=[-round((tmpvalq+addfacq)/10)*10 round((tmpvalq+addfacq)/10)*10];
                                                    end
                %                                     if plt==1
                %                                         for lo=1:50
                %                                             if max(nanmean(tmp_exp,1))>100*lo
                %                                                 ylim([-200-100*lo 200+100*lo])
                %                                             end
                %                                         end
                %                                     elseif plt==2 || plt==3 || plt>15 && plt <19
                %                                         for lo=1:2:50
                %                                             if max(nanmean(tmp_exp,1))>5*lo
                %                                                 ylim([-10-5*(lo+1) 10+5*(lo+1)])
                %                                             end
                %                                         end 
                %                                     else
                                                        ylim(yrange)
                %                                     end
                                                    set(gca,'xtick',1:skiptick:50)
                                                    set(gca,'xticklabel',{'0','12','24','36','48','60','72','84','96','108','120','132'}) 
                                                    grid on
                                                    set(gca,'gridcolor','k','gridalpha',.4,'ygrid','off')
                                                    set(gca,'fontsize',20)      
                                                    hold off
                                                    box on
                                                    lh=legend(l,identexpshort,'location','northeast');
													lh.FontSize=10;
                                                    set(gcf,'Units','inches');
                                                    a1Pos = get(gca,'Position');
                                                    set(gcf, 'InvertHardcopy', 'off')
                                                    set(gcf,'Units','inches');
                                                    screenposition = get(gcf,'Position');
                                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                    set(gcf, 'InvertHardcopy', 'off')
                                                    text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');                         
                                                    tmpuv = size(tmpnm,1);                               
                                                    tmpphrase=[num2str(tmpuv),'/',num2str(size(identinittimesunique,1))];                    
                                                    if strat==1
                                                    text(0,1.03,['\textbf{CYCLES: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    else
                                                    text(0,1.03,['\textbf{SUBSET: ',upper(stname),' $\mid$ CYCLES: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    end
                                                    ax=gca;
                                                    box on
                                                    set(ax, 'Layer', 'bottom')
                                                    ax.LineWidth=1; 
                                                    set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                                    set(gca,'Color',[.9 .9 .9])
                                                    for tmp=1:size(identexp,1)
                                                        cntexp(:,tmp)=sum(~isnan(tmp_exp(:,1:skip:end,tmp)),1);
                                                    end
                                                    if sum([cntexp(:)])==0
                                                        tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                        set(tx, 'Layer', 'front')
                                                    end
                                                    if plt==1 || plt>=4 && plt<=15 || plt==17 || plt==18 || plt>20
                                                         tx=text(0.02,0.06,'Too Small','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                         tx=text(0.02,0.98,'Too Large','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                         set(tx, 'Layer', 'front')  
                                                    elseif plt==2 || plt==16
                                                         tx=text(0.02,0.06,'Too Low','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                         tx=text(0.02,0.98,'Too High','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                         set(tx, 'Layer', 'front')  
                                                    elseif plt==3
                                                         tx=text(0.02,0.06,'Too Slow','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                         tx=text(0.02,0.98,'Too Fast','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                         set(tx, 'Layer', 'front') 
                                                    elseif plt==19
                                                         tx=text(0.02,0.06,'Slower than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                         tx=text(0.02,0.98,'Faster than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                         set(tx, 'Layer', 'front')            
                                                    elseif plt==20
                                                         tx=text(0.02,0.06,'Left of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                         tx=text(0.02,0.98,'Right of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                         set(tx, 'Layer', 'front')            
                                                    end
                                                    b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                                                    set(b,'plotboxaspectratio',[1 1 1])
                                                    set(b,'Color','none');
                                                    set(b,'YColor','none');
                                                    set(b,'tickdir','both')
                                                    set(b,'XColor',[0 0 0]);
                                                    set(b,'ytick',[]);
                                                    if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                                        if mod(identmaxfhr*3,12)==0
                                                            xlim(b,[1 ((identmaxfhr*3))/skiphr+1])
                                                            tmpxend=((identmaxfhr*3))/skiphr+1;
                                                        else
                                                            xlim(b,[1 ((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1]) 
                                                            tmpxend=((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1;
                                                        end
                                                    else
                                                        if mod(identmaxfhr*3-3,12)==0
                                                            xlim(b,[1 ((identmaxfhr*3)-3)/skiphr+1])
                                                            tmpxend=((identmaxfhr*3)-3)/skiphr+1;
                                                        else
                                                            xlim(b,[1 ((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1]) 
                                                            tmpxend=((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1;
                                                        end
                                                    end        
                                                    set(b,'xtick',[1:skiptick:50]);
                                                    trkerr_exp_fcnt=zeros(1,tmpxend);            
                                                    trkerr_exp_fcnt1=zeros(1,tmpxend);            
                                                    trkerr_exp_fcnt2=zeros(1,tmpxend);
                                                    for tmp=1:size(identexp,1)
                                                        cntexp(:,tmp)=sum(~isnan(tmp_exp(:,1:skip:end,tmp)),1);
                                                    end  
                                                %     if size(identexp,1)==2
                                                %         trkerr_exp_fcnt1(1:size(sum(~isnan(tmp_exp(:,1:skip:end,1)),1),2))=sum(~isnan(tmp_exp(:,1:skip:end,1)),1);            
                                                %         trkerr_exp_fcnt2(1:size(sum(~isnan(tmp_exp(:,1:skip:end,2)),1),2))=sum(~isnan(tmp_exp(:,1:skip:end,2)),1);            
                                                %         for i=1:size(trkerr_exp_fcnt1,2)
                                                %             if trkerr_exp_fcnt1(i)==trkerr_exp_fcnt2(i)
                                                %                 b.XTickLabel{i} = num2str(trkerr_exp_fcnt1(i));
                                                %             else
                                                %                 b.XTickLabel{i} = ['\color[rgb]{',num2str(identexpcolors(1,:)),'}',num2str(trkerr_exp_fcnt1(i)),'\color[rgb]{0,0,0}/\color[rgb]{',num2str(identexpcolors(2,:)),'}',num2str(trkerr_exp_fcnt2(i)),''];
                                                %             end
                                                %         end
                                                %     elseif size(identexp,1)>2
                                                %         maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1));         
                                                %         first=min(maxmin');    
                                                %         second=max(maxmin');
                                                %         for i=1:size(maxmin,1)
                                                %             if first(i)==second(i)
                                                %                 b.XTickLabel{i} = num2str(first(i));
                                                %             else
                                                %                 b.XTickLabel{i} = [num2str(first(i)),'/',num2str(second(i)),''];
                                                %             end
                                                %         end
                                                %     end
                                                    %if size(trkerr_gh,2)*3<max(0:size(1:skiptick:tmpxend,2):size(1:skiptick:tmpxend,2)*11)
                                                    %    trkerr_gh_fcnt(end-1:end)=0;
                                                    %end
                                                    set(gca,'fontsize',10)
                                                    xlabel('# fcsts','Position',[-.5 0],'VerticalAlignment','top','HorizontalAlignment','center','Rotation',90,'units','normalized'); 
                                                    set(gca,'position',[spPos(1)+.02 spPos(2)-.05 spPos(3) spPos(4)])
                                                    screenposition = get(gcf,'Position');
                                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                    set(gcf, 'InvertHardcopy', 'off')
                                                    % Create a text box at every Tick label position
                                                    maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1)); 
                                                    xTicks0 = get(gca, 'xticklabel');
                                                    xTicks = get(gca, 'xtick');
                                                    if size(maxmin,1)<size(xTicks0,1)
                                                        for n=1:size(xTicks0,1)-size(maxmin,1)
                                                            maxmin(end+n,:)=0;
                                                        end
                                                    end
                                                    set(b,'xticklabels',[]);
                                                    minY =0;
                                                    VerticalOffset1=0.03;
                                                    HorizontalOffset = 0.2;
                                                    for xx = 1:size(xTicks0,1)
                                                        tmptxt0=maxmin(xx,:);
                                                        tmplines=size(tmptxt0,2);
                                                        if size(unique(tmptxt0),2)==1
                                                            tmptxt1=num2str(tmptxt0(1)); 
                                                            text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)                    
                                                        else
                                                            for n=1:tmplines
                                                                tmptxt1=[];                            
                                                                tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(n,:)),'}',num2str(tmptxt0(n))];                           
                                                                if n==1
                                                                    text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)
                                                                else
                                                                    text(xTicks(xx), minY - (VerticalOffset1+(.02*(n-1))),tmptxt1,'horizontalalignment','center','fontsize',10)                                
                                                                end
                                                            end    
                                                        end
                                                    end
                                                    f = getframe(hfig);
                                                    imwrite(f.cdata,[identtrackint,'/',identn,'_',tmp_name,'_',stname,'.png'],'png');
                                                    close all
                                                end

                                                % Create Graphics: trk, int, spd errors - bt-gh vs. bt-deny
                                                for plt=1:23
                                                    clear l cntexp
                                                    set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                                    hfig=figure;
                                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                                    ax1=subplot(3,4,[1:8]);
                                                    hold on
                                                    if plt==1
                                                         tmp_exp=trkerr_exp(:,1:skip:end,:);
                                                         tmp_name='trkerr';
                                                         tmp_title='Track Error (km)';
                                                         tmp_ytitle='Error (km)';
                                                    elseif plt==2
                                                        tmp_exp=interr_exp(:,1:skip:end,:);
                                                        tmp_name='preserr';
                                                        tmp_title='Pressure Error (hPa)';
                                                        tmp_ytitle='Error (hPa)';
                                                    elseif plt==3
                                                        tmp_exp=spderr_exp(:,1:skip:end,:);
                                                        tmp_name='spderr';
                                                        tmp_title='Wind Speed Error (kts)';
                                                        tmp_ytitle='Error (kts)';
                                                     elseif plt==4
                                                        tmp_exp=ne34err_exp(:,1:skip:end,:);
                                                        tmp_name='ne34err';
                                                        tmp_title='R34 NEQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==5
                                                        tmp_exp=se34err_exp(:,1:skip:end,:);
                                                        tmp_name='se34err';
                                                        tmp_title='R34 SEQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==6
                                                        tmp_exp=sw34err_exp(:,1:skip:end,:);
                                                        tmp_name='sw34err';
                                                        tmp_title='R34 SWQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==7
                                                        tmp_exp=nw34err_exp(:,1:skip:end,:);
                                                        tmp_name='nw34err';
                                                        tmp_title='R34 NWQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==8
                                                        tmp_exp=ne50err_exp(:,1:skip:end,:);
                                                        tmp_name='ne50err';
                                                        tmp_title='R50 NEQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==9
                                                        tmp_exp=se50err_exp(:,1:skip:end,:);
                                                        tmp_name='se50err';
                                                        tmp_title='R50 SEQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==10
                                                        tmp_exp=sw50err_exp(:,1:skip:end,:);
                                                        tmp_name='sw50err';
                                                        tmp_title='R50 SWQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==11
                                                        tmp_exp=nw50err_exp(:,1:skip:end,:);
                                                        tmp_name='nw50err';
                                                        tmp_title='R50 NWQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==12
                                                        tmp_exp=ne64err_exp(:,1:skip:end,:);
                                                        tmp_name='ne64err';
                                                        tmp_title='R64 NEQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==13
                                                        tmp_exp=se64err_exp(:,1:skip:end,:);
                                                        tmp_name='se64err';
                                                        tmp_title='R64 SEQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==14
                                                        tmp_exp=sw64err_exp(:,1:skip:end,:);
                                                        tmp_name='sw64err';
                                                        tmp_title='R64 SWQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==15
                                                        tmp_exp=nw64err_exp(:,1:skip:end,:);
                                                        tmp_name='nw64err';
                                                        tmp_title='R64 NWQ Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 200];
                                                    elseif plt==16
                                                        tmp_exp=poerr_exp(:,1:skip:end,:);
                                                        tmp_name='poerr';
                                                        tmp_title='Outer Clsd Isbr Prs Error (hPa)';
                                                        tmp_ytitle='Error (hPa)';
                                                    elseif plt==17
                                                        tmp_exp=roerr_exp(:,1:skip:end,:);
                                                        tmp_name='roerr';
                                                        tmp_title='Outer Clsd Isbr Rad Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                    elseif plt==18
                                                        tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                                        tmp_name='rmwerr';
                                                        tmp_title='RMW Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                    elseif plt==19
                                                        tmp_exp=ateerr_exp(:,1:skip:end,:);
                                                        tmp_name='ateerr';
                                                        tmp_title='Along-Track Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[-500 500];                
                                                    elseif plt==20
                                                        tmp_exp=xteerr_exp(:,1:skip:end,:);
                                                        tmp_name='xteerr';
                                                        tmp_title='Across-Track Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[-500 500]; 
                                                    elseif plt==21
                                                        tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                                        tmp_name='34err';
                                                        tmp_title='R34 Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 100];
                                                    elseif plt==22
                                                        tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                                        tmp_name='50err';
                                                        tmp_title='R50 Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 100];
                                                    elseif plt==23
                                                        tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                                        tmp_name='64err';
                                                        tmp_title='R64 Error (km)';
                                                        tmp_ytitle='Error (km)';
                                                        yrange=[0 100];
                                                    end
                                                    if plt <19 || plt >20
                                                        tmp_exp=abs(tmp_exp); % added for MAE
                                                    end
                                                    tmp_exp0=tmp_exp;
                                                    % Strat
                                                                                        % Strat
                                                    if strat==1
                                                        clear tmpyrb
                                                        tmpnm=identinittimesunique(~isnan(BT_cat1)==1,:);
                                                    elseif strat==2
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                             tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:)=NaN;
                                                        else
                                                             tmp_exp(BT_drops'==0,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_drops'==1 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==3
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_target;BT_target;BT_target;BT_target]==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_target'==0,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_target'==1 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==4 % TD
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1>=34,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_cat1<34,:);
                                                    elseif strat==5 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<34 & BT_cat1>=63,:,:)=NaN;
                                                        end 
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63,:);
                                                    elseif strat==6 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=95,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<63 & BT_cat1>=95,:,:)=NaN;
                                                        end                  
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95,:);
                                                    elseif strat==7 % MJ
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<96,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<96,:,:)=NaN;
                                                        end     
                                                        tmpnm=identinittimesunique(BT_cat1>=96,:);
                                                    elseif strat==8 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_lat1<30,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1>=30,:);
                                                    elseif strat==9 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_lat1>=30,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30,:);
                                                    elseif strat==15 %% TD strat obs only
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1>=34 & BT_drops'==0,:,:)=NaN;
                                                        end   
                                                        tmpnm=identinittimesunique(BT_cat1<34 & BT_drops'==1,:);
                                                    elseif strat==16 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<34 & BT_cat1>=63 & BT_drops'==0,:,:)=NaN;
                                                        end            
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63 & BT_drops'==1,:);
                                                    elseif strat==17 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=95 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<63 & BT_cat1>=95 & BT_drops'==0,:,:)=NaN;
                                                         end
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95 & BT_drops'==1,:);
                                                    elseif strat==18 % MJ
                                                        clear tmpyrb
                                                       if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<96 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                       else
                                                            tmp_exp(BT_cat1<96 & BT_drops'==0,:,:)=NaN;
                                                       end
                                                        tmpnm=identinittimesunique(BT_cat1>=96 & BT_drops'==1,:);
                                                    elseif strat==19 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_lat1<30 & BT_drops'==0,:,:)=NaN;
                                                         end   
                                                        tmpnm=identinittimesunique(BT_lat1>=30 & BT_drops'==1,:);
                                                    elseif strat==20 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                             tmp_exp(BT_lat1>=30 & BT_drops'==0,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30 & BT_drops'==1,:);
                                                    elseif strat==21
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                             tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==1,:,:)=NaN;
                                                        else
                                                             tmp_exp(BT_drops'==1,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_drops'==0 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==22
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_target;BT_target;BT_target;BT_target]==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_target'==1,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_target'==0 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==23 %% TD strat obs only
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1>=34 & BT_drops'==1,:,:)=NaN;
                                                        end   
                                                        tmpnm=identinittimesunique(BT_cat1<34 & BT_drops'==0,:);
                                                    elseif strat==24 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<34 & BT_cat1>=63 & BT_drops'==1,:,:)=NaN;
                                                        end            
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63 & BT_drops'==0,:);
                                                    elseif strat==25 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=95 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<63 & BT_cat1>=95 & BT_drops'==1,:,:)=NaN;
                                                         end
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95 & BT_drops'==0,:);
                                                    elseif strat==26 % MJ
                                                        clear tmpyrb
                                                       if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<96 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                       else
                                                            tmp_exp(BT_cat1<96 & BT_drops'==1,:,:)=NaN;
                                                       end
                                                        tmpnm=identinittimesunique(BT_cat1>=96 & BT_drops'==0,:);
                                                    elseif strat==27 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_lat1<30 & BT_drops'==1,:,:)=NaN;
                                                         end   
                                                        tmpnm=identinittimesunique(BT_lat1>=30 & BT_drops'==0,:);
                                                    elseif strat==28 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                             tmp_exp(BT_lat1>=30 & BT_drops'==1,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30 & BT_drops'==0,:);    
                                                    elseif strat==888
                                                        clear tmpyrb
                                                        numlist=[];
                                                        for ins=1:size(identnewsub,1)
                                                            tmp=identnewsub(ins,:);
                                                            for ins2=1:size(identinittimesunique,1)
                                                                if strcmp(identinittimesunique(ins2,:),tmp)==1
                                                                    numlist=[numlist ins2];
                                                                else
                                                                end
                                                            end
                                                        end
                                                        [a_ns,b_ns]=histcounts(numlist,.5:1:size(identinittimesunique,1)+.5);
                                                        numlist=a_ns';
                                                        numlist(numlist>0)=1;
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([numlist;numlist;numlist;numlist]==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(numlist==0,:,:)=NaN;
                                                        end                  
                                                        tmpnm=identinittimesunique(numlist==1,:);     
                                                    end


                                                    for tmp=1:size(identexp,1)
                                                        l(tmp)=plot(nanmean(tmp_exp(:,:,tmp),2),1:size(tmp_exp(:,:,tmp),1),'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2);
                                                    end     
                                                    % Find which experiment to compare to
                                                    for tmp=1:size(identexp,1)
                                                        if strcmp(identexp(tmp),identexpsigimp)
                                                            tmpimp=tmp;
                                                        end
                                                    end
                                                    plot(zeros(1,100),-10:89,'Color',[.5 .5 .5],'linewidth',1);
                                                    for tmp=1:size(identexp,1)
                                                        sigtest=ttestsc(tmp_exp(:,:,tmp)',tmp_exp(:,:,tmpimp)','alpha',.05);
                                                        sigtest_loc=find(sigtest==1);
                                                        sigtest_exp=nanmean(tmp_exp(sigtest_loc,:,:),2);
                                                        for tmpi=tmp
                                                            plot(sigtest_exp(:,:,tmpi),sigtest_loc,'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                                        end                
                                                        sigtest=ttestsc(tmp_exp(:,:,tmp)',tmp_exp(:,:,tmpimp)','alpha',.1);
                                                        sigtest_loc1=find(sigtest==1);
                                                        sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                                        sigtest_exp=nanmean(tmp_exp(sigtest_loc,:,:),2);
                                                        for tmpi=tmp
                                                            plot(sigtest_exp(:,:,tmpi),sigtest_loc,'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                                                        end
                                                    end  
                                                    set(gca,'plotboxaspectratio',[1 1 1])
                                                    ylabel('Cycle Initialization Time','fontsize',20)
                                                    xlabel(tmp_ytitle,'fontsize',20)
                                                    set(gca,'fontsize',20)
                                                    box on
                                                    xstart=1;
                                    %                         for tmpxstart=1:size(BT_lat,1)
                                    %                             if isnan(BT_lat(tmpxstart,1))==1
                                    %                                 xstart=xstart+1;
                                    %                             end
                                    %                         end            
                                                    ylim([xstart-.5 size(BT_lat,1)+.5])
                                                    % YRANGE
                                                    clear allquad
                                                    allquad(1)=(max(max(nanmean(abs(ne34err_exp(:,1:skip:end,:)),2))));
                                                    allquad(2)=(max(max(nanmean(abs(se34err_exp(:,1:skip:end,:)),2))));
                                                    allquad(3)=(max(max(nanmean(abs(nw34err_exp(:,1:skip:end,:)),2))));
                                                    allquad(4)=(max(max(nanmean(abs(sw34err_exp(:,1:skip:end,:)),2))));
                                                    allquad(5)=(max(max(nanmean(abs(ne50err_exp(:,1:skip:end,:)),2))));
                                                    allquad(6)=(max(max(nanmean(abs(se50err_exp(:,1:skip:end,:)),2))));
                                                    allquad(7)=(max(max(nanmean(abs(nw50err_exp(:,1:skip:end,:)),2))));
                                                    allquad(8)=(max(max(nanmean(abs(sw50err_exp(:,1:skip:end,:)),2))));
                                                    allquad(9)=(max(max(nanmean(abs(ne64err_exp(:,1:skip:end,:)),2))));
                                                    allquad(10)=(max(max(nanmean(abs(se64err_exp(:,1:skip:end,:)),2))));
                                                    allquad(11)=(max(max(nanmean(abs(nw64err_exp(:,1:skip:end,:)),2))));
                                                    allquad(12)=(max(max(nanmean(abs(sw64err_exp(:,1:skip:end,:)),2))));
                                                    allquadmax=max(max(max(allquad)));
                                                    allquadmin=min(min(min(allquad)));
                                                    tmpvalq=max(abs(allquadmin),abs(allquadmax));
                                                    if isnan(tmpvalq)==1
                                                        tmpvalq=0;
                                                    end
                                                    if numel(num2str(tmpvalq))==3
                                                        addfacq=100;
                                                    elseif numel(num2str(tmpvalq))==2
                                                        addfacq=20;
                                                    else
                                                        addfacq=20;
                                                    end
                                                    if numel(num2str(round(max(max(nanmean((tmp_exp0),2))))))==3
                                                        addfac=100;
                                                    elseif numel(num2str(round(max(max(nanmean((tmp_exp0),2))))))==2
                                                        addfac=20;
                                                    else
                                                        addfac=20;
                                                    end
                                                    if plt<=3 || (plt>=16 && plt<=18) % 0-end
                                                        tmpmin=min(min(nanmean((tmp_exp0),2)));
                                                        tmpmax=max(max(nanmean((tmp_exp0),2)));
                                                        tmpval=max(abs(tmpmin),abs(tmpmax));
                                                            if isnan(tmpval)==1
                                                            tmpval=0;
                                                        end
                                                        yrange=[0 round((tmpval+addfac)/10)*10];                                
                                                    elseif plt==19 || plt==20 % -end end 
                                                        tmpmin=min(min(nanmean((tmp_exp0),2)));
                                                        tmpmax=max(max(nanmean((tmp_exp0),2)));
                                                        tmpval=max(abs(tmpmin),abs(tmpmax));
                                                        if isnan(tmpval)==1
                                                            tmpval=0;
                                                        end
                                                        yrange=[0 round((tmpval+addfac)/10)*10];                
                                                    elseif (plt>=4 && plt<=15) || plt>=21%quad
                                                        yrange=[0 round((tmpvalq+addfacq)/10)*10];
                                                    end
                %                                     if plt==1
                %                                         for lo=1:50
                %                                             if max(nanmean(tmp_exp,2))>100*lo
                %                                                 xlim([0 200+100*lo])
                %                                             end
                %                                         end
                %                                     elseif plt==2 || plt==3
                %                                         for lo=1:2:50
                %                                             if max(nanmean(tmp_exp,2))>5*lo
                %                                                 xlim([0 10+5*(lo+1)])
                %                                             end
                %                                         end            
                %                                     else
                                                        xlim(yrange)
                %                                     end
                                                    if size(identinittimesunique,1)>50
                                                        set(gca,'ytick',1:4:100)
                                                        set(gca,'yticklabel',identinittimesunique(1:4:end,:))
                                                    else
                                                        set(gca,'ytick',1:2:100)
                                                        set(gca,'yticklabel',identinittimesunique(1:2:end,:))
                                                    end  
                                                    grid on
                                                    set(gca,'gridcolor','k','gridalpha',.4,'xgrid','off')
                                                    set(gca,'fontsize',20)      
                                                    hold off
                                                    box on
                                                    lh=legend(l,identexpshort,'location','northeast');
													lh.FontSize=10;
                                                    set(gcf,'Units','inches');
                                                    a1Pos = get(gca,'Position');
                                                    set(gcf, 'InvertHardcopy', 'off')
                                                    set(gcf,'Units','inches');
                                                    screenposition = get(gcf,'Position');
                                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                    set(gcf, 'InvertHardcopy', 'off')
                                                    text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')    
                                                    text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');                
                                                    tmpuv = size(tmpnm,1);                               
                                                    tmpphrase=[num2str(tmpuv),'/',num2str(size(identinittimesunique,1))];                    
                                                    if strat==1
                                                    text(0,1.03,['\textbf{CYCLES: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    else
                                                    text(0,1.03,['\textbf{SUBSET: ',upper(stname),' $\mid$ CYCLES: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    end
                                                    ax=gca;
                                                    box on
                                                    set(ax, 'Layer', 'bottom')
                                                    ax.LineWidth=1; 
                                                    set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .85, 0.96]); % maximize figure window
                                                    set(gca,'Color',[.9 .9 .9])
                                                    clear cntexp
                                                    for tmp=1:size(identexp,1)
                                                        cntexp(:,tmp)=sum(~isnan(tmp_exp(:,:,tmp)),2);
                                                    end
                                                    if sum([cntexp(:)])==0
                                                        tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                        set(tx, 'Layer', 'front')
                                                    end   
                                                    if plt==19
                                                         tx=text(0.02,0.06,'Slower than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                         tx=text(0.98,0.06,'Faster than BT','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                    elseif plt==20
                                                         tx=text(0.02,0.06,'Left of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                         tx=text(0.98,0.06,'Right of BT','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                    end
                                                    b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                                                    yyaxis left
                                                    set(b,'YColor','none');
                                                    yyaxis right
                                                    set(b,'plotboxaspectratio',[1 1 1])
                                                    set(b,'Color','none');
                                                    set(b,'XColor','none');
                                                    set(b,'tickdir','both')
                                                    set(b,'YColor',[0 0 0]);
                                                    set(b,'xtick',[]);
                                                    ylim(b,[xstart-.5 size(BT_lat,1)+.5])
                                                    tmpxend=size(BT_lat,1);
                                                    if size(identinittimesunique,1)>50
                                                        set(b,'ytick',[1:4:100]); 
                                                    else
                                                        set(b,'ytick',[1:2:100]); 
                                                    end  
                                                    trkerr_exp_fcnt=zeros(1,tmpxend);            
                                                    trkerr_exp_fcnt1=zeros(1,tmpxend);            
                                                    trkerr_exp_fcnt2=zeros(1,tmpxend);
                                                    clear cntexp
                                                    for tmp=1:size(identexp,1)
                                                        cntexp(:,tmp)=sum(~isnan(tmp_exp(:,:,tmp)),2);
                                                    end  
                                        %             if size(identexp,1)==2
                                        %                 trkerr_exp_fcnt1(1:size(sum(~isnan(tmp_exp(:,:,1)),2),1))=sum(~isnan(tmp_exp(:,:,1)),2);            
                                        %                 trkerr_exp_fcnt2(1:size(sum(~isnan(tmp_exp(:,:,2)),2),1))=sum(~isnan(tmp_exp(:,:,2)),2);  
                                        %                 cnt=1;
                                        %                 for i=1:skip:size(trkerr_exp_fcnt1,2)
                                        %                     if trkerr_exp_fcnt1(i)==trkerr_exp_fcnt2(i)
                                        %                         b.YTickLabel{cnt} = num2str(trkerr_exp_fcnt1(i));
                                        %                     else
                                        %                         b.YTickLabel{cnt} = ['\color[rgb]{',num2str(identexpcolors(1,:)),'}',num2str(trkerr_exp_fcnt1(i)),'\color[rgb]{0,0,0}/\color[rgb]{',num2str(identexpcolors(2,:)),'}',num2str(trkerr_exp_fcnt2(i)),''];
                                        %                     end
                                        %                     cnt=cnt+1;
                                        %                 end
                                        %             elseif size(identexp,1)>2
                                        %                 maxmin=squeeze(sum(~isnan(tmp_exp(:,:,:)),2));         
                                        %                 first=min(maxmin');    
                                        %                 second=max(maxmin');
                                        %                 cnt=1;
                                        %                 for i=1:skip:size(maxmin,1)
                                        %                     if first(i)==second(i)
                                        %                         b.YTickLabel{cnt} = num2str(first(i));
                                        %                     else
                                        %                         b.YTickLabel{cnt} = [num2str(first(i)),'/',num2str(second(i)),''];
                                        %                     end
                                        %                     cnt=cnt+1;
                                        %                 end
                                        %             end
                                                    %if size(trkerr_gh,2)*3<max(0:size(1:skiptick:tmpxend,2):size(1:skiptick:tmpxend,2)*11)
                                                    %    trkerr_gh_fcnt(end-1:end)=0;
                                                    %end
                                                    set(gca,'fontsize',12)
                                                    xL=xlim;
                                                    yL=ylim;
                                                    ylabel({'# 6-h','fcsts'},'Position',[xL(2) yL(1)],'VerticalAlignment','top','HorizontalAlignment','center','Rotation',0); 
                                                    set(gca,'position',[spPos(1)+.08 spPos(2)+.05 spPos(3) spPos(4)])
                                                    screenposition = get(gcf,'Position');
                                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                    set(gcf, 'InvertHardcopy', 'off')            
                                                    % Create a text box at every Tick label position
                                                    maxmin=squeeze(sum(~isnan(tmp_exp(:,:,:)),2)); 
                                                    if size(identinittimesunique,1)>50
                                                        maxmin=maxmin(1:4:end,:); 
                                                    else
                                                        maxmin=maxmin(1:2:end,:); 
                                                    end
                                                    yTicks0 = get(gca, 'yticklabel');
                                                    yTicks = get(gca, 'ytick');
                                                    set(b,'yticklabels',[]);
                                                    minX =1;
                                                    HorizontalOffset1=0.03;
                                                    VerticalOffset = 0.2;
                                                    for xx = 1:size(yTicks0,1)
                                                        tmptxt0=maxmin(xx,:);
                                                        tmptxt1=[];
                                                        if size(unique(tmptxt0),2)==1
                                                            tmptxt1=num2str(tmptxt0(1));
                                                        else
                                                            for xxx=1:size(maxmin,2)
                                                                  if xxx==size(maxmin,2)
                                                                      tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(xxx,:)),'}',num2str(tmptxt0(xxx))];
                                                                  else
                                                                      tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(xxx,:)),'}',num2str(tmptxt0(xxx)),'\color[rgb]{0,0,0}/'];
                                                                  end
                                                            end
                                                        end
                                                        text(minX+HorizontalOffset1,yTicks(xx),tmptxt1,'verticalalignment','middle','fontsize',12)
                                                    end
                                                    f = getframe(hfig);
                                                    imwrite(f.cdata,[identtrackint,'/',identn,'_',tmp_name,'_',stname,'_cycles.png'],'png');
                                                    close all
                                                end   
                                                % Create Graphics: trk, int, spd improvement vs. deny
                                                for plt=1:23
                                                    clear l cntexp
                                                    set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                                    hfig=figure;
                                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                                    ax1=subplot(3,4,[1:8]);
                                                    hold on
                                                    if plt==1
                                                         tmp_exp=trkerr_exp(:,1:skip:end,:);
                                                         tmp_name='trkskill';
                                                         tmp_title='Track Improvement (\%)';
                                                         tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                         yrange=[-20 20];
                                                    elseif plt==2
                                                        tmp_exp=interr_exp(:,1:skip:end,:);
                                                        tmp_name='presskill';
                                                        tmp_title='Pressure Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                    elseif plt==3
                                                        tmp_exp=spderr_exp(:,1:skip:end,:);
                                                        tmp_name='spdskill';
                                                        tmp_title='Wind Speed Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                     elseif plt==4
                                                        tmp_exp=ne34err_exp(:,1:skip:end,:);
                                                        tmp_name='ne34skill';
                                                        tmp_title='R34 NEQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==5
                                                        tmp_exp=se34err_exp(:,1:skip:end,:);
                                                        tmp_name='se34skill';
                                                        tmp_title='R34 SEQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==6
                                                        tmp_exp=sw34err_exp(:,1:skip:end,:);
                                                        tmp_name='sw34skill';
                                                        tmp_title='R34 SWQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==7
                                                        tmp_exp=nw34err_exp(:,1:skip:end,:);
                                                        tmp_name='nw34skill';
                                                        tmp_title='R34 NWQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==8
                                                        tmp_exp=ne50err_exp(:,1:skip:end,:);
                                                        tmp_name='ne50skill';
                                                        tmp_title='R50 NEQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==9
                                                        tmp_exp=se50err_exp(:,1:skip:end,:);
                                                        tmp_name='se50skill';
                                                        tmp_title='R50 SEQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==10
                                                        tmp_exp=sw50err_exp(:,1:skip:end,:);
                                                        tmp_name='sw50skill';
                                                        tmp_title='R50 SWQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==11
                                                        tmp_exp=nw50err_exp(:,1:skip:end,:);
                                                        tmp_name='nw50skill';
                                                        tmp_title='R50 NWQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==12
                                                        tmp_exp=ne64err_exp(:,1:skip:end,:);
                                                        tmp_name='ne64skill';
                                                        tmp_title='R64 NEQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==13
                                                        tmp_exp=se64err_exp(:,1:skip:end,:);
                                                        tmp_name='se64skill';
                                                        tmp_title='R64 SEQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==14
                                                        tmp_exp=sw64err_exp(:,1:skip:end,:);
                                                        tmp_name='sw64skill';
                                                        tmp_title='R64 SWQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==15
                                                        tmp_exp=nw64err_exp(:,1:skip:end,:);
                                                        tmp_name='nw64skill';
                                                        tmp_title='R64 NWQ Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==16
                                                        tmp_exp=poerr_exp(:,1:skip:end,:);
                                                        tmp_name='poskill';
                                                        tmp_title='Outer Clsd Isbr Prs Improvement (hPa)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                    elseif plt==17
                                                        tmp_exp=roerr_exp(:,1:skip:end,:);
                                                        tmp_name='roskill';
                                                        tmp_title='Outer Clsd Isbr Rad Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                    elseif plt==18
                                                        tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                                        tmp_name='rmwskill';
                                                        tmp_title='RMW Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                    elseif plt==19
                                                        tmp_exp=ateerr_exp(:,1:skip:end,:);
                                                        tmp_name='ateskill';
                                                        tmp_title='Along-Track Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-200 200];                                 
                                                    elseif plt==20
                                                        tmp_exp=xteerr_exp(:,1:skip:end,:);
                                                        tmp_name='xteskill';
                                                        tmp_title='Across-Track Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-200 200];                                 
                                                    elseif plt==21
                                                        tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                                        tmp_name='34skill';
                                                        tmp_title='R34 Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-50 50];
                                                    elseif plt==22
                                                        tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                                        tmp_name='50skill';
                                                        tmp_title='R50 Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-50 50];
                                                    elseif plt==23
                                                        tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                                        tmp_name='64skill';
                                                        tmp_title='R64 Improvement (\%)';
                                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-50 50];
                                                    end
                                                    if plt <19 || plt >20
                                                        tmp_exp=abs(tmp_exp); % added for MAE
                                                    end
                                                    tmp_exp0=squeeze(100.*(1-nanmean(tmp_exp(:,:,:),2)./nanmean(tmp_exp(:,:,tmpimp),2)));                  

                                                                                        % Strat
                                                    if strat==1
                                                        clear tmpyrb
                                                        tmpnm=identinittimesunique(~isnan(BT_cat1)==1,:);
                                                    elseif strat==2
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                             tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:)=NaN;
                                                        else
                                                             tmp_exp(BT_drops'==0,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_drops'==1 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==3
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_target;BT_target;BT_target;BT_target]==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_target'==0,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_target'==1 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==4 % TD
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1>=34,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_cat1<34,:);
                                                    elseif strat==5 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<34 & BT_cat1>=63,:,:)=NaN;
                                                        end 
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63,:);
                                                    elseif strat==6 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=95,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<63 & BT_cat1>=95,:,:)=NaN;
                                                        end                  
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95,:);
                                                    elseif strat==7 % MJ
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<96,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<96,:,:)=NaN;
                                                        end     
                                                        tmpnm=identinittimesunique(BT_cat1>=96,:);
                                                    elseif strat==8 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_lat1<30,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1>=30,:);
                                                    elseif strat==9 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_lat1>=30,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30,:);
                                                    elseif strat==15 %% TD strat obs only
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1>=34 & BT_drops'==0,:,:)=NaN;
                                                        end   
                                                        tmpnm=identinittimesunique(BT_cat1<34 & BT_drops'==1,:);
                                                    elseif strat==16 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<34 & BT_cat1>=63 & BT_drops'==0,:,:)=NaN;
                                                        end            
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63 & BT_drops'==1,:);
                                                    elseif strat==17 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=95 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<63 & BT_cat1>=95 & BT_drops'==0,:,:)=NaN;
                                                         end
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95 & BT_drops'==1,:);
                                                    elseif strat==18 % MJ
                                                        clear tmpyrb
                                                       if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<96 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                       else
                                                            tmp_exp(BT_cat1<96 & BT_drops'==0,:,:)=NaN;
                                                       end
                                                        tmpnm=identinittimesunique(BT_cat1>=96 & BT_drops'==1,:);
                                                    elseif strat==19 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_lat1<30 & BT_drops'==0,:,:)=NaN;
                                                         end   
                                                        tmpnm=identinittimesunique(BT_lat1>=30 & BT_drops'==1,:);
                                                    elseif strat==20 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                             tmp_exp(BT_lat1>=30 & BT_drops'==0,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30 & BT_drops'==1,:); 
                                                    elseif strat==21
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                             tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==1,:,:)=NaN;
                                                        else
                                                             tmp_exp(BT_drops'==1,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_drops'==0 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==22
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_target;BT_target;BT_target;BT_target]==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_target'==1,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_target'==0 & ~isnan(BT_cat1)==1,:); 
                                                    elseif strat==23 %% TD strat obs only
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1>=34 & BT_drops'==1,:,:)=NaN;
                                                        end   
                                                        tmpnm=identinittimesunique(BT_cat1<34 & BT_drops'==0,:);
                                                    elseif strat==24 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<34 & BT_cat1>=63 & BT_drops'==1,:,:)=NaN;
                                                        end            
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63 & BT_drops'==0,:);
                                                    elseif strat==25 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=95 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<63 & BT_cat1>=95 & BT_drops'==1,:,:)=NaN;
                                                         end
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95 & BT_drops'==0,:);
                                                    elseif strat==26 % MJ
                                                        clear tmpyrb
                                                       if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<96 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                       else
                                                            tmp_exp(BT_cat1<96 & BT_drops'==1,:,:)=NaN;
                                                       end
                                                        tmpnm=identinittimesunique(BT_cat1>=96 & BT_drops'==0,:);
                                                    elseif strat==27 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_lat1<30 & BT_drops'==1,:,:)=NaN;
                                                         end   
                                                        tmpnm=identinittimesunique(BT_lat1>=30 & BT_drops'==0,:);
                                                    elseif strat==28 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                             tmp_exp(BT_lat1>=30 & BT_drops'==1,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30 & BT_drops'==0,:);    
                                                    elseif strat==888
                                                        clear tmpyrb
                                                        numlist=[];
                                                        for ins=1:size(identnewsub,1)
                                                            tmp=identnewsub(ins,:);
                                                            for ins2=1:size(identinittimesunique,1)
                                                                if strcmp(identinittimesunique(ins2,:),tmp)==1
                                                                    numlist=[numlist ins2];
                                                                else
                                                                end
                                                            end
                                                        end
                                                        [a_ns,b_ns]=histcounts(numlist,.5:1:size(identinittimesunique,1)+.5);
                                                        numlist=a_ns';
                                                        numlist(numlist>0)=1;
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([numlist;numlist;numlist;numlist]==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(numlist==0,:,:)=NaN;
                                                        end                  
                                                        tmpnm=identinittimesunique(numlist==1,:);        
                                                    end

                                                    % Find which experiment to compare to
                                                    for tmp=1:size(identexp,1)
                                                        if strcmp(identexp(tmp),identexpsigimp)
                                                            tmpimp=tmp;
                                                        end
                                                    end      
                                                    tmpu=1:size(identexp,1);
                                                            tmpu(tmpu==tmpimp)=[];
                                                            plot(zeros(1,100),-10:89,'Color',[.5 .5 .5],'linewidth',1);
                                                            clear imprv1
                                                            for tmp=[tmpimp,tmpu]
                                                                imprv=100.*(1-nanmean(tmp_exp(:,:,tmp),2)./nanmean(tmp_exp(:,:,tmpimp),2));  
                                                                imprv(imprv<-99999999)=NaN;
                                                                imprv(imprv>99999999)=NaN;
                                                                l(tmp)=plot(imprv,1:size(imprv,1),'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2); 
                                                                sigtest=ttestsc(tmp_exp(:,:,tmp)',tmp_exp(:,:,tmpimp)','alpha',.05);
                                                                sigtest_loc=find(sigtest==1);
                                                                sigtest_exp=imprv(sigtest_loc);
                                                                plot(sigtest_exp,sigtest_loc,'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                                                sigtest=ttestsc(tmp_exp(:,:,tmp)',tmp_exp(:,:,tmpimp)','alpha',.1);
                                                                sigtest_loc1=find(sigtest==1);
                                                                sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                                                sigtest_exp=imprv(sigtest_loc);
                                                                plot(sigtest_exp,sigtest_loc,'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                                                                imprv1(:,tmp)=imprv;
                                                            end  
                                                            set(gca,'plotboxaspectratio',[1 1 1])
                                                            ylabel('Cycle Initialization Time','fontsize',20)
                                                            xlabel(tmp_ytitle,'fontsize',20)
                                                            set(gca,'fontsize',20)
                                                            box on
                                                             % YRANGE
                                                            clear allquad imprv3
                                                            imprv3(:,:,1)=100.*(1-nanmean(abs(ne34err_exp(:,1:skip:end,:)),2)./nanmean(abs(ne34err_exp(:,1:skip:end,tmpimp)),2));
                                                            imprv3(:,:,2)=100.*(1-nanmean(abs(se34err_exp(:,1:skip:end,:)),2)./nanmean(abs(se34err_exp(:,1:skip:end,tmpimp)),2));
                                                            imprv3(:,:,3)=100.*(1-nanmean(abs(nw34err_exp(:,1:skip:end,:)),2)./nanmean(abs(nw34err_exp(:,1:skip:end,tmpimp)),2));
                                                            imprv3(:,:,4)=100.*(1-nanmean(abs(sw34err_exp(:,1:skip:end,:)),2)./nanmean(abs(sw34err_exp(:,1:skip:end,tmpimp)),2));
                                                            imprv3(:,:,5)=100.*(1-nanmean(abs(ne34err_exp(:,1:skip:end,:)),2)./nanmean(abs(ne34err_exp(:,1:skip:end,tmpimp)),2));
                                                            imprv3(:,:,6)=100.*(1-nanmean(abs(se34err_exp(:,1:skip:end,:)),2)./nanmean(abs(se34err_exp(:,1:skip:end,tmpimp)),2));
                                                            imprv3(:,:,7)=100.*(1-nanmean(abs(nw34err_exp(:,1:skip:end,:)),2)./nanmean(abs(nw34err_exp(:,1:skip:end,tmpimp)),2));
                                                            imprv3(:,:,8)=100.*(1-nanmean(abs(sw34err_exp(:,1:skip:end,:)),2)./nanmean(abs(sw34err_exp(:,1:skip:end,tmpimp)),2));
                                                            imprv3(:,:,9)=100.*(1-nanmean(abs(ne34err_exp(:,1:skip:end,:)),2)./nanmean(abs(ne34err_exp(:,1:skip:end,tmpimp)),2));
                                                            imprv3(:,:,10)=100.*(1-nanmean(abs(se34err_exp(:,1:skip:end,:)),2)./nanmean(abs(se34err_exp(:,1:skip:end,tmpimp)),2));
                                                            imprv3(:,:,11)=100.*(1-nanmean(abs(nw34err_exp(:,1:skip:end,:)),2)./nanmean(abs(nw34err_exp(:,1:skip:end,tmpimp)),2));
                                                            imprv3(:,:,12)=100.*(1-nanmean(abs(sw34err_exp(:,1:skip:end,:)),2)./nanmean(abs(sw34err_exp(:,1:skip:end,tmpimp)),2));
                                                            allquadmax=max(max(max(imprv3)));
                                                            allquadmin=min(min(min(imprv3)));
                                                            tmpvalq=max(abs(allquadmin),abs(allquadmax));
                                                            if isnan(tmpvalq)==1
                                                                tmpvalq=0;
                                                            end
                                                            if numel(num2str(tmpvalq))==3
                                                                addfacq=100;
                                                            elseif numel(num2str(tmpvalq))==2
                                                                addfacq=20;
                                                            else
                                                                addfacq=20;
                                                            end
                                                            if numel(num2str(round(max(max(nanmean((tmp_exp0),2))))))==3
                                                                addfac=100;
                                                            elseif numel(num2str(round(max(max(nanmean((tmp_exp0),2))))))==2
                                                                addfac=20;
                                                            else
                                                                addfac=20;
                                                            end
                                                            if plt<=3 || (plt>=16 && plt<=18) % 0-end
                                                                tmpmin=min(min(((tmp_exp0))));
                                                                tmpmax=max(max(((tmp_exp0))));
                                                                tmpval=max(abs(tmpmin),abs(tmpmax));
                                                                if isnan(tmpval)==1
                                                                    tmpval=0;
                                                                end
                                                                if tmpval>250
                                                                    yrange=[-250 250];
                                                                else
                                                                    yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                                                                end
                                                            elseif plt==19 || plt==20 % -end end 
                                                                tmpmin=min(min(((tmp_exp0))));
                                                                tmpmax=max(max(((tmp_exp0))));
                                                                tmpval=max(abs(tmpmin),abs(tmpmax));
                                                                if isnan(tmpval)==1
                                                                    tmpval=0;
                                                                end
                                                                if tmpval>250
                                                                    yrange=[-250 250];
                                                                else
                                                                    yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                                                                end               
                                                            elseif (plt>=4 && plt<=15) || plt>=21%quad
                                                                if tmpvalq>250
                                                                    yrange=[-250 250];
                                                                else
                                                                    yrange=[-round((tmpvalq+addfacq)/10)*10 round((tmpvalq+addfacq)/10)*10];
                                                                end
                                                            end

                                                            xlim(yrange)
                                                            xstart=1;
                                                            ylim([xstart-.5 size(BT_lat,1)+.5])   
                                                            if size(identinittimesunique,1)>50
                                                                set(gca,'ytick',1:4:100)
                                                                set(gca,'yticklabel',identinittimesunique(1:4:end,:))
                                                            else
                                                                set(gca,'ytick',1:2:100)
                                                                set(gca,'yticklabel',identinittimesunique(1:2:end,:))
                                                            end                        
                                                            grid on
                                                            set(gca,'gridcolor','k','gridalpha',.4,'xgrid','off')
                                                            set(gca,'fontsize',20)      
                                                            hold off
                                                            box on
                                                            lh=legend(l,identexpshort,'location','northeast');
															lh.FontSize=10;
                                                            set(gcf,'Units','inches');
                                                            a1Pos = get(gca,'Position');
                                                            set(gcf, 'InvertHardcopy', 'off')
                                                            set(gcf,'Units','inches');
                                                            screenposition = get(gcf,'Position');
                                                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                            set(gcf, 'InvertHardcopy', 'off')
                                                    text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                                    tmpuv = size(tmpnm,1);                               
                                                    tmpphrase=[num2str(tmpuv),'/',num2str(size(identinittimesunique,1))];                    
                                                    if strat==1
                                                    text(0,1.03,['\textbf{CYCLES: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    else
                                                    text(0,1.03,['\textbf{SUBSET: ',upper(stname),' $\mid$ CYCLES: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    end
                                                    ax=gca;
                                                            box on
                                                            set(ax, 'Layer', 'bottom')
                                                            ax.LineWidth=1; 
                                                            set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                                                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .85, 0.96]); % maximize figure window
                                                            set(gca,'Color',[.9 .9 .9])
                                                            clear cntexp
                                                            for tmp=1:size(identexp,1)
                                                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,:,tmp)),2);
                                                            end        
                                                            % Mean Value            
                                                            tmpstr=['Mean: '];
                                                            tmpstrmean=nanmean(imprv1,1);
                                                            tmpstrmean=(find(tmpstrmean~=0));
                                                            if size(tmpstrmean,2)>0
                                                                for tmp=tmpstrmean
                                                                    if tmp==tmpstrmean(end)
                                                                        tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(imprv1(:,tmp)),2)),'%'];
                                                                    else
                                                                        tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(imprv1(:,tmp)),2)),'% \color[rgb]{0,0,0}| '];
                                                                    end
                                                                end
                                                            else
                                                                tmpstr=[''];
                                                            end
                                                            if sum(cntexp(:))==0 || sum(sum(~isnan(imprv1)))==0
                                                                tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                                set(tx, 'Layer', 'front')          
                                                            else
                                                                tx=text(0.98,0.06,tmpstr,'HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                                set(tx, 'Layer', 'front')
                                                            end   
                                                            b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                                                            yyaxis left
                                                            set(b,'YColor','none');
                                                            yyaxis right
                                                            set(b,'plotboxaspectratio',[1 1 1])
                                                            set(b,'Color','none');
                                                            set(b,'XColor','none');
                                                            set(b,'tickdir','both')
                                                            set(b,'YColor',[0 0 0]);
                                                            set(b,'xtick',[]);
                                                            ylim(b,[xstart-.5 size(BT_lat,1)+.5])
                                                            tmpxend=size(BT_lat,1);
                                                            if size(identinittimesunique,1)>50
                                                                set(b,'ytick',[1:4:100]); 
                                                            else
                                                                set(b,'ytick',[1:2:100]); 
                                                            end    
                                                            trkerr_exp_fcnt=zeros(1,tmpxend);            
                                                            trkerr_exp_fcnt1=zeros(1,tmpxend);            
                                                            trkerr_exp_fcnt2=zeros(1,tmpxend);
                                                            clear cntexp
                                                            for tmp=1:size(identexp,1)
                                                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,:,tmp)),2);
                                                            end  
                                                %             if size(identexp,1)==2
                                                %                 trkerr_exp_fcnt1(1:size(sum(~isnan(tmp_exp(:,:,1)),2),1))=sum(~isnan(tmp_exp(:,:,1)),2);            
                                                %                 trkerr_exp_fcnt2(1:size(sum(~isnan(tmp_exp(:,:,2)),2),1))=sum(~isnan(tmp_exp(:,:,2)),2);  
                                                %                 cnt=1;
                                                %                 for i=1:skip:size(trkerr_exp_fcnt1,2)
                                                %                     if trkerr_exp_fcnt1(i)==trkerr_exp_fcnt2(i)
                                                %                         b.YTickLabel{cnt} = num2str(trkerr_exp_fcnt1(i));
                                                %                     else
                                                %                         b.YTickLabel{cnt} = ['\color[rgb]{',num2str(identexpcolors(1,:)),'}',num2str(trkerr_exp_fcnt1(i)),'\color[rgb]{0,0,0}/\color[rgb]{',num2str(identexpcolors(2,:)),'}',num2str(trkerr_exp_fcnt2(i)),''];
                                                %                     end
                                                %                     cnt=cnt+1;
                                                %                 end
                                                %             elseif size(identexp,1)>2
                                                %                 maxmin=squeeze(sum(~isnan(tmp_exp(:,:,:)),2));         
                                                %                 first=min(maxmin');    
                                                %                 second=max(maxmin');
                                                %                 cnt=1;
                                                %                 for i=1:skip:size(maxmin,1)
                                                %                     if first(i)==second(i)
                                                %                         b.YTickLabel{cnt} = num2str(first(i));
                                                %                     else
                                                %                         b.YTickLabel{cnt} = [num2str(first(i)),'/',num2str(second(i)),''];
                                                %                     end
                                                %                     cnt=cnt+1;
                                                %                 end
                                                %             end
                                                            %if size(trkerr_gh,2)*3<max(0:size(1:skiptick:tmpxend,2):size(1:skiptick:tmpxend,2)*11)
                                                            %    trkerr_gh_fcnt(end-1:end)=0;
                                                            %end
                                                            set(gca,'fontsize',12)
                                                            xL=xlim;
                                                            yL=ylim;
                                                            ylabel({'# 6-h','fcsts'},'Position',[xL(2) yL(1)],'VerticalAlignment','top','HorizontalAlignment','center','Rotation',0); 
                                                            set(gca,'position',[spPos(1)+.08 spPos(2)+.05 spPos(3) spPos(4)])
                                                            screenposition = get(gcf,'Position');
                                                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                            set(gcf, 'InvertHardcopy', 'off')
                                                            % Create a text box at every Tick label position
                                                            maxmin=squeeze(sum(~isnan(tmp_exp(:,:,:)),2)); 
                                                            if size(identinittimesunique,1)>50
                                                                maxmin=maxmin(1:4:end,:); 
                                                            else
                                                                maxmin=maxmin(1:2:end,:); 
                                                            end                        
                                                            yTicks0 = get(gca, 'yticklabel');
                                                            yTicks = get(gca, 'ytick');
                                                            set(b,'yticklabels',[]);
                                                            minX =1;
                                                            HorizontalOffset1=0.03;
                                                            VerticalOffset = 0.2;
                                                            for xx = 1:size(yTicks0,1)
                                                                tmptxt0=maxmin(xx,:);
                                                                tmptxt1=[];
                                                                if size(unique(tmptxt0),2)==1
                                                                    tmptxt1=num2str(tmptxt0(1));
                                                                else
                                                                    for xxx=1:size(maxmin,2)
                                                                          if xxx==size(maxmin,2)
                                                                              tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(xxx,:)),'}',num2str(tmptxt0(xxx))];
                                                                          else
                                                                              tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(xxx,:)),'}',num2str(tmptxt0(xxx)),'\color[rgb]{0,0,0}/'];
                                                                          end
                                                                    end
                                                                end
                                                                text(minX+HorizontalOffset1,yTicks(xx),tmptxt1,'verticalalignment','middle','fontsize',12)
                                                            end
                                                            f = getframe(hfig);
                                                            imwrite(f.cdata,[identtrackint,'/',identn,'_',tmp_name,'_',stname,'_cycles.png'],'png');
                                                            close all
                                                end
                                                % Create Graphics: trk, int, spd FSP vs. deny
                                                for plt=1:23
                                                    clear l cntexp
                                                    set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                                    hfig=figure;
                                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                                    ax1=subplot(3,4,[1:8]);
                                                    hold on
                                                    if plt==1
                                                         tmp_exp=trkerr_exp(:,1:skip:end,:);
                                                         tmp_name='trkfsp';
                                                         tmp_title='Track FSP (\%)';
                                                         tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                         yrange=[-20 20];
                                                    elseif plt==2
                                                        tmp_exp=interr_exp(:,1:skip:end,:);
                                                        tmp_name='presfsp';
                                                        tmp_title='Pressure FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                    elseif plt==3
                                                        tmp_exp=spderr_exp(:,1:skip:end,:);
                                                        tmp_name='spdfsp';
                                                        tmp_title='Wind Speed FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                     elseif plt==4
                                                        tmp_exp=ne34err_exp(:,1:skip:end,:);
                                                        tmp_name='ne34fsp';
                                                        tmp_title='R34 NEQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==5
                                                        tmp_exp=se34err_exp(:,1:skip:end,:);
                                                        tmp_name='se34fsp';
                                                        tmp_title='R34 SEQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==6
                                                        tmp_exp=sw34err_exp(:,1:skip:end,:);
                                                        tmp_name='sw34fsp';
                                                        tmp_title='R34 SWQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==7
                                                        tmp_exp=nw34err_exp(:,1:skip:end,:);
                                                        tmp_name='nw34fsp';
                                                        tmp_title='R34 NWQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==8
                                                        tmp_exp=ne50err_exp(:,1:skip:end,:);
                                                        tmp_name='ne50fsp';
                                                        tmp_title='R50 NEQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==9
                                                        tmp_exp=se50err_exp(:,1:skip:end,:);
                                                        tmp_name='se50fsp';
                                                        tmp_title='R50 SEQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==10
                                                        tmp_exp=sw50err_exp(:,1:skip:end,:);
                                                        tmp_name='sw50fsp';
                                                        tmp_title='R50 SWQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==11
                                                        tmp_exp=nw50err_exp(:,1:skip:end,:);
                                                        tmp_name='nw50fsp';
                                                        tmp_title='R50 NWQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==12
                                                        tmp_exp=ne64err_exp(:,1:skip:end,:);
                                                        tmp_name='ne64fsp';
                                                        tmp_title='R64 NEQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==13
                                                        tmp_exp=se64err_exp(:,1:skip:end,:);
                                                        tmp_name='se64fsp';
                                                        tmp_title='R64 SEQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==14
                                                        tmp_exp=sw64err_exp(:,1:skip:end,:);
                                                        tmp_name='sw64fsp';
                                                        tmp_title='R64 SWQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==15
                                                        tmp_exp=nw64err_exp(:,1:skip:end,:);
                                                        tmp_name='nw64fsp';
                                                        tmp_title='R64 NWQ FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-100 100];                 
                                                    elseif plt==16
                                                        tmp_exp=poerr_exp(:,1:skip:end,:);
                                                        tmp_name='pofsp';
                                                        tmp_title='Outer Clsd Isbr Prs FSP (hPa)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                    elseif plt==17
                                                        tmp_exp=roerr_exp(:,1:skip:end,:);
                                                        tmp_name='rofsp';
                                                        tmp_title='Outer Clsd Isbr Rad FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                    elseif plt==18
                                                        tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                                        tmp_name='rmwfsp';
                                                        tmp_title='RMW FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                    elseif plt==19
                                                        tmp_exp=ateerr_exp(:,1:skip:end,:);
                                                        tmp_name='atefsp';
                                                        tmp_title='Along-Track FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-200 200];                                 
                                                    elseif plt==20
                                                        tmp_exp=xteerr_exp(:,1:skip:end,:);
                                                        tmp_name='xtefsp';
                                                        tmp_title='Across-Track FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-200 200];                                 
                                                    elseif plt==21
                                                        tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                                        tmp_name='34fsp';
                                                        tmp_title='R34 FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-50 50];
                                                    elseif plt==22
                                                        tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                                        tmp_name='50fsp';
                                                        tmp_title='R50 FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-50 50];
                                                    elseif plt==23
                                                        tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                                        tmp_name='64fsp';
                                                        tmp_title='R64 FSP (\%)';
                                                        tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                                        yrange=[-50 50];
                                                    end
                                                    if plt <19 || plt >20
                                                        tmp_exp=abs(tmp_exp); % added for MAE
                                                    end
                                                    tmp_exp0=squeeze(100.*(1-nanmean(tmp_exp(:,:,:),2)./nanmean(tmp_exp(:,:,tmpimp),2)));                  

                                                                                        % Strat
                                                    if strat==1
                                                        clear tmpyrb
                                                        tmpnm=identinittimesunique(~isnan(BT_cat1)==1,:);
                                                    elseif strat==2
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                             tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:)=NaN;
                                                        else
                                                             tmp_exp(BT_drops'==0,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_drops'==1 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==3
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_target;BT_target;BT_target;BT_target]==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_target'==0,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_target'==1 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==4 % TD
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1>=34,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_cat1<34,:);
                                                    elseif strat==5 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<34 & BT_cat1>=63,:,:)=NaN;
                                                        end 
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63,:);
                                                    elseif strat==6 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=95,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<63 & BT_cat1>=95,:,:)=NaN;
                                                        end                  
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95,:);
                                                    elseif strat==7 % MJ
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<96,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<96,:,:)=NaN;
                                                        end     
                                                        tmpnm=identinittimesunique(BT_cat1>=96,:);
                                                    elseif strat==8 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_lat1<30,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1>=30,:);
                                                    elseif strat==9 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_lat1>=30,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30,:);
                                                    elseif strat==15 %% TD strat obs only
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1>=34 & BT_drops'==0,:,:)=NaN;
                                                        end   
                                                        tmpnm=identinittimesunique(BT_cat1<34 & BT_drops'==1,:);
                                                    elseif strat==16 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<34 & BT_cat1>=63 & BT_drops'==0,:,:)=NaN;
                                                        end            
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63 & BT_drops'==1,:);
                                                    elseif strat==17 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=95 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<63 & BT_cat1>=95 & BT_drops'==0,:,:)=NaN;
                                                         end
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95 & BT_drops'==1,:);
                                                    elseif strat==18 % MJ
                                                        clear tmpyrb
                                                       if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<96 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                       else
                                                            tmp_exp(BT_cat1<96 & BT_drops'==0,:,:)=NaN;
                                                       end
                                                        tmpnm=identinittimesunique(BT_cat1>=96 & BT_drops'==1,:);
                                                    elseif strat==19 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_lat1<30 & BT_drops'==0,:,:)=NaN;
                                                         end   
                                                        tmpnm=identinittimesunique(BT_lat1>=30 & BT_drops'==1,:);
                                                    elseif strat==20 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                             tmp_exp(BT_lat1>=30 & BT_drops'==0,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30 & BT_drops'==1,:); 
                                                    elseif strat==21
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                             tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==1,:,:)=NaN;
                                                        else
                                                             tmp_exp(BT_drops'==1,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_drops'==0 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==22
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_target;BT_target;BT_target;BT_target]==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_target'==1,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_target'==0 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==23 %% TD strat obs only
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1>=34 & BT_drops'==1,:,:)=NaN;
                                                        end   
                                                        tmpnm=identinittimesunique(BT_cat1<34 & BT_drops'==0,:);
                                                    elseif strat==24 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<34 & BT_cat1>=63 & BT_drops'==1,:,:)=NaN;
                                                        end            
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63 & BT_drops'==0,:);
                                                    elseif strat==25 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=95 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<63 & BT_cat1>=95 & BT_drops'==1,:,:)=NaN;
                                                         end
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95 & BT_drops'==0,:);
                                                    elseif strat==26 % MJ
                                                        clear tmpyrb
                                                       if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<96 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                       else
                                                            tmp_exp(BT_cat1<96 & BT_drops'==1,:,:)=NaN;
                                                       end
                                                        tmpnm=identinittimesunique(BT_cat1>=96 & BT_drops'==0,:);
                                                    elseif strat==27 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_lat1<30 & BT_drops'==1,:,:)=NaN;
                                                         end   
                                                        tmpnm=identinittimesunique(BT_lat1>=30 & BT_drops'==0,:);
                                                    elseif strat==28 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                             tmp_exp(BT_lat1>=30 & BT_drops'==1,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30 & BT_drops'==0,:);    
                                                    elseif strat==888
                                                        clear tmpyrb
                                                        numlist=[];
                                                        for ins=1:size(identnewsub,1)
                                                            tmp=identnewsub(ins,:);
                                                            for ins2=1:size(identinittimesunique,1)
                                                                if strcmp(identinittimesunique(ins2,:),tmp)==1
                                                                    numlist=[numlist ins2];
                                                                else
                                                                end
                                                            end
                                                        end
                                                        [a_ns,b_ns]=histcounts(numlist,.5:1:size(identinittimesunique,1)+.5);
                                                        numlist=a_ns';
                                                        numlist(numlist>0)=1;
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([numlist;numlist;numlist;numlist]==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(numlist==0,:,:)=NaN;
                                                        end                  
                                                        tmpnm=identinittimesunique(numlist==1,:);      
                                                    end

                                                    % Find which experiment to compare to
                                                    for tmp=1:size(identexp,1)
                                                        if strcmp(identexp(tmp),identexpsigimp)
                                                            tmpimp=tmp;
                                                        end
                                                    end      
                                                    tmpu=1:size(identexp,1);
                                                            tmpu(tmpu==tmpimp)=[];
                                                            plot(50*ones(1,100),-10:89,'Color',[.5 .5 .5],'linewidth',1);
                                                            clear fsp2
                                                            cntl=1;
                                                            for tmp=tmpu
                                                                tmp1=tmp_exp(:,:,tmp);
                                                                tmp2=tmp_exp(:,:,tmpimp);
                                                                tmp3=sign(tmp1-tmp2);
                                                                tmp4=tmp3<0;
                                                                tmp5=tmp3>0;
                                                                tmp6=tmp3==0;
                                                                tmptmp=sum(~isnan(tmp3),2);                            
                                                                fspa=100*(nansum(tmp4,2)+nansum(tmp6,2)./2)./tmptmp;
                                                                fspb=100*(nansum(tmp5,2)+nansum(tmp6,2)./2)./tmptmp;
                                                                fsp2(:,tmp)=fspa;
                                                                %plot(fspb,1:size(fspb,1),'--s','Color',identexpcolors(tmp,:),'linewidth',.5,'markersize',2); 
                                                                l(cntl)=plot(fspa,1:size(fspa,1),'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2); 
                                                                cntl=cntl+1;
																sigtest=ttestsc(tmp_exp(:,:,tmp)',tmp_exp(:,:,tmpimp)','alpha',.05);
                                                                sigtest_loc=find(sigtest==1);
                                                                sigtest_exp=fspa(sigtest_loc);
                                                                plot(sigtest_exp,sigtest_loc,'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                                                sigtest=ttestsc(tmp_exp(:,:,tmp)',tmp_exp(:,:,tmpimp)','alpha',.1);
                                                                sigtest_loc1=find(sigtest==1);
                                                                sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                                                sigtest_exp=fspa(sigtest_loc);
                                                                plot(sigtest_exp,sigtest_loc,'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                                                            end
                                                            set(gca,'plotboxaspectratio',[1 1 1])
                                                            ylabel('Cycle Initialization Time','fontsize',20)
                                                            xlabel(tmp_ytitle,'fontsize',20)
                                                            set(gca,'fontsize',20)
                                                            box on
                                                            xlim([0 100])
                                                            xstart=1;
                                                            ylim([xstart-.5 size(BT_lat,1)+.5])   
                                                            if size(identinittimesunique,1)>50
                                                                set(gca,'ytick',1:4:100)
                                                                set(gca,'yticklabel',identinittimesunique(1:4:end,:))
                                                            else
                                                                set(gca,'ytick',1:2:100)
                                                                set(gca,'yticklabel',identinittimesunique(1:2:end,:))
                                                            end                        
                                                            grid on
                                                            set(gca,'gridcolor','k','gridalpha',.4,'xgrid','off')
                                                            set(gca,'fontsize',20)      
                                                            hold off
                                                            box on
                                                            lh=legend(l,identexpshort(tmpu),'location','northeast');
															lh.FontSize=10;
                                                            set(gcf,'Units','inches');
                                                            a1Pos = get(gca,'Position');
                                                            set(gcf, 'InvertHardcopy', 'off')
                                                            set(gcf,'Units','inches');
                                                            screenposition = get(gcf,'Position');
                                                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                            set(gcf, 'InvertHardcopy', 'off')
                                                    text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');
                                                    tmpuv = size(tmpnm,1);                               
                                                    tmpphrase=[num2str(tmpuv),'/',num2str(size(identinittimesunique,1))];                    
                                                    if strat==1
                                                    text(0,1.03,['\textbf{CYCLES: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    else
                                                    text(0,1.03,['\textbf{SUBSET: ',upper(stname),' $\mid$ CYCLES: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    end
                                                    ax=gca;
                                                            box on
                                                            set(ax, 'Layer', 'bottom')
                                                            ax.LineWidth=1; 
                                                            set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                                                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .85, 0.96]); % maximize figure window
                                                            set(gca,'Color',[.9 .9 .9])
                                                            clear cntexp
                                                            for tmp=1:size(identexp,1)
                                                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,:,tmp)),2);
                                                            end        
                                                            % Mean Value            
                                                            tmpstr=['Mean: '];
                                                            tmpstrmean=nanmean(fsp2,1);
                                                            tmpstrmean=(find(tmpstrmean~=0));
                                                            if size(tmpstrmean,2)>0
                                                                for tmp=tmpstrmean
                                                                    if tmp==tmpstrmean(end)
                                                                        tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(fsp2(:,tmp)),2)),'%'];
                                                                    else
                                                                        tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(fsp2(:,tmp)),2)),'% \color[rgb]{0,0,0}| '];
                                                                    end
                                                                end
                                                            else
                                                                tmpstr=[''];
                                                            end
                                                            if sum(cntexp(:))==0 || sum(sum(~isnan(fsp2)))==0
                                                                tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                                set(tx, 'Layer', 'front')          
                                                            else
                                                                tx=text(0.98,0.06,tmpstr,'HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                                set(tx, 'Layer', 'front')
                                                            end   
                                                            b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                                                            yyaxis left
                                                            set(b,'YColor','none');
                                                            yyaxis right
                                                            set(b,'plotboxaspectratio',[1 1 1])
                                                            set(b,'Color','none');
                                                            set(b,'XColor','none');
                                                            set(b,'tickdir','both')
                                                            set(b,'YColor',[0 0 0]);
                                                            set(b,'xtick',[]);
                                                            ylim(b,[xstart-.5 size(BT_lat,1)+.5])
                                                            tmpxend=size(BT_lat,1);
                                                            if size(identinittimesunique,1)>50
                                                                set(b,'ytick',[1:4:100]); 
                                                            else
                                                                set(b,'ytick',[1:2:100]); 
                                                            end    
                                                            trkerr_exp_fcnt=zeros(1,tmpxend);            
                                                            trkerr_exp_fcnt1=zeros(1,tmpxend);            
                                                            trkerr_exp_fcnt2=zeros(1,tmpxend);
                                                            clear cntexp
                                                            for tmp=1:size(identexp,1)
                                                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,:,tmp)),2);
                                                            end  
                                                %             if size(identexp,1)==2
                                                %                 trkerr_exp_fcnt1(1:size(sum(~isnan(tmp_exp(:,:,1)),2),1))=sum(~isnan(tmp_exp(:,:,1)),2);            
                                                %                 trkerr_exp_fcnt2(1:size(sum(~isnan(tmp_exp(:,:,2)),2),1))=sum(~isnan(tmp_exp(:,:,2)),2);  
                                                %                 cnt=1;
                                                %                 for i=1:skip:size(trkerr_exp_fcnt1,2)
                                                %                     if trkerr_exp_fcnt1(i)==trkerr_exp_fcnt2(i)
                                                %                         b.YTickLabel{cnt} = num2str(trkerr_exp_fcnt1(i));
                                                %                     else
                                                %                         b.YTickLabel{cnt} = ['\color[rgb]{',num2str(identexpcolors(1,:)),'}',num2str(trkerr_exp_fcnt1(i)),'\color[rgb]{0,0,0}/\color[rgb]{',num2str(identexpcolors(2,:)),'}',num2str(trkerr_exp_fcnt2(i)),''];
                                                %                     end
                                                %                     cnt=cnt+1;
                                                %                 end
                                                %             elseif size(identexp,1)>2
                                                %                 maxmin=squeeze(sum(~isnan(tmp_exp(:,:,:)),2));         
                                                %                 first=min(maxmin');    
                                                %                 second=max(maxmin');
                                                %                 cnt=1;
                                                %                 for i=1:skip:size(maxmin,1)
                                                %                     if first(i)==second(i)
                                                %                         b.YTickLabel{cnt} = num2str(first(i));
                                                %                     else
                                                %                         b.YTickLabel{cnt} = [num2str(first(i)),'/',num2str(second(i)),''];
                                                %                     end
                                                %                     cnt=cnt+1;
                                                %                 end
                                                %             end
                                                            %if size(trkerr_gh,2)*3<max(0:size(1:skiptick:tmpxend,2):size(1:skiptick:tmpxend,2)*11)
                                                            %    trkerr_gh_fcnt(end-1:end)=0;
                                                            %end
                                                            set(gca,'fontsize',12)
                                                            xL=xlim;
                                                            yL=ylim;
                                                            ylabel({'# 6-h','fcsts'},'Position',[xL(2) yL(1)],'VerticalAlignment','top','HorizontalAlignment','center','Rotation',0); 
                                                            set(gca,'position',[spPos(1)+.08 spPos(2)+.05 spPos(3) spPos(4)])
                                                            screenposition = get(gcf,'Position');
                                                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                            set(gcf, 'InvertHardcopy', 'off')
                                                            % Create a text box at every Tick label position
                                                            maxmin=squeeze(sum(~isnan(tmp_exp(:,:,:)),2)); 
                                                            if size(identinittimesunique,1)>50
                                                                maxmin=maxmin(1:4:end,:); 
                                                            else
                                                                maxmin=maxmin(1:2:end,:); 
                                                            end                        
                                                            yTicks0 = get(gca, 'yticklabel');
                                                            yTicks = get(gca, 'ytick');
                                                            set(b,'yticklabels',[]);
                                                            minX =1;
                                                            HorizontalOffset1=0.03;
                                                            VerticalOffset = 0.2;
                                                            for xx = 1:size(yTicks0,1)
                                                                tmptxt0=maxmin(xx,:);
                                                                tmptxt1=[];
                                                                if size(unique(tmptxt0),2)==1
                                                                    tmptxt1=num2str(tmptxt0(1));
                                                                else
                                                                    for xxx=1:size(maxmin,2)
                                                                          if xxx==size(maxmin,2)
                                                                              tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(xxx,:)),'}',num2str(tmptxt0(xxx))];
                                                                          else
                                                                              tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(xxx,:)),'}',num2str(tmptxt0(xxx)),'\color[rgb]{0,0,0}/'];
                                                                          end
                                                                    end
                                                                end
                                                                text(minX+HorizontalOffset1,yTicks(xx),tmptxt1,'verticalalignment','middle','fontsize',12)
                                                            end
                                                            f = getframe(hfig);
                                                            imwrite(f.cdata,[identtrackint,'/',identn,'_',tmp_name,'_',stname,'_cycles.png'],'png');
                                                            close all
                                                end                                    
                                                % Create Graphics: trk, int, spd bias - bt-gh vs. bt-deny
                                                for plt=[2:18,21:23] % no across or along for bias since already in error
                                                    clear l cntexp
                                                    set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                                    hfig=figure;
                                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                                    ax1=subplot(3,4,[1:8]);
                                                    hold on
                                                    if plt==1
                                                         tmp_exp=trkerr_exp(:,1:skip:end,:);
                                                         tmp_name='trkbias';
                                                         tmp_title='Track Bias (km)';
                                                         tmp_ytitle='Bias (km)';
                                                    elseif plt==2
                                                        tmp_exp=interr_exp(:,1:skip:end,:);
                                                        tmp_name='presbias';
                                                        tmp_title='Pressure Bias (hPa)';
                                                        tmp_ytitle='Bias (hPa)';
                                                    elseif plt==3
                                                        tmp_exp=spderr_exp(:,1:skip:end,:);
                                                        tmp_name='spdbias';
                                                        tmp_title='Wind Speed Bias (kts)';
                                                        tmp_ytitle='Bias (kts)';
                                                     elseif plt==4
                                                        tmp_exp=ne34err_exp(:,1:skip:end,:);
                                                        tmp_name='ne34bias';
                                                        tmp_title='R34 NEQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==5
                                                        tmp_exp=se34err_exp(:,1:skip:end,:);
                                                        tmp_name='se34bias';
                                                        tmp_title='R34 SEQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==6
                                                        tmp_exp=sw34err_exp(:,1:skip:end,:);
                                                        tmp_name='sw34bias';
                                                        tmp_title='R34 SWQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==7
                                                        tmp_exp=nw34err_exp(:,1:skip:end,:);
                                                        tmp_name='nw34bias';
                                                        tmp_title='R34 NWQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==8
                                                        tmp_exp=ne50err_exp(:,1:skip:end,:);
                                                        tmp_name='ne50bias';
                                                        tmp_title='R50 NEQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==9
                                                        tmp_exp=se50err_exp(:,1:skip:end,:);
                                                        tmp_name='se50bias';
                                                        tmp_title='R50 SEQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==10
                                                        tmp_exp=sw50err_exp(:,1:skip:end,:);
                                                        tmp_name='sw50bias';
                                                        tmp_title='R50 SWQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==11
                                                        tmp_exp=nw50err_exp(:,1:skip:end,:);
                                                        tmp_name='nw50bias';
                                                        tmp_title='R50 NWQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==12
                                                        tmp_exp=ne64err_exp(:,1:skip:end,:);
                                                        tmp_name='ne64bias';
                                                        tmp_title='R64 NEQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==13
                                                        tmp_exp=se64err_exp(:,1:skip:end,:);
                                                        tmp_name='se64bias';
                                                        tmp_title='R64 SEQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==14
                                                        tmp_exp=sw64err_exp(:,1:skip:end,:);
                                                        tmp_name='sw64bias';
                                                        tmp_title='R64 SWQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==15
                                                        tmp_exp=nw64err_exp(:,1:skip:end,:);
                                                        tmp_name='nw64bias';
                                                        tmp_title='R64 NWQ Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-200 200];
                                                    elseif plt==16
                                                        tmp_exp=poerr_exp(:,1:skip:end,:);
                                                        tmp_name='pobias';
                                                        tmp_title='Outer Clsd Isbr Prs Bias (hPa)';
                                                        tmp_ytitle='Bias (hPa)';
                                                    elseif plt==17
                                                        tmp_exp=roerr_exp(:,1:skip:end,:);
                                                        tmp_name='robias';
                                                        tmp_title='Outer Clsd Isbr Rad Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                    elseif plt==18
                                                        tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                                        tmp_name='rmwbias';
                                                        tmp_title='RMW Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                    elseif plt==19
                                                        tmp_exp=ateerr_exp(:,1:skip:end,:);
                                                        tmp_name='atebias';
                                                        tmp_title='Along-Track Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-500 500];                
                                                    elseif plt==20
                                                        tmp_exp=xteerr_exp(:,1:skip:end,:);
                                                        tmp_name='xtebias';
                                                        tmp_title='Across-Track Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-500 500]; 
                                                    elseif plt==21
                                                        tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                                        tmp_name='34bias';
                                                        tmp_title='R34 Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-100 100];
                                                    elseif plt==22
                                                        tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                                        tmp_name='50bias';
                                                        tmp_title='R50 Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-100 100];
                                                    elseif plt==23
                                                        tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                                        tmp_name='64bias';
                                                        tmp_title='R64 Bias (km)';
                                                        tmp_ytitle='Bias (km)';
                                                        yrange=[-100 100];
                                                    end
                                                    tmp_exp0=tmp_exp;

                                                                                       % Strat
                                                    if strat==1
                                                        clear tmpyrb
                                                        tmpnm=identinittimesunique(~isnan(BT_cat1)==1,:);
                                                    elseif strat==2
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                             tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:)=NaN;
                                                        else
                                                             tmp_exp(BT_drops'==0,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_drops'==1 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==3
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_target;BT_target;BT_target;BT_target]==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_target'==0,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_target'==1 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==4 % TD
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1>=34,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_cat1<34,:);
                                                    elseif strat==5 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<34 & BT_cat1>=63,:,:)=NaN;
                                                        end 
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63,:);
                                                    elseif strat==6 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=95,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<63 & BT_cat1>=95,:,:)=NaN;
                                                        end                  
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95,:);
                                                    elseif strat==7 % MJ
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<96,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<96,:,:)=NaN;
                                                        end     
                                                        tmpnm=identinittimesunique(BT_cat1>=96,:);
                                                    elseif strat==8 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_lat1<30,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1>=30,:);
                                                    elseif strat==9 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_lat1>=30,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30,:);
                                                    elseif strat==15 %% TD strat obs only
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1>=34 & BT_drops'==0,:,:)=NaN;
                                                        end   
                                                        tmpnm=identinittimesunique(BT_cat1<34 & BT_drops'==1,:);
                                                    elseif strat==16 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<34 & BT_cat1>=63 & BT_drops'==0,:,:)=NaN;
                                                        end            
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63 & BT_drops'==1,:);
                                                    elseif strat==17 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=95 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<63 & BT_cat1>=95 & BT_drops'==0,:,:)=NaN;
                                                         end
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95 & BT_drops'==1,:);
                                                    elseif strat==18 % MJ
                                                        clear tmpyrb
                                                       if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<96 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                       else
                                                            tmp_exp(BT_cat1<96 & BT_drops'==0,:,:)=NaN;
                                                       end
                                                        tmpnm=identinittimesunique(BT_cat1>=96 & BT_drops'==1,:);
                                                    elseif strat==19 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_lat1<30 & BT_drops'==0,:,:)=NaN;
                                                         end   
                                                        tmpnm=identinittimesunique(BT_lat1>=30 & BT_drops'==1,:);
                                                    elseif strat==20 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:)=NaN;
                                                        else
                                                             tmp_exp(BT_lat1>=30 & BT_drops'==0,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30 & BT_drops'==1,:); 
                                                    elseif strat==21
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                             tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==1,:,:)=NaN;
                                                        else
                                                             tmp_exp(BT_drops'==1,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_drops'==0 & ~isnan(BT_cat1)==1,:);
                                                    elseif strat==22
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_target;BT_target;BT_target;BT_target]==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_target'==1,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_target'==0 & ~isnan(BT_cat1)==1,:);  
                                                    elseif strat==23 %% TD strat obs only
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=34 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1>=34 & BT_drops'==1,:,:)=NaN;
                                                        end   
                                                        tmpnm=identinittimesunique(BT_cat1<34 & BT_drops'==0,:);
                                                    elseif strat==24 % TS
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<34 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=63 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<34 & BT_cat1>=63 & BT_drops'==1,:,:)=NaN;
                                                        end            
                                                        tmpnm=identinittimesunique(BT_cat1>=34 & BT_cat1<63 & BT_drops'==0,:);
                                                    elseif strat==25 % MN
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<63 & [BT_cat1;BT_cat1;BT_cat1;BT_cat1]>=95 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_cat1<63 & BT_cat1>=95 & BT_drops'==1,:,:)=NaN;
                                                         end
                                                        tmpnm=identinittimesunique(BT_cat1>=63 & BT_cat1<95 & BT_drops'==0,:);
                                                    elseif strat==26 % MJ
                                                        clear tmpyrb
                                                       if plt>=21 && plt<=23
                                                            tmp_exp([BT_cat1;BT_cat1;BT_cat1;BT_cat1]<96 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                       else
                                                            tmp_exp(BT_cat1<96 & BT_drops'==1,:,:)=NaN;
                                                       end
                                                        tmpnm=identinittimesunique(BT_cat1>=96 & BT_drops'==0,:);
                                                    elseif strat==27 % N30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                            tmp_exp(BT_lat1<30 & BT_drops'==1,:,:)=NaN;
                                                         end   
                                                        tmpnm=identinittimesunique(BT_lat1>=30 & BT_drops'==0,:);
                                                    elseif strat==28 % S30
                                                        clear tmpyrb
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([BT_lat1;BT_lat1;BT_lat1;BT_lat1]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:)=NaN;
                                                        else
                                                             tmp_exp(BT_lat1>=30 & BT_drops'==1,:,:)=NaN;
                                                        end
                                                        tmpnm=identinittimesunique(BT_lat1<30 & BT_drops'==0,:);    
                                                    elseif strat==888
                                                        clear tmpyrb
                                                        numlist=[];
                                                        for ins=1:size(identnewsub,1)
                                                            tmp=identnewsub(ins,:);
                                                            for ins2=1:size(identinittimesunique,1)
                                                                if strcmp(identinittimesunique(ins2,:),tmp)==1
                                                                    numlist=[numlist ins2];
                                                                else
                                                                end
                                                            end
                                                        end
                                                        [a_ns,b_ns]=histcounts(numlist,.5:1:size(identinittimesunique,1)+.5);
                                                        numlist=a_ns';
                                                        numlist(numlist>0)=1;
                                                        if plt>=21 && plt<=23
                                                            tmp_exp([numlist;numlist;numlist;numlist]==0,:,:)=NaN;
                                                        else
                                                            tmp_exp(numlist==0,:,:)=NaN;
                                                        end                  
                                                        tmpnm=identinittimesunique(numlist==1,:);       
                                                    end

                                                    for tmp=1:size(identexp,1)
                                                        l(tmp)=plot(nanmean(tmp_exp(:,:,tmp),2),1:size(tmp_exp(:,:,tmp),1),'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2);
                                                    end
                                                    % Find which experiment to compare to
                                                    for tmp=1:size(identexp,1)
                                                        if strcmp(identexp(tmp),identexpsigimp)
                                                            tmpimp=tmp;
                                                        end
                                                    end       
                                                    plot(zeros(1,100),-10:89,'Color',[.5 .5 .5],'linewidth',1);
                                                    for tmp=1:size(identexp,1)
                                                        sigtest=ttestsc(abs(tmp_exp(:,:,tmp))',abs(tmp_exp(:,:,tmpimp))','alpha',.05);
                                                        sigtest_loc=find(sigtest==1);
                                                        sigtest_exp=nanmean(tmp_exp(sigtest_loc,:,:),2);
                                                        for tmpi=tmp
                                                            plot(sigtest_exp(:,:,tmpi),sigtest_loc,'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                                        end                
                                                        sigtest=ttestsc(abs(tmp_exp(:,:,tmp))',abs(tmp_exp(:,:,tmpimp))','alpha',.1);
                                                        sigtest_loc1=find(sigtest==1);
                                                        sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                                        sigtest_exp=nanmean(tmp_exp(sigtest_loc,:,:),2);
                                                        for tmpi=tmp
                                                            plot(sigtest_exp(:,:,tmpi),sigtest_loc,'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                                                        end
                                                    end  
                                                    set(gca,'plotboxaspectratio',[1 1 1])
                                                    ylabel('Cycle Initialization Time','fontsize',20)
                                                    xlabel(tmp_ytitle,'fontsize',20)
                                                    set(gca,'fontsize',20)
                                                    box on
                                                    xstart=1;
                            %                         for tmpxstart=1:size(BT_lat,1)
                            %                             if isnan(BT_lat(tmpxstart,1))==1
                            %                                 xstart=xstart+1;
                            %                             end
                            %                         end            
                                                    ylim([xstart-.5 size(BT_lat,1)+.5])
                                                    % YRANGE
                                                    clear allquad
                                                    allquad(1)=(max(max(nanmean((ne34err_exp(:,1:skip:end,:)),2))));
                                                    allquad(2)=(max(max(nanmean((se34err_exp(:,1:skip:end,:)),2))));
                                                    allquad(3)=(max(max(nanmean((nw34err_exp(:,1:skip:end,:)),2))));
                                                    allquad(4)=(max(max(nanmean((sw34err_exp(:,1:skip:end,:)),2))));
                                                    allquad(5)=(max(max(nanmean((ne50err_exp(:,1:skip:end,:)),2))));
                                                    allquad(6)=(max(max(nanmean((se50err_exp(:,1:skip:end,:)),2))));
                                                    allquad(7)=(max(max(nanmean((nw50err_exp(:,1:skip:end,:)),2))));
                                                    allquad(8)=(max(max(nanmean((sw50err_exp(:,1:skip:end,:)),2))));
                                                    allquad(9)=(max(max(nanmean((ne64err_exp(:,1:skip:end,:)),2))));
                                                    allquad(10)=(max(max(nanmean((se64err_exp(:,1:skip:end,:)),2))));
                                                    allquad(11)=(max(max(nanmean((nw64err_exp(:,1:skip:end,:)),2))));
                                                    allquad(12)=(max(max(nanmean((sw64err_exp(:,1:skip:end,:)),2))));
                                                    allquadmax=max(max(max(allquad)));
                                                    allquadmin=min(min(min(allquad)));
                                                    tmpvalq=max(abs(allquadmin),abs(allquadmax));
                                                    if isnan(tmpvalq)==1
                                                        tmpvalq=0;
                                                    end
                                                    if numel(num2str(tmpvalq))==3
                                                        addfacq=100;
                                                    elseif numel(num2str(tmpvalq))==2
                                                        addfacq=20;
                                                    else
                                                        addfacq=20;
                                                    end
                                                    if numel(num2str(round(max(max(nanmean((tmp_exp0),2))))))==3
                                                        addfac=100;
                                                    elseif numel(num2str(round(max(max(nanmean((tmp_exp0),2))))))==2
                                                        addfac=20;
                                                    else
                                                        addfac=20;
                                                    end
                                                    if plt<=3 || (plt>=16 && plt<=18) % 0-end
                                                        tmpmin=min(min(nanmean((tmp_exp0),2)));
                                                        tmpmax=max(max(nanmean((tmp_exp0),2)));
                                                        tmpval=max(abs(tmpmin),abs(tmpmax));
                                                        if isnan(tmpval)==1
                                                            tmpval=0;
                                                        end
                                                        yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];                                
                                                    elseif plt==19 || plt==20 % -end end 
                                                        tmpmin=min(min(nanmean((tmp_exp0),2)));
                                                        tmpmax=max(max(nanmean((tmp_exp0),2)));
                                                        tmpval=max(abs(tmpmin),abs(tmpmax));
                                                        if isnan(tmpval)==1
                                                            tmpval=0;
                                                        end
                                                        yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];                
                                                    elseif (plt>=4 && plt<=15) || plt>=21%quad
                                                        yrange=[-round((tmpvalq+addfacq)/10)*10 round((tmpvalq+addfacq)/10)*10];
                                                    end
                %                                             if plt==1
                %                                                 for lo=1:50
                %                                                     if max(nanmean(tmp_exp,2))>100*lo
                %                                                         xlim([-200-100*lo 200+100*lo])
                %                                                     end
                %                                                 end
                %                                             elseif plt==2 || plt==3
                %                                                 for lo=1:2:50
                %                                                     if max(nanmean(tmp_exp,2))>5*lo
                %                                                         xlim([-10-5*(lo+1) 10+5*(lo+1)])
                %                                                     end
                %                                                 end            
                %                                             else
                                                                xlim(yrange)
                %                                             end
                                                            if size(identinittimesunique,1)>50
                                                                set(gca,'ytick',1:4:100)
                                                                set(gca,'yticklabel',identinittimesunique(1:4:end,:))
                                                            else
                                                                set(gca,'ytick',1:2:100)
                                                                set(gca,'yticklabel',identinittimesunique(1:2:end,:))
                                                            end  
                                                            grid on
                                                            set(gca,'gridcolor','k','gridalpha',.4,'xgrid','off')
                                                            set(gca,'fontsize',20)      
                                                            hold off
                                                            box on
                                                            lh=legend(l,identexpshort,'location','northeast');
															lh.FontSize=10;
                                                            set(gcf,'Units','inches');
                                                            a1Pos = get(gca,'Position');
                                                            set(gcf, 'InvertHardcopy', 'off')
                                                            set(gcf,'Units','inches');
                                                            screenposition = get(gcf,'Position');
                                                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                            set(gcf, 'InvertHardcopy', 'off')
                                                    text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    text(1,1.03,['\textbf{',upper(identhwrf(end-2:end)),' (',identn(1:end-2),')}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color','k','units','normalized');                         
                                                    tmpuv = size(tmpnm,1);                               
                                                    tmpphrase=[num2str(tmpuv),'/',num2str(size(identinittimesunique,1))];                    
                                                    if strat==1
                                                    text(0,1.03,['\textbf{CYCLES: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    else
                                                    text(0,1.03,['\textbf{SUBSET: ',upper(stname),' $\mid$ CYCLES: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                                    end
                                                    ax=gca;
                                                            box on
                                                            set(ax, 'Layer', 'bottom')
                                                            ax.LineWidth=1; 
                                                            set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                                                            set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .85, 0.96]); % maximize figure window
                                                            set(gca,'Color',[.9 .9 .9])
                                                            clear cntexp
                                                            for tmp=1:size(identexp,1)
                                                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,:,tmp)),2);
                                                            end
                                                            if sum([cntexp(:)])==0
                                                                tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                                set(tx, 'Layer', 'front')
                                                            else   
                                                                if plt==1 || plt>=4 && plt<=15 || plt==17 || plt==18 || plt>20
                                                                     tx=text(0.02,0.06,'Too Small','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                                     tx=text(0.98,0.06,'Too Large','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                                     set(tx, 'Layer', 'front')  
                                                                elseif plt==2 || plt==16
                                                                     tx=text(0.02,0.06,'Too Low','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                                     tx=text(0.98,0.06,'Too High','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                                     set(tx, 'Layer', 'front')  
                                                                elseif plt==3
                                                                     tx=text(0.02,0.06,'Too Slow','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                                     tx=text(0.98,0.06,'Too Fast','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                                     set(tx, 'Layer', 'front') 
                                                                elseif plt==19
                                                                     tx=text(0.02,0.06,'Slower than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                                     tx=text(0.98,0.06,'Faster than BT','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                                     set(tx, 'Layer', 'front')            
                                                                elseif plt==20
                                                                     tx=text(0.02,0.06,'Left of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                                     tx=text(0.98,0.06,'Right of BT','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                                                     set(tx, 'Layer', 'front')            
                                                                end   
                                                            end
                                                            b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                                                            yyaxis left
                                                            set(b,'YColor','none');
                                                            yyaxis right
                                                            set(b,'plotboxaspectratio',[1 1 1])
                                                            set(b,'Color','none');
                                                            set(b,'XColor','none');
                                                            set(b,'tickdir','both')
                                                            set(b,'YColor',[0 0 0]);
                                                            set(b,'xtick',[]);
                                                            ylim(b,[xstart-.5 size(BT_lat,1)+.5])
                                                            tmpxend=size(BT_lat,1);
                                                            if size(identinittimesunique,1)>50
                                                                set(b,'ytick',[1:4:100]); 
                                                            else
                                                                set(b,'ytick',[1:2:100]); 
                                                            end  
                                                            trkerr_exp_fcnt=zeros(1,tmpxend);            
                                                            trkerr_exp_fcnt1=zeros(1,tmpxend);            
                                                            trkerr_exp_fcnt2=zeros(1,tmpxend);
                                                            clear cntexp
                                                            for tmp=1:size(identexp,1)
                                                                cntexp(:,tmp)=sum(~isnan(tmp_exp(:,:,tmp)),2);
                                                            end  
                                                %             if size(identexp,1)==2
                                                %                 trkerr_exp_fcnt1(1:size(sum(~isnan(tmp_exp(:,:,1)),2),1))=sum(~isnan(tmp_exp(:,:,1)),2);            
                                                %                 trkerr_exp_fcnt2(1:size(sum(~isnan(tmp_exp(:,:,2)),2),1))=sum(~isnan(tmp_exp(:,:,2)),2);  
                                                %                 cnt=1;
                                                %                 for i=1:skip:size(trkerr_exp_fcnt1,2)
                                                %                     if trkerr_exp_fcnt1(i)==trkerr_exp_fcnt2(i)
                                                %                         b.YTickLabel{cnt} = num2str(trkerr_exp_fcnt1(i));
                                                %                     else
                                                %                         b.YTickLabel{cnt} = ['\color[rgb]{',num2str(identexpcolors(1,:)),'}',num2str(trkerr_exp_fcnt1(i)),'\color[rgb]{0,0,0}/\color[rgb]{',num2str(identexpcolors(2,:)),'}',num2str(trkerr_exp_fcnt2(i)),''];
                                                %                     end
                                                %                     cnt=cnt+1;
                                                %                 end
                                                %             elseif size(identexp,1)>2
                                                %                 maxmin=squeeze(sum(~isnan(tmp_exp(:,:,:)),2));         
                                                %                 first=min(maxmin');    
                                                %                 second=max(maxmin');
                                                %                 cnt=1;
                                                %                 for i=1:skip:size(maxmin,1)
                                                %                     if first(i)==second(i)
                                                %                         b.YTickLabel{cnt} = num2str(first(i));
                                                %                     else
                                                %                         b.YTickLabel{cnt} = [num2str(first(i)),'/',num2str(second(i)),''];
                                                %                     end
                                                %                     cnt=cnt+1;
                                                %                 end
                                                %             end
                                                            %if size(trkerr_gh,2)*3<max(0:size(1:skiptick:tmpxend,2):size(1:skiptick:tmpxend,2)*11)
                                                            %    trkerr_gh_fcnt(end-1:end)=0;
                                                            %end
                                                            set(gca,'fontsize',12)
                                                            xL=xlim;
                                                            yL=ylim;
                                                            ylabel({'# 6-h','fcsts'},'Position',[xL(2) yL(1)],'VerticalAlignment','top','HorizontalAlignment','center','Rotation',0); 
                                                            set(gca,'position',[spPos(1)+.08 spPos(2)+.05 spPos(3) spPos(4)])
                                                            screenposition = get(gcf,'Position');
                                                            set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                                            set(gcf, 'InvertHardcopy', 'off')            
                                                            % Create a text box at every Tick label position
                                                            maxmin=squeeze(sum(~isnan(tmp_exp(:,:,:)),2)); 
                                                            if size(identinittimesunique,1)>50
                                                                maxmin=maxmin(1:4:end,:); 
                                                            else
                                                                maxmin=maxmin(1:2:end,:); 
                                                            end
                                                            yTicks0 = get(gca, 'yticklabel');
                                                            yTicks = get(gca, 'ytick');
                                                            set(b,'yticklabels',[]);
                                                            minX =1;
                                                            HorizontalOffset1=0.03;
                                                            VerticalOffset = 0.2;
                                                            for xx = 1:size(yTicks0,1)
                                                                tmptxt0=maxmin(xx,:);
                                                                tmptxt1=[];
                                                                if size(unique(tmptxt0),2)==1
                                                                    tmptxt1=num2str(tmptxt0(1));
                                                                else
                                                                    for xxx=1:size(maxmin,2)
                                                                          if xxx==size(maxmin,2)
                                                                              tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(xxx,:)),'}',num2str(tmptxt0(xxx))];
                                                                          else
                                                                              tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(xxx,:)),'}',num2str(tmptxt0(xxx)),'\color[rgb]{0,0,0}/'];
                                                                          end
                                                                    end
                                                                end
                                                                text(minX+HorizontalOffset1,yTicks(xx),tmptxt1,'verticalalignment','middle','fontsize',12)
                                                            end
                                                            f = getframe(hfig);
                                                            imwrite(f.cdata,[identtrackint,'/',identn,'_',tmp_name,'_',stname,'_cycles.png'],'png');
                                                            close all
                                                end

                                            end
                                        end
                                    end

                                    if identconv==1 || identsatobs==1
                                        BT_drops=identdropcyc;
                                    else
                                        BT_drops=[];
                                    end
                                    save([identout,'RESULTS/',identfold,'VERIFICATION/',identremovename,'/',ident(1:2),'/',identn,'/',identn,'_latlon.mat'],'BT*','EXP*','identinittimesunique');
                                    save([identout,'RESULTS/',identfold,'VERIFICATION/',identremovename,'/',ident(1:2),'/',identn,'/',identn,'_errors.mat'],'*err_exp','trkerr_exp_fcnt','trkerr_sz')       
                                end
                            end
                        end
                        clearvars -except identbasinmodel identsatobs identgraphicssat identsatid identsatname identindivch identchannel identindivstorm identcomposite identstormsdone identconvtype identconvcolors identconvlegend identns* identnewsub identgraphicsconv identgraphicsbycycle identconvid  stormsdone identremovename yearsdone BT* EXP* ident* skip* spPos clPos ateerr_exp xteerr_exp
                        clearvars -except identbasinmodel identsatobs identgraphicssat identsatid identsatname identindivch identchannel identindivstorm identcomposite identstormsdone identconvtype identconvcolors identconvlegend identns* identnewsub identgraphicsconv identgraphicsbycycle identconvid  ident* skip* stormsdone yearsdone
                end

                clearvars -except identbasinmodel identsatobs identgraphicssat identsatid identsatname identindivch identchannel identindivstorm identcomposite identstormsdone identconvtype identconvcolors identconvlegend identns* identnewsub identgraphicsconv identgraphicsbycycle identconvid  stormsdone identremovename yearsdone identdiff identremoveex identremoveinv identcycles identmaxfhr identlevels identexp identexpshort identexpsigimp identexpsigimpshort identexpcolors identscrub identgroovpr identout identconv
            end
        end
    end  
    
    %% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%
    %% This script sets up your composite case. %%
    %% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%
    if identcomposite==1
        identfold='';
        for i=1:size(identexp,1)
            tmp=identexpshort{i};
            if i==size(identexp,1)
                identfold=strcat(identfold,tmp,'/');
            else
                identfold=strcat(identfold,tmp,'_');
            end
        end

        %% Model outputs at 3 h, but to compare errors to BT make 6 h!
        skip=2;                                                    % 6 h res | skip=1 is 3 h
        skiphr=6;                                                  % 6 h res | skiphr=3 is 3 h res
        skiptick=2;                                                % 6 h res | skiptick=4 is 3 h res
        skipfct=4;                                                 % 6 h res | skipfct=4 is still 3 h res

        %% Add paths to scripts
        addpath([identout,'scripts'])

        %% Get the storms that are part of the experiment
        identdr5=dir([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/*']);
        identdr5=unique({identdr5.name});
        identdr5=identdr5(3:end);

for stmdn=1:size(stormsdone,2)    
            %% %%%%%%%%%%%%%%%% %%
            %% Set Up the Storm %%
            %% %%%%%%%%%%%%%%%% %%
            identtmp1=stormsdone{stmdn};
            identtmp2=yearsdone(stmdn,:);
            identtmp3=identtmp1(3:4);
            if strcmp(identtmp3,'AL')==1
                identtmp4='l';
            elseif strcmp(identtmp3,'EP')==1
                identtmp4='e';
            elseif strcmp(identtmp3,'WP')==1
                identtmp4='w';
            elseif strcmp(identtmp3,'CP')==1
                identtmp4='c';
            end
            addpath([identout,'scripts'])
            identbdecks=[identout,'bdeck/'];

            for bdecks=1
                filename = [identbdecks,'b',lower(identtmp1(3:4)),identtmp1(1:2),yearsdone(stmdn,:),'.dat'];
                [identhemi,DATEall,BASINall,NAMEall,CATall,LATall,POall,SE50all,LONall,PRESSall,SE64all,NE34all,RAD34all,SPEEDall,NE50all,RAD50all,SW34all,NE64all,RAD64all,SW50all,NW34all,RMWall,SW64all,NW50all,ROall,NW64all,SE34all,FHRall]=atcf(filename,1);
            end
            identn=unique(NAMEall,'rows','stable');
            identn=identn(end,:);
            identn=identn(isletter(identn));
            %% Set Name
            ident=[identtmp1(3:4),identtmp1(1:2),identtmp2];      % basin, ID, and year (e.g., AL092016)
            identn=[identn,identtmp2(3:4)];                       % NAMEYY (e.g., HERMINE16)
            identhwrf=[lower(identn(1:end-2)),lower(identtmp1(1:2)),lower(identtmp4)]; 
            stormsdone{stmdn}=identhwrf;
        end
        if size(stormsdone,2)>1
            %% Stats Composite
            for basinloop=1:size(identdr5,2) 
                delete([identout,'RESULTS/',identfold,'VERIFICATION/',identremovename,'/',identdr5{basinloop},'/COMP*']);
                delete([identout,'RESULTS/',identfold,'VERIFICATION/',identremovename,'/',identdr5{basinloop},'/*.txt']);
                identdr=dir([identout,'RESULTS/',identfold,'VERIFICATION/',identremovename,'/',identdr5{basinloop},'/*']);
                identdr=unique({identdr.name});
                identdr=identdr(3:end);

                % Deal with storms that aren't finished or incomplete
                cnt=1;
                for i=1:size(identdr,2)    
                    if isfile([identout,'RESULTS/',identfold,'/','VERIFICATION/',identremovename,'/',identdr5{basinloop},'/',identdr{i},'/',identdr{i},'_errors.mat'])==0
                        tmprm(cnt)=i;
                        cnt=cnt+1;
                    end
                end

                if exist('tmprm','var')==1
                    identdr(tmprm)=[];
                end

                if isempty(identdr)==1
                    disp(['There are no storms for BASIN: ',identdr5{basinloop},' where NHC verification was able to be applied...no composite graphics for this basin are generated!'])
                else
                    % Initialize arrays
                    BT_name_all     =   {};
                    BT_target_all   =   [];
                    BT_drops_all    =   [];
                    BT_year_all    =   [];
                    BT_date_all     =   [];
                    BT_storm_all    =   [];
                    BT_lat_all      =   [];
                    BT_lon_all      =   [];
                    BT_maxspd_all   =	[];
                    BT_pres_all      =   [];                           
                    BT_rmw_all=[];                                                        
                    BT_po_all=[];                                                        
                    BT_ro_all=[];                                                        
                    BT_ne34_all=[];                                                        
                    BT_se34_all=[];                                                        
                    BT_nw34_all=[];                                                        
                    BT_sw34_all=[];                                                        
                    BT_ne50_all=[];                                                        
                    BT_se50_all=[];                                                        
                    BT_nw50_all=[];                                                        
                    BT_sw50_all=[];
                    BT_ne64_all=[];                                                        
                    BT_se64_all=[];                                                        
                    BT_nw64_all=[];                                                        
                    BT_sw64_all=[];
                    EXP_lat_all      =   [];
                    EXP_lon_all      =   [];
                    EXP_maxspd_all   =	[];
                    EXP_pres_all      =   [];                           
                    EXP_rmw_all=[];                                                        
                    EXP_po_all=[];                                                        
                    EXP_ro_all=[];                                                        
                    EXP_ne34_all=[];                                                        
                    EXP_se34_all=[];                                                        
                    EXP_nw34_all=[];                                                        
                    EXP_sw34_all=[];                                                        
                    EXP_ne50_all=[];                                                        
                    EXP_se50_all=[];                                                        
                    EXP_nw50_all=[];                                                        
                    EXP_sw50_all=[];
                    EXP_ne64_all=[];                                                        
                    EXP_se64_all=[];                                                        
                    EXP_nw64_all=[];                                                        
                    EXP_sw64_all=[];
                    interr_exp_all	=	[];
                    ne34err_exp_all	=	[];
                    ne50err_exp_all	=	[];
                    ne64err_exp_all	=	[];
                    nw34err_exp_all	=	[];
                    nw50err_exp_all	=	[];
                    nw64err_exp_all	=	[];
                    poerr_exp_all	=	[];
                    rmwerr_exp_all	=	[];
                    roerr_exp_all	=	[];
                    se34err_exp_all	=	[];
                    se50err_exp_all	=	[];
                    se64err_exp_all	=	[];
                    spderr_exp_all	=	[];
                    sw34err_exp_all	=	[];
                    sw50err_exp_all	=	[];
                    sw64err_exp_all	=	[];
                    trkerr_exp_all	=	[];
                    ateerr_exp_all	=	[];
                    xteerr_exp_all	=	[];

                    interr_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    ne34err_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    ne50err_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    ne64err_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    nw34err_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    nw50err_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    nw64err_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    poerr_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    rmwerr_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    roerr_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    se34err_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    se50err_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    se64err_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    spderr_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    sw34err_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    sw50err_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    sw64err_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    trkerr_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    ateerr_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));
                    xteerr_exp_stm = nan(200,identmaxfhr,size(identexp,1),size(identdr,2));

                    % Concatenate all storms together
                    cntcan=1;
                    cntst=1;
                    for i=1:size(identdr,2)    
                        if isfile([identout,'RESULTS/',identfold,'/','VERIFICATION/',identremovename,'/',identdr5{basinloop},'/',identdr{i},'/',identdr{i},'_errors.mat'])==1   
                            load([identout,'RESULTS/',identfold,'/','VERIFICATION/',identremovename,'/',identdr5{basinloop},'/',identdr{i},'/',identdr{i},'_errors.mat'])
                            load([identout,'RESULTS/',identfold,'/','VERIFICATION/',identremovename,'/',identdr5{basinloop},'/',identdr{i},'/',identdr{i},'_latlon.mat'])        
                            BT_drops_all=cat(2,BT_drops_all,BT_drops);  % only cycles that had conventional obs   
                            btd=find(BT_drops==1);
                            if isempty(btd)==1 && identconv==1 % if the storm has conventional obs...           
                                keepstm(cntst)=NaN;
                                cntst=cntst+1;
                            elseif isempty(btd)==1 && identconv==0 % if conventional obs are turned off...
                                keepstm(cntst)=i;
                                cntst=cntst+1;
                            else
                                BT_drops(btd(1):end)=1; % from first time conventional obs detected in storm through end of storm
                                [identdr{i},' ',num2str(sum(BT_drops(isnan(BT_lat(:,1))==0)))]
                                keepstm(cntst)=i; % save storm index since it has conventional obs
                                cntst=cntst+1;
                            end
                            tmpyr=identdr{i};
                            for nmal=1:size(BT_lat,1)
                                BT_name_all=cat(2,BT_name_all,tmpyr);
                            end
                            BT_date_all=cat(1,BT_date_all,identinittimesunique);
                            BT_year_all=cat(1,BT_year_all,repmat(str2num(tmpyr(end-1:end)),size(BT_lat)));
                            BT_storm_all=cat(1,BT_storm_all,repmat(i,size(BT_lat)));
                            BT_target_all=cat(2,BT_target_all,BT_drops);        
                            BT_maxspd_all=cat(1,BT_maxspd_all,BT_maxspd);
                            BT_lat_all=cat(1,BT_lat_all,BT_lat);
                            BT_lon_all=cat(1,BT_lon_all,BT_lon);
                            BT_pres_all=cat(1,BT_pres_all,BT_minpres);                            
                            BT_rmw_all=cat(1,BT_rmw_all,BT_rmw);                                                        
                            BT_po_all=cat(1,BT_po_all,BT_po);                                                        
                            BT_ro_all=cat(1,BT_ro_all,BT_ro);                                                        
                            BT_ne34_all=cat(1,BT_ne34_all,BT_ne34);                                                        
                            BT_se34_all=cat(1,BT_se34_all,BT_se34);                                                        
                            BT_nw34_all=cat(1,BT_nw34_all,BT_nw34);                                                        
                            BT_sw34_all=cat(1,BT_sw34_all,BT_sw34);                                                        
                            BT_ne50_all=cat(1,BT_ne50_all,BT_ne50);                                                        
                            BT_se50_all=cat(1,BT_se50_all,BT_se50);                                                        
                            BT_nw50_all=cat(1,BT_nw50_all,BT_nw50);                                                        
                            BT_sw50_all=cat(1,BT_sw50_all,BT_sw50);
                            BT_ne64_all=cat(1,BT_ne64_all,BT_ne64);                                                        
                            BT_se64_all=cat(1,BT_se64_all,BT_se64);                                                        
                            BT_nw64_all=cat(1,BT_nw64_all,BT_nw64);                                                        
                            BT_sw64_all=cat(1,BT_sw64_all,BT_sw64);
                            EXP_maxspd_all=cat(1,EXP_maxspd_all,EXP_maxspd);
                            EXP_lat_all=cat(1,EXP_lat_all,EXP_lat);
                            EXP_lon_all=cat(1,EXP_lon_all,EXP_lon);
                            EXP_pres_all=cat(1,EXP_pres_all,EXP_minpres);                            
                            EXP_rmw_all=cat(1,EXP_rmw_all,EXP_rmw);                                                        
                            EXP_po_all=cat(1,EXP_po_all,EXP_po);                                                        
                            EXP_ro_all=cat(1,EXP_ro_all,EXP_ro);                                                        
                            EXP_ne34_all=cat(1,EXP_ne34_all,EXP_ne34);                                                        
                            EXP_se34_all=cat(1,EXP_se34_all,EXP_se34);                                                        
                            EXP_nw34_all=cat(1,EXP_nw34_all,EXP_nw34);                                                        
                            EXP_sw34_all=cat(1,EXP_sw34_all,EXP_sw34);                                                        
                            EXP_ne50_all=cat(1,EXP_ne50_all,EXP_ne50);                                                        
                            EXP_se50_all=cat(1,EXP_se50_all,EXP_se50);                                                        
                            EXP_nw50_all=cat(1,EXP_nw50_all,EXP_nw50);                                                        
                            EXP_sw50_all=cat(1,EXP_sw50_all,EXP_sw50);
                            EXP_ne64_all=cat(1,EXP_ne64_all,EXP_ne64);                                                        
                            EXP_se64_all=cat(1,EXP_se64_all,EXP_se64);                                                        
                            EXP_nw64_all=cat(1,EXP_nw64_all,EXP_nw64);                                                        
                            EXP_sw64_all=cat(1,EXP_sw64_all,EXP_sw64);
                            interr_exp_all=cat(1,interr_exp_all,interr_exp);
                            ne34err_exp_all=cat(1,ne34err_exp_all,ne34err_exp);
                            ne50err_exp_all=cat(1,ne50err_exp_all,ne50err_exp);
                            ne64err_exp_all=cat(1,ne64err_exp_all,ne64err_exp);
                            nw34err_exp_all=cat(1,nw34err_exp_all,nw34err_exp);
                            nw50err_exp_all=cat(1,nw50err_exp_all,nw50err_exp);
                            nw64err_exp_all=cat(1,nw64err_exp_all,nw64err_exp);
                            poerr_exp_all=cat(1,poerr_exp_all,poerr_exp);
                            rmwerr_exp_all=cat(1,rmwerr_exp_all,rmwerr_exp);
                            roerr_exp_all=cat(1,roerr_exp_all,roerr_exp);
                            se34err_exp_all=cat(1,se34err_exp_all,se34err_exp);
                            se50err_exp_all=cat(1,se50err_exp_all,se50err_exp);
                            se64err_exp_all=cat(1,se64err_exp_all,se64err_exp);
                            spderr_exp_all=cat(1,spderr_exp_all,spderr_exp);
                            sw34err_exp_all=cat(1,sw34err_exp_all,sw34err_exp);
                            sw50err_exp_all=cat(1,sw50err_exp_all,sw50err_exp);
                            sw64err_exp_all=cat(1,sw64err_exp_all,sw64err_exp);
                            trkerr_exp_all=cat(1,trkerr_exp_all,trkerr_exp);
                            xteerr_exp_all=cat(1,xteerr_exp_all,xteerr_exp);
                            ateerr_exp_all=cat(1,ateerr_exp_all,ateerr_exp);      
                            interr_exp_stm(1:size(interr_exp,1),:,:,cntcan)=(abs(interr_exp));
                            ne34err_exp_stm(1:size(interr_exp,1),:,:,cntcan)=(abs(ne34err_exp));
                            ne50err_exp_stm(1:size(interr_exp,1),:,:,cntcan)=(abs(ne50err_exp));
                            ne64err_exp_stm(1:size(interr_exp,1),:,:,cntcan)=(abs(ne64err_exp));
                            nw34err_exp_stm(1:size(interr_exp,1),:,:,cntcan)=(abs(nw34err_exp));
                            nw50err_exp_stm(1:size(interr_exp,1),:,:,cntcan)=(abs(nw50err_exp));
                            nw64err_exp_stm(1:size(interr_exp,1),:,:,cntcan)=(abs(nw64err_exp));
                            poerr_exp_stm(1:size(interr_exp,1),:,:,cntcan)=(abs(poerr_exp));
                            rmwerr_exp_stm(1:size(interr_exp,1),:,:,cntcan)=(abs(rmwerr_exp));
                            roerr_exp_stm(1:size(interr_exp,1),:,:,cntcan)=(abs(roerr_exp));
                            se34err_exp_stm(1:size(interr_exp,1),:,:,cntcan)=(abs(se34err_exp));
                            se50err_exp_stm(1:size(interr_exp,1),:,:,cntcan)=(abs(se50err_exp));
                            se64err_exp_stm(1:size(interr_exp,1),:,:,cntcan)=(abs(se64err_exp));
                            spderr_exp_stm(1:size(interr_exp,1),:,:,cntcan)=(abs(spderr_exp));
                            sw34err_exp_stm(1:size(interr_exp,1),:,:,cntcan)=(abs(sw34err_exp));
                            sw50err_exp_stm(1:size(interr_exp,1),:,:,cntcan)=(abs(sw50err_exp));
                            sw64err_exp_stm(1:size(interr_exp,1),:,:,cntcan)=(abs(sw64err_exp));
                            trkerr_exp_stm(1:size(interr_exp,1),:,:,cntcan)=(abs(trkerr_exp));
                            xteerr_exp_stm(1:size(interr_exp,1),:,:,cntcan)=((xteerr_exp));
                            ateerr_exp_stm(1:size(interr_exp,1),:,:,cntcan)=((ateerr_exp));
                            cntcan=cntcan+1;
                        end

                    end
                    % Reassign variables for easy plotting
                    BT_date=BT_date_all;
                    BT_name=BT_name_all;
                    BT_drops=BT_drops_all;
                    BT_target=BT_target_all;
                    BT_year=BT_year_all;
                    BT_storm=BT_storm_all;
                    BT_lat=BT_lat_all;
                    BT_lon=BT_lon_all;
                    BT_cat=BT_maxspd_all;
                    BT_pres=BT_pres_all;                    
                    BT_rmw=BT_rmw_all;                                                        
                    BT_po=BT_po_all;                                                        
                    BT_ro=BT_ro_all;                                                        
                    BT_ne34=BT_ne34_all;                                                        
                    BT_se34=BT_se34_all;                                                        
                    BT_nw34=BT_nw34_all;                                                        
                    BT_sw34=BT_sw34_all;                                                        
                    BT_ne50=BT_ne50_all;                                                        
                    BT_se50=BT_se50_all;                                                        
                    BT_nw50=BT_nw50_all;                                                        
                    BT_sw50=BT_sw50_all;
                    BT_ne64=BT_ne64_all;                                                        
                    BT_se64=BT_se64_all;                                                        
                    BT_nw64=BT_nw64_all;                                                        
                    BT_sw64=BT_sw64_all; 
                    EXP_lat=EXP_lat_all;
                    EXP_lon=EXP_lon_all;
                    EXP_cat=EXP_maxspd_all;
                    EXP_pres=EXP_pres_all;                    
                    EXP_rmw=EXP_rmw_all;                                                        
                    EXP_po=EXP_po_all;                                                        
                    EXP_ro=EXP_ro_all;                                                        
                    EXP_ne34=EXP_ne34_all;                                                        
                    EXP_se34=EXP_se34_all;                                                        
                    EXP_nw34=EXP_nw34_all;                                                        
                    EXP_sw34=EXP_sw34_all;                                                        
                    EXP_ne50=EXP_ne50_all;                                                        
                    EXP_se50=EXP_se50_all;                                                        
                    EXP_nw50=EXP_nw50_all;                                                        
                    EXP_sw50=EXP_sw50_all;
                    EXP_ne64=EXP_ne64_all;                                                        
                    EXP_se64=EXP_se64_all;                                                        
                    EXP_nw64=EXP_nw64_all;                                                        
                    EXP_sw64=EXP_sw64_all;                     
                    interr_exp=interr_exp_all;
                    ne34err_exp=ne34err_exp_all;
                    ne50err_exp=ne50err_exp_all;
                    ne64err_exp=ne64err_exp_all;
                    nw34err_exp=nw34err_exp_all;
                    nw50err_exp=nw50err_exp_all;
                    nw64err_exp=nw64err_exp_all;
                    poerr_exp=poerr_exp_all;
                    rmwerr_exp=rmwerr_exp_all;
                    roerr_exp=roerr_exp_all;
                    se34err_exp=se34err_exp_all;
                    se50err_exp=se50err_exp_all;
                    se64err_exp=se64err_exp_all;
                    spderr_exp=spderr_exp_all;
                    sw34err_exp=sw34err_exp_all;
                    sw50err_exp=sw50err_exp_all;
                    sw64err_exp=sw64err_exp_all;
                    trkerr_exp=trkerr_exp_all;
                    ateerr_exp=ateerr_exp_all;
                    xteerr_exp=xteerr_exp_all;
                    clear *all

                    % Basin Values for Subsets
                    BT_dropsB=BT_drops;                   
                    for i=1:size(BT_drops,2)
                        if BT_drops(i)==1
                            tmpdate=BT_date(i,:);
                            tmpdatematch=find(str2num(BT_date)==str2num(tmpdate));
                            BT_dropsB(tmpdatematch)=1;
                        end
                    end

                    % Basin Values for Subsets
                    BT_dropsI=zeros(1,size(BT_drops,2));
                    BT_dropsT=zeros(1,size(BT_drops,2));
                    for i=1:size(BT_drops,2)
                        if BT_drops(i)==1
                            tmpdate=BT_date(i,:);
                            tmpdatematch=find(str2num(BT_date)==str2num(tmpdate));                           
                                if sum(BT_drops(tmpdatematch))>1
                                    BT_dropsT(tmpdatematch(BT_drops(tmpdatematch)==1))=1;
                                elseif sum(BT_drops(tmpdatematch))==1
                                    BT_dropsI(i)=1;
                                end
                        end
                    end

                    % Basin Values for Subsets
                    BT_targetI=zeros(1,size(BT_target,2));
                    BT_targetT=zeros(1,size(BT_target,2));
                    for i=1:size(BT_target,2)
                        if BT_target(i)==1
                            tmpdate=BT_date(i,:);
                            tmpdatematch=find(str2num(BT_date)==str2num(tmpdate));                           
                                if sum(BT_target(tmpdatematch))>1
                                    BT_targetT(tmpdatematch(BT_target(tmpdatematch)==1))=1;
                                elseif sum(BT_target(tmpdatematch))==1
                                    BT_targetI(i)=1;
                                end
                        end
                    end
                    
                    BT_targetB=BT_target;
                    for i=1:size(BT_target,2)
                        if BT_target(i)==1
                            tmpdate=BT_date(i,:);
                            tmpdatematch=find(str2num(BT_date)==str2num(tmpdate));
                            BT_targetB(tmpdatematch)=1;
                        end
                    end

                    % Arrange plots the same
                    spPos=[0.11 0.13+.05 0.75 0.75-.05]; % arrange plots the same

                    % Keepstm
                    keepstm(isnan(keepstm)==1)=[];

                    BT_cat=BT_cat(:,1);
                    BT_lat=BT_lat(:,1);
                    BT_year=BT_year(:,1);
                    BT_storm=BT_storm(:,1);

                    if identconv==1 || identsatobs==1
                        stratlist=[1:9];
                    else
                        stratlist=[1,4:9];
                    end

                    %if size(unique(BT_year),1)>1
                        stratlist=[stratlist,15:15+size(unique(BT_year),1)-1];
                    %end 

                    if identconv==1 || identsatobs==1 % stratify stratifications by dropsonde cycles
                        stratlist=[stratlist stratlist(end)+1:stratlist(end)+6]; % TD TS MN MJ N30 S30
                        stratlist=[stratlist, stratlist(end)+1:stratlist(end)+size(unique(BT_year),1)]; % add years
                        if identbasinmodel==0
                            stratlist=[stratlist, stratlist(end)+1:stratlist(end)+2,stratlist(end)+13:stratlist(end)+18+size(unique(BT_year),1)];
                        else
                            stratlist=[stratlist, stratlist(end)+1:stratlist(end)+12+6+size(unique(BT_year),1)];
                        end
                    else
                    end
                    

                    if identns==1
                        stratlist=[stratlist 888];
                    end

                    for strat=stratlist    
                        if strat==1 % none
                            clear breakstrat
                            stname='none';
                        elseif strat==2 % by those that had obs
                            clear breakstrat
                            stname='obs';
                            if sum(BT_drops==1)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_OBS.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: OBS');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==3 % by those storms from first point of obs till end
                            clear breakstrat
                            stname='recon';
                             if sum(BT_target==1)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_RECON.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: RECON');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==4 % by intensity
                            clear breakstrat
                            stname='TD'; % <34 kts
                            if sum(BT_cat<34)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_TD.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: TD');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==5
                            clear breakstrat
                            stname='TS'; % >34 kts & < 63 kts
                            if sum(BT_cat>=34 & BT_cat<63)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_TS.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: TS');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==6
                            clear breakstrat
                            stname='MN'; % > 64 kts & < 95 kts
                            if sum(BT_cat>=63 & BT_cat<95)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_MN.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: MN');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==7
                            clear breakstrat
                            stname='MJ'; % > 96 kts
                            if sum(BT_cat>=96)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_MJ.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: MJ');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==8 
                            clear breakstrat
                            stname='N30'; % north of 30N
                            if sum(BT_lat>=30)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_N30.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: N30');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==9
                            clear breakstrat
                            stname='S30'; % south of 30N
                            if sum(BT_lat<30)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_S30.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: S30');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==10
                            clear breakstrat
                            stname='RI'; % rapidly intensifying storms
                        elseif strat==11
                            clear breakstrat
                            stname='IN'; % intensifying storms
                        elseif strat==12
                            clear breakstrat
                            stname='SS'; % steady-state storms
                        elseif strat==13
                            clear breakstrat
                            stname='WK'; % weakening storms 
                        elseif strat==14
                            clear breakstrat
                            stname='RW'; % rapidly weakening storms    
                        elseif strat>14 && strat<=14+size(unique(BT_year),1)
                            clear breakstrat
                            tmps=sort(unique(BT_year)); % by year
                            stname=num2str(2000+tmps(strat-14)); 
                        elseif strat==14+size(unique(BT_year),1)+1 %% TD strat obs only
                            clear breakstrat
                            stname='TD-OBS'; % <34 kts
                            if sum(BT_cat<34 & BT_drops'==1)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_TD-OBS.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: TD-OBS');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==14+size(unique(BT_year),1)+2 %% TS strat obs only
                            clear breakstrat
                            stname='TS-OBS'; % >34 kts & < 63 kts
                            if sum(BT_cat>=34 & BT_cat<63 & BT_drops'==1)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_TS-OBS.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: TS-OBS');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==14+size(unique(BT_year),1)+3 %% MN strat obs only
                            clear breakstrat
                            stname='MN-OBS'; % > 64 kts & < 95 kts
                            if sum(BT_cat>=63 & BT_cat<95 & BT_drops'==1)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_MN-OBS.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: MN-OBS');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==14+size(unique(BT_year),1)+4 %% MJ strat obs only
                            clear breakstrat
                            stname='MJ-OBS'; % > 96 kts
                            if sum(BT_cat>=96 & BT_drops'==1)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_MJ-OBS.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: MJ-OBS');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==14+size(unique(BT_year),1)+5 %% N30 strat obs only
                            clear breakstrat
                            stname='N30-OBS'; % north of 30N
                            if sum(BT_lat>=30 & BT_drops'==1)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_N30-OBS.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: N30-OBS');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==14+size(unique(BT_year),1)+6 %% S30 strat obs only
                            clear breakstrat
                            stname='S30-OBS'; % south of 30N
                            if sum(BT_lat<30 & BT_drops'==1)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_S30-OBS.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: S30-OBS');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat>14+size(unique(BT_year),1)+6 && strat<=(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1) %% By Year strat obs only
                            clear breakstrat
                            tmps=sort(unique(BT_year)); % by year
                            stname=[num2str(2000+tmps(strat-(14+size(unique(BT_year),1)+6))),'-OBS'];
                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+1
                            clear breakstrat
                            stname='noobs';
                            if sum(BT_drops'==0)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_NOOBS.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: NOOBS');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+2
                            clear breakstrat
                            stname='prerecon';
                            if sum(BT_target'==0)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_PRERECON.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: PRERECON');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+3
                            clear breakstrat
                            stname='obs-b';
                            if sum(BT_dropsB==1)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_OBS-B.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: OBS-B');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+4
                            clear breakstrat
                            stname='recon-b';
                            if sum(BT_targetB==1)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_RECON-B.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: RECON-B');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+5
                            clear breakstrat
                            stname='noobs-b';
                            if sum(BT_dropsB==0)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_NOOBS-B.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: NOOBS-B');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+6
                            clear breakstrat
                            stname='prerecon-b';
                            if sum(BT_targetB==0)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_PRERECON-B.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: PRERECON-B');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+7
                            clear breakstrat
                            stname='obs-o';
                            if sum(BT_dropsB==1 & BT_drops==0)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_OBS-O.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: OBS-O');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+8
                            clear breakstrat
                            stname='recon-o';
                            if sum(BT_targetB==1 & BT_target==0)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_RECON-O.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: RECON-O');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+9
                            clear breakstrat
                            stname='obs-i';
                            if sum(BT_dropsI==1)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_OBS-I.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: OBS-I');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+10
                            clear breakstrat
                            stname='obs-t';
                            if sum(BT_dropsI==1)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_OBS-T.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: OBS-T');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end         
                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+11
                            clear breakstrat
                            stname='recon-i';
                            if sum(BT_targetI==1)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_RECON-I.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: RECON-I');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+12
                            clear breakstrat
                            stname='recon-t';
                            if sum(BT_targetT==1)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_RECON-T.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: RECON-T');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+13 %% TD strat noobs only
                            clear breakstrat
                            stname='TD-NOOBS'; % <34 kts
                            if sum(BT_cat<34 & BT_drops'==0)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_TD-OBS.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: TD-NOOBS');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+14 %% TS strat noobs only
                            clear breakstrat
                            stname='TS-NOOBS'; % >34 kts & < 63 kts
                            if sum(BT_cat>=34 & BT_cat<63 & BT_drops'==0)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_TS-OBS.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: TS-NOOBS');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+15 %% MN strat noobs only
                            clear breakstrat
                            stname='MN-NOOBS'; % > 64 kts & < 95 kts
                            if sum(BT_cat>=63 & BT_cat<95 & BT_drops'==0)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_MN-NOOBS.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: MN-NOOBS');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+16 %% MJ strat noobs only
                            clear breakstrat
                            stname='MJ-NOOBS'; % > 96 kts
                            if sum(BT_cat>=96 & BT_drops'==0)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_MJ-NOOBS.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: MJ-NOOBS');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end    
                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+17 %% N30 strat obs only
                            clear breakstrat
                            stname='N30-NOOBS'; % north of 30N
                            if sum(BT_lat>=30 & BT_drops'==1)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_N30-NOOBS.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: N30-NOOBS');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end
                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18 %% S30 strat NOOBS only
                            clear breakstrat
                            stname='S30-NOOBS'; % south of 30N
                            if sum(BT_lat<30 & BT_drops'==1)==0
                                breakstrat='yes';
                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_S30-NOOBS.txt'],'wt');
                                fprintf(fid,'%s\n','STRATIFICATION: S30-NOOBS');
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end    
                        elseif strat>(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18 && strat<=888 %% By Year strat noobs only
                            clear breakstrat
                            tmps=sort(unique(BT_year)); % by year 
                            stname=[num2str(2000+tmps(strat-((14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18))),'-NOOBS'];    
                        elseif strat==888
                            clear breakstrat
                            stname=identnsname;
                            clear tmpyrb
                            numlist=[];
                            for ins=1:size(identnewsub,1)
                                tmp=identnewsub(ins,:);
                                for ins2=1:size(BT_date)
                                    if strcmp(BT_date(ins2,:),tmp)==1
                                        numlist=[numlist ins2];
                                    end
                                end
                            end
                            if isempty(numlist)==1
                                breakstrat='yes';
                                fid = fopen([identtrackint,'/STRAT_',identnsname,'.txt'],'wt');
                                fprintf(fid,'%s\n',['STRATIFICATION: ',identnsname]);
                                fprintf(fid,'%s\n','none');
                                fclose(fid);
                            end     
                        end

                        if exist('breakstrat','var')==1
                        else    
                            if sum(isnan(keepstm))-size(keepstm,2)==0 && (strat==2 || strat==3) % no storms have obs...skip strat 2 & 3
                                disp('None of the storms in the composite have obs...skipping the OBS and TARGET stratifications...')
                            else
                                % Create Graphics: trk, int, spd errors - bt-gh vs. bt-deny
                                for plt=1:23
                                    clear l cntexp
                                    set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                    hfig=figure;
                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                    ax1=subplot(3,4,[1:8]);
                                    hold on
                                    if plt==1
                                         tmp_exp=trkerr_exp(:,1:skip:end,:);
                                         tmp_name='trkerr';
                                         tmp_title='Track Error (km)';
                                         tmp_ytitle='Error (km)';
                                    elseif plt==2
                                        tmp_exp=interr_exp(:,1:skip:end,:);
                                        tmp_name='preserr';
                                        tmp_title='Pressure Error (hPa)';
                                        tmp_ytitle='Error (hPa)';
                                    elseif plt==3
                                        tmp_exp=spderr_exp(:,1:skip:end,:);
                                        tmp_name='spderr';
                                        tmp_title='Wind Speed Error (kts)';
                                        tmp_ytitle='Error (kts)';
                                     elseif plt==4
                                        tmp_exp=ne34err_exp(:,1:skip:end,:);
                                        tmp_name='ne34err';
                                        tmp_title='R34 NEQ Error (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[0 200];
                                    elseif plt==5
                                        tmp_exp=se34err_exp(:,1:skip:end,:);
                                        tmp_name='se34err';
                                        tmp_title='R34 SEQ Error (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[0 200];
                                    elseif plt==6
                                        tmp_exp=sw34err_exp(:,1:skip:end,:);
                                        tmp_name='sw34err';
                                        tmp_title='R34 SWQ Error (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[0 200];
                                    elseif plt==7
                                        tmp_exp=nw34err_exp(:,1:skip:end,:);
                                        tmp_name='nw34err';
                                        tmp_title='R34 NWQ Error (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[0 200];
                                    elseif plt==8
                                        tmp_exp=ne50err_exp(:,1:skip:end,:);
                                        tmp_name='ne50err';
                                        tmp_title='R50 NEQ Error (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[0 200];
                                    elseif plt==9
                                        tmp_exp=se50err_exp(:,1:skip:end,:);
                                        tmp_name='se50err';
                                        tmp_title='R50 SEQ Error (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[0 200];
                                    elseif plt==10
                                        tmp_exp=sw50err_exp(:,1:skip:end,:);
                                        tmp_name='sw50err';
                                        tmp_title='R50 SWQ Error (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[0 200];
                                    elseif plt==11
                                        tmp_exp=nw50err_exp(:,1:skip:end,:);
                                        tmp_name='nw50err';
                                        tmp_title='R50 NWQ Error (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[0 200];
                                    elseif plt==12
                                        tmp_exp=ne64err_exp(:,1:skip:end,:);
                                        tmp_name='ne64err';
                                        tmp_title='R64 NEQ Error (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[0 200];
                                    elseif plt==13
                                        tmp_exp=se64err_exp(:,1:skip:end,:);
                                        tmp_name='se64err';
                                        tmp_title='R64 SEQ Error (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[0 200];
                                    elseif plt==14
                                        tmp_exp=sw64err_exp(:,1:skip:end,:);
                                        tmp_name='sw64err';
                                        tmp_title='R64 SWQ Error (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[0 200];
                                    elseif plt==15
                                        tmp_exp=nw64err_exp(:,1:skip:end,:);
                                        tmp_name='nw64err';
                                        tmp_title='R64 NWQ Error (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[0 200];
                                    elseif plt==16
                                        tmp_exp=poerr_exp(:,1:skip:end,:);
                                        tmp_name='poerr';
                                        tmp_title='Outer Clsd Isbr Prs Error (hPa)';
                                        tmp_ytitle='Error (hPa)';
                                    elseif plt==17
                                        tmp_exp=roerr_exp(:,1:skip:end,:);
                                        tmp_name='roerr';
                                        tmp_title='Outer Clsd Isbr Rad Error (km)';
                                        tmp_ytitle='Error (km)';
                                    elseif plt==18
                                        tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                        tmp_name='rmwerr';
                                        tmp_title='RMW Error (km)';
                                        tmp_ytitle='Error (km)';
                                    elseif plt==19
                                        tmp_exp=ateerr_exp(:,1:skip:end,:);
                                        tmp_name='ateerr';
                                        tmp_title='Along-Track Error (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[-500 500];                
                                    elseif plt==20
                                        tmp_exp=xteerr_exp(:,1:skip:end,:);
                                        tmp_name='xteerr';
                                        tmp_title='Across-Track Error (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[-500 500]; 
                                    elseif plt==21
                                        tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                        tmp_name='34err';
                                        tmp_title='R34 Error (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[0 100];
                                    elseif plt==22
                                        tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                        tmp_name='50err';
                                        tmp_title='R50 Error (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[0 100];
                                    elseif plt==23
                                        tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                        tmp_name='64err';
                                        tmp_title='R64 Error (km)';
                                        tmp_ytitle='Error (km)';
                                        yrange=[0 100];
                                    end
                                    if plt <19 || plt >20
                                        tmp_exp=abs(tmp_exp); % added for MAE
                                    end
                                    tmp_exp0=tmp_exp;
                                    % Strat
                                    if strat==1
                                        clear tmpyrb
                                        tmpyr=identdr;
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_ALL.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: ALL');
                                            for prn=1:size(identdr,2)
                                                fprintf(fid,'%s\n',identdr{prn});
                                            end
                                            fclose(fid);  
                                        end
                                    elseif strat==2
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_drops==1,:,:);
                                        end
                                        tmpyr=identdr(keepstm); % keeps just the storms that have obs
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_OBS.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: OBS');
                                            for prn=1:size(tmpyr,2)
                                                fprintf(fid,'%s\n',tmpyr{prn});
                                            end
                                            fclose(fid); 
                                        end
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==3
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_target==1,:,:);
                                        end
                                        tmpyr=identdr(keepstm);
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_RECON.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: RECON');
                                            for prn=1:size(tmpyr,2)
                                                fprintf(fid,'%s\n',tmpyr{prn});
                                            end
                                            fclose(fid); 
                                        end
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==4 % TD
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]<34,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat<34,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_cat<34) BT_storm(BT_cat<34)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat<34));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_TD.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: TD');
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end                
                                    elseif strat==5 % TS
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=34 & BT_cat<63,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat>=34 & BT_cat<63) BT_storm(BT_cat>=34 & BT_cat<63)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;                
                                        tmpnm=unique(BT_name(BT_cat>=34 & BT_cat<63));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_TS.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: TS');
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end   
                                    elseif strat==6 % MN
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=63 & BT_cat<95,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat>=63 & BT_cat<95) BT_storm(BT_cat>=63 & BT_cat<95)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=63 & BT_cat<95));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_MN.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: MN');
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end   
                                    elseif strat==7 % MJ
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=96,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=96,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat>=96) BT_storm(BT_cat>=96)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=96));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_MJ.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: MJ');
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end   
                                    elseif strat==8 % N30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]>=30,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat>=30,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_lat>=30) BT_storm(BT_lat>=30)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat>=30));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_N30.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: N30');
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end   
                                    elseif strat==9 % S30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]<30,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat<30,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_lat<30) BT_storm(BT_lat<30)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat<30));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_S30.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: S30');
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end 
                                    elseif strat>14 && strat<=14+size(unique(BT_year),1) % by year
                                        clear tmpyrb
                                        tmps=sort(unique(BT_year));
                                        tmps=tmps(strat-14);
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_year;BT_year;BT_year;BT_year]==tmps,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_year==tmps,:,:);
                                        end                    
                                        tmpnm=unique(BT_name(BT_year==tmps));
                                        tmpyr=repmat(tmps+2000,size(tmpnm,2),1);
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_',num2str(tmpyr(1)),'.txt'],'wt');
                                            fprintf(fid,'%s\n',['STRATIFICATION: ',num2str(tmpyr(1))]);
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end  
                                    elseif strat==14+size(unique(BT_year),1)+1 %% TD strat obs only
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat<34 & BT_drops'==1,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat<34 & BT_drops'==1) BT_storm(BT_cat<34 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat<34 & BT_drops'==1));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_TD-OBS.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: TD-OBS');
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end 
                                    elseif strat==14+size(unique(BT_year),1)+2 % TS
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=34 & BT_cat<63 & BT_drops'==1,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_cat>=34 & BT_cat<63 & BT_drops'==1) BT_storm(BT_cat>=34 & BT_cat<63 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;                
                                        tmpnm=unique(BT_name(BT_cat>=34 & BT_cat<63 & BT_drops'==1));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_TS-OBS.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: TS-OBS');
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end   
                                    elseif strat==14+size(unique(BT_year),1)+3 % MN
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=63 & BT_cat<95 & BT_drops'==1,:,:);
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=63 & BT_cat<95 & BT_drops'==1) BT_storm(BT_cat>=63 & BT_cat<95 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=63 & BT_cat<95 & BT_drops'==1));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_MN-OBS.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: MN-OBS');
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end   
                                    elseif strat==14+size(unique(BT_year),1)+4 % MJ
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=96 & BT_drops'==1,:,:);
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=96 & BT_drops'==1) BT_storm(BT_cat>=96 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=96 & BT_drops'==1));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_MJ-OBS.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: MJ-OBS');
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end   
                                    elseif strat==14+size(unique(BT_year),1)+5 % N30
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat>=30 & BT_drops'==1,:,:);
                                         end                     
                                        tmpyr=unique([BT_year(BT_lat>=30 & BT_drops'==1) BT_storm(BT_lat>=30 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat>=30 & BT_drops'==1));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_N30-OBS.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: N30-OBS');
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end   
                                    elseif strat==14+size(unique(BT_year),1)+6 % S30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat<30 & BT_drops'==1,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_lat<30 & BT_drops'==1) BT_storm(BT_lat<30 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat<30 & BT_drops'==1));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_S30-OBS.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: S30-OBS');
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end 
                                    elseif strat>14+size(unique(BT_year),1)+6 && strat<=(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1) % by year
                                        clear tmpyrb
                                        tmps=sort(unique(BT_year));
                                        tmps=tmps(strat-(14+size(unique(BT_year),1)+6));
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_year;BT_year;BT_year;BT_year]==tmps & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_year==tmps & BT_drops'==1,:,:);
                                         end                                                
                                        tmpnm=unique(BT_name(BT_year==tmps & BT_drops'==1));
                                        tmpyr=repmat(tmps+2000,size(tmpnm,2),1);
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_',num2str(tmpyr(1)),'-OBS.txt'],'wt');
                                            fprintf(fid,'%s\n',['STRATIFICATION: ',num2str(tmpyr(1)),'-OBS']);
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end  
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+1
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_drops==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_drops==0));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_NOOBS.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: NOOBS');
                                            for prn=1:size(tmpyr,2)
                                                fprintf(fid,'%s\n',tmpyr{prn});
                                            end
                                            fclose(fid); 
                                        end
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+2
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_target==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_target==0));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_PRERECON.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: PRERECON');
                                            for prn=1:size(tmpyr,2)
                                                fprintf(fid,'%s\n',tmpyr{prn});
                                            end
                                            fclose(fid); 
                                        end
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;  
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+3
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsB==1,:,:);
                                        end
                                        tmpyr=identdr(keepstm);
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_OBS_B.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: OBS-B');
                                            for prn=1:size(tmpyr,2)
                                                fprintf(fid,'%s\n',tmpyr{prn});
                                            end
                                            fclose(fid); 
                                        end
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+4
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetB==1,:,:);
                                        end
                                        tmpyr=identdr(keepstm);
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_RECON_B.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: RECON-B');
                                            for prn=1:size(tmpyr,2)
                                                fprintf(fid,'%s\n',tmpyr{prn});
                                            end
                                            fclose(fid); 
                                        end
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;   
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+5
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsB==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_dropsB==0));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_NOOBS_B.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: NOOBS-B');
                                            for prn=1:size(tmpyr,2)
                                                fprintf(fid,'%s\n',tmpyr{prn});
                                            end
                                            fclose(fid); 
                                        end
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+6
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetB==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_targetB==0));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_PRERECON_B.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: PRERECON-B');
                                            for prn=1:size(tmpyr,2)
                                                fprintf(fid,'%s\n',tmpyr{prn});
                                            end
                                            fclose(fid); 
                                        end
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+7
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==1 & [BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsB==1 & BT_drops==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_dropsB==1 & BT_drops==0));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_OBS_O.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: OBS-O');
                                            for prn=1:size(tmpyr,2)
                                                fprintf(fid,'%s\n',tmpyr{prn});
                                            end
                                            fclose(fid); 
                                        end
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+8
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==1 & [BT_target;BT_target;BT_target;BT_target]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetB==1 & BT_target==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_targetB==1 & BT_target==0));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_RECON_O.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: RECON-O');
                                            for prn=1:size(tmpyr,2)
                                                fprintf(fid,'%s\n',tmpyr{prn});
                                            end
                                            fclose(fid); 
                                        end
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+9
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsI;BT_dropsI;BT_dropsI;BT_dropsI]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsI==1,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_dropsI==1));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_OBS-I.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: OBS-I');
                                            for prn=1:size(tmpyr,2)
                                                fprintf(fid,'%s\n',tmpyr{prn});
                                            end
                                            fclose(fid); 
                                        end
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;  
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+10
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsT;BT_dropsT;BT_dropsT;BT_dropsT]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsT==1,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_dropsT==1));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_OBS-T.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: OBS-T');
                                            for prn=1:size(tmpyr,2)
                                                fprintf(fid,'%s\n',tmpyr{prn});
                                            end
                                            fclose(fid); 
                                        end
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000; 
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+11
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetI;BT_targetI;BT_targetI;BT_targetI]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetI==1,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_targetI==1));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_RECON-I.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: RECON-I');
                                            for prn=1:size(tmpyr,2)
                                                fprintf(fid,'%s\n',tmpyr{prn});
                                            end
                                            fclose(fid); 
                                        end
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;  
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+12
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetT;BT_targetT;BT_targetT;BT_targetT]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetT==1,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_targetT==1));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_RECON-T.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: RECON-T');
                                            for prn=1:size(tmpyr,2)
                                                fprintf(fid,'%s\n',tmpyr{prn});
                                            end
                                            fclose(fid); 
                                        end
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+13 %% TD no obs only
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat<34 & BT_drops'==0,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat<34 & BT_drops'==0) BT_storm(BT_cat<34 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat<34 & BT_drops'==0));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_TD-NOOBS.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: TD-NOOBS');
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end 
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+14 % TS no obs only
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=34 & BT_cat<63 & BT_drops'==0,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_cat>=34 & BT_cat<63 & BT_drops'==0) BT_storm(BT_cat>=34 & BT_cat<63 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;                
                                        tmpnm=unique(BT_name(BT_cat>=34 & BT_cat<63 & BT_drops'==0));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_TS-NOOBS.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: TS-NOOBS');
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end   
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+15 % MN no obs only
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=63 & BT_cat<95 & BT_drops'==0,:,:);
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=63 & BT_cat<95 & BT_drops'==0) BT_storm(BT_cat>=63 & BT_cat<95 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=63 & BT_cat<95 & BT_drops'==0));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_MN-NOOBS.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: MN-NOOBS');
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end   
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+16 % MJ no obs only
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=96 & BT_drops'==0,:,:);
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=96 & BT_drops'==0) BT_storm(BT_cat>=96 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=96 & BT_drops'==0));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_MJ-NOOBS.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: MJ-NOOBS');
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end      
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+17 % N30
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat>=30 & BT_drops'==0,:,:);
                                         end                     
                                        tmpyr=unique([BT_year(BT_lat>=30 & BT_drops'==0) BT_storm(BT_lat>=30 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat>=30 & BT_drops'==0));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_N30-NOOBS.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: N30-NOOBS');
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end   
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18 % S30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat<30 & BT_drops'==0,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_lat<30 & BT_drops'==0) BT_storm(BT_lat<30 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat<30 & BT_drops'==0));
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_S30-NOOBS.txt'],'wt');
                                            fprintf(fid,'%s\n','STRATIFICATION: S30-NOOBS');
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end     
                                    elseif strat>((14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18) && strat<=888 % by year noobs
                                        clear tmpyrb
                                        tmps=sort(unique(BT_year));
                                        tmps=tmps(strat-((14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18));
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_year;BT_year;BT_year;BT_year]==tmps & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_year==tmps & BT_drops'==0,:,:);
                                         end                                                
                                        tmpnm=unique(BT_name(BT_year==tmps & BT_drops'==0));
                                        tmpyr=repmat(tmps+2000,size(tmpnm,2),1);
                                        if plt==1
                                            fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_',num2str(tmpyr(1)),'-NOOBS.txt'],'wt');
                                            fprintf(fid,'%s\n',['STRATIFICATION: ',num2str(tmpyr(1)),'-NOOBS']);
                                            for prn=1:size(tmpnm,2)
                                                fprintf(fid,'%s\n',tmpnm{prn});
                                            end
                                            fclose(fid); 
                                        end      
                                    elseif strat==888
                                            clear tmpyrb
                                            numlist=[];
                                            for ins=1:size(identnewsub,1)
                                                tmp=identnewsub(ins,:);
                                                for ins2=1:size(BT_date)
                                                    if strcmp(BT_date(ins2,:),tmp)==1
                                                        numlist=[numlist ins2];
                                                    end
                                                end
                                            end
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([numlist;numlist;numlist;numlist],:,:);
                                            else
                                                tmp_exp=tmp_exp(numlist,:,:);
                                            end
                                            tmpyr=unique([BT_year(numlist) BT_storm(numlist)],'rows');
                                            tmpyr=tmpyr(:,1);
                                            tmpyr=tmpyr+2000;
                                            tmpnm=unique(BT_name(numlist));
                                            if plt==1
                                                fid = fopen([identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/STRAT_',stname,'.txt'],'wt');
                                                fprintf(fid,'%s\n',['STRATIFICATION: ',stname]);
                                                for prn=1:size(tmpnm,2)
                                                    fprintf(fid,'%s\n',tmpnm{prn});
                                                end
                                                fclose(fid); 
                                            end     
                                    end


                                    for tmp=1:size(identexp,1)
                                        l(tmp)=plot(1:size(tmp_exp,2),nanmean(tmp_exp(:,:,tmp),1),'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2);
                                    end           
                                    % Find which experiment to compare to
                                    for tmp=1:size(identexp,1)
                                        if strcmp(identexp(tmp),identexpsigimp)
                                            tmpimp=tmp;
                                        end
                                    end
                                    plot(-10:89,zeros(1,100),'Color',[.5 .5 .5],'linewidth',1);
                                    for tmp=1:size(identexp,1)
                                        sigtest=ttestsc(tmp_exp(:,:,tmp),tmp_exp(:,:,tmpimp),'alpha',.05);
                                        sigtest_loc=find(sigtest==1);
                                        sigtest_exp=nanmean(tmp_exp(:,sigtest_loc,:),1);
                                        for tmpi=tmp
                                            plot(sigtest_loc,sigtest_exp(:,:,tmpi),'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                        end
                                        sigtest=ttestsc(tmp_exp(:,:,tmp),tmp_exp(:,:,tmpimp),'alpha',.1);
                                        sigtest_loc1=find(sigtest==1);
                                        sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                        sigtest_exp=nanmean(tmp_exp(:,sigtest_loc,:),1);
                                        for tmpi=tmp
                                            plot(sigtest_loc,sigtest_exp(:,:,tmpi),'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                                        end
                                    end   
                                    set(gca,'plotboxaspectratio',[1 1 1])
                                    xlabel('Forecast Lead Time (h)','fontsize',20)
                                    ylabel(tmp_ytitle,'fontsize',20)
                                    set(gca,'fontsize',20)
                                    box on
                                    if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                        if mod(identmaxfhr*3,12)==0
                                            xlim([1 ((identmaxfhr*3))/skiphr+1])
                                        else
                                            xlim([1 ((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1]) 
                                        end
                                    else
                                        if mod(identmaxfhr*3-3,12)==0
                                            xlim([1 ((identmaxfhr*3)-3)/skiphr+1])
                                        else
                                            xlim([1 ((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1]) 
                                        end
                                    end
                                    % YRANGE
                                    clear allquad
                                    allquad(1)=(max(max(nanmean(abs(ne34err_exp(:,1:skip:end,:)),1))));
                                    allquad(2)=(max(max(nanmean(abs(se34err_exp(:,1:skip:end,:)),1))));
                                    allquad(3)=(max(max(nanmean(abs(nw34err_exp(:,1:skip:end,:)),1))));
                                    allquad(4)=(max(max(nanmean(abs(sw34err_exp(:,1:skip:end,:)),1))));
                                    allquad(5)=(max(max(nanmean(abs(ne50err_exp(:,1:skip:end,:)),1))));
                                    allquad(6)=(max(max(nanmean(abs(se50err_exp(:,1:skip:end,:)),1))));
                                    allquad(7)=(max(max(nanmean(abs(nw50err_exp(:,1:skip:end,:)),1))));
                                    allquad(8)=(max(max(nanmean(abs(sw50err_exp(:,1:skip:end,:)),1))));
                                    allquad(9)=(max(max(nanmean(abs(ne64err_exp(:,1:skip:end,:)),1))));
                                    allquad(10)=(max(max(nanmean(abs(se64err_exp(:,1:skip:end,:)),1))));
                                    allquad(11)=(max(max(nanmean(abs(nw64err_exp(:,1:skip:end,:)),1))));
                                    allquad(12)=(max(max(nanmean(abs(sw64err_exp(:,1:skip:end,:)),1))));
                                    allquadmax=max(max(max(allquad)));
                                    allquadmin=min(min(min(allquad)));
                                    tmpvalq=max(abs(allquadmin),abs(allquadmax));
                                    if isnan(tmpvalq)==1
                                        tmpvalq=0;
                                    end
                                    if numel(num2str(tmpvalq))==3
                                        addfacq=100;
                                    elseif numel(num2str(tmpvalq))==2
                                        addfacq=20;
                                    else 
                                        addfacq=20;
                                    end
                                    if numel(num2str(round(max(max(nanmean((tmp_exp0),1))))))==3
                                        addfac=100;
                                    elseif numel(num2str(round(max(max(nanmean((tmp_exp0),1))))))==2
                                        addfac=20;
                                    else
                                        addfac=20;
                                    end
                                    if plt<=3 || (plt>=16 && plt<=18) % 0-end
                                        tmpmin=min(min(nanmean((tmp_exp0),1)));
                                        tmpmax=max(max(nanmean((tmp_exp0),1)));
                                        tmpval=max(abs(tmpmin),abs(tmpmax));
                                        if isnan(tmpval)==1
                                            tmpval=0;
                                        end
                                        yrange=[0 round((tmpval+addfac)/10)*10];                
                                    elseif plt==19 || plt==20 % -end end 
                                        tmpmin=min(min(nanmean((tmp_exp0),1)));
                                        tmpmax=max(max(nanmean((tmp_exp0),1)));
                                        tmpval=max(abs(tmpmin),abs(tmpmax));
                                        if isnan(tmpval)==1
                                            tmpval=0;
                                        end
                                        yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                                    elseif (plt>=4 && plt<=15) || plt>=21%quad
                                        yrange=[0 round((tmpvalq+addfacq)/10)*10];
                                    end
                    %                 if plt==1
                    %                     for lo=1:50
                    %                         if max(nanmean(tmp_exp,1))>100*lo
                    %                             ylim([0 200+100*lo])
                    %                         end
                    %                     end
                    %                 elseif plt==2 || plt==3 || plt>15 && plt <19
                    %                     for lo=1:2:50
                    %                         if max(nanmean(tmp_exp,1))>5*lo
                    %                             ylim([0 10+5*(lo+1)])
                    %                         end
                    %                     end 
                    %                 else
                                        ylim(yrange)
                    %                 end
                                    set(gca,'xtick',1:skiptick:50)
                                    set(gca,'xticklabel',{'0','12','24','36','48','60','72','84','96','108','120','132'}) 
                                    grid on
                                    set(gca,'gridcolor','k','gridalpha',.4,'ygrid','off')
                                    set(gca,'fontsize',20)      
                                    hold off
                                    box on
                                    lh=legend(l,identexpshort,'location','northeast');
									lh.FontSize=10;
                                    set(gcf,'Units','inches');
                                    a1Pos = get(gca,'Position');
                                    set(gcf, 'InvertHardcopy', 'off')
                                    set(gcf,'Units','inches');
                                    screenposition = get(gcf,'Position');
                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                    set(gcf, 'InvertHardcopy', 'off')
                                    text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')    
                                    if strat==1
                                    else
                                        text(1,1.03,['\textbf{SUBSET: ',upper(stname),'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                    end                
                                    tmpuv = unique(tmpyr);
                                    tmpn  = histc(tmpyr,tmpuv); 
                                    tmpphrase='';
                                    for tmpdr=1:length(tmpn)
                                        if tmpdr==length(tmpn)
                                            tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),')'];
                                        else
                                            tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),') $\mid$ '];
                                        end
                                    end    
                                    text(0,1.03,['\textbf{STORMS: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                    ax=gca;
                                    box on
                                    set(ax, 'Layer', 'bottom')
                                    ax.LineWidth=1; 
                                    set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                    set(gca,'Color',[.9 .9 .9])
                                    for tmp=1:size(identexp,1)
                                        cntexp(:,tmp)=sum(~isnan(tmp_exp(:,1:skip:end,tmp)),1);
                                    end
                                    if sum([cntexp(:)])==0
                                        tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                        set(tx, 'Layer', 'front')
                                    end          
                                    if plt==19
                                         tx=text(0.02,0.06,'Slower than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         tx=text(0.02,0.98,'Faster than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         set(tx, 'Layer', 'front')            
                                    elseif plt==20
                                         tx=text(0.02,0.06,'Left of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         tx=text(0.02,0.98,'Right of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         set(tx, 'Layer', 'front')            
                                    end
                                    b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                                    set(b,'plotboxaspectratio',[1 1 1])
                                    set(b,'Color','none');
                                    set(b,'YColor','none');
                                    set(b,'tickdir','both')
                                    set(b,'XColor',[0 0 0]);
                                    set(b,'ytick',[]);
                                    if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                        if mod(identmaxfhr*3,12)==0
                                            xlim(b,[1 ((identmaxfhr*3))/skiphr+1])
                                            tmpxend=((identmaxfhr*3))/skiphr+1;
                                        else
                                            xlim(b,[1 ((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1]) 
                                            tmpxend=((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1;
                                        end
                                    else
                                        if mod(identmaxfhr*3-3,12)==0
                                            xlim(b,[1 ((identmaxfhr*3)-3)/skiphr+1])
                                            tmpxend=((identmaxfhr*3)-3)/skiphr+1;
                                        else
                                            xlim(b,[1 ((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1]) 
                                            tmpxend=((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1;
                                        end
                                    end        
                                    set(b,'xtick',[1:skiptick:50]);
                                    trkerr_exp_fcnt=zeros(1,tmpxend);            
                                    trkerr_exp_fcnt1=zeros(1,tmpxend);            
                                    trkerr_exp_fcnt2=zeros(1,tmpxend);
                                    for tmp=1:size(identexp,1)
                                        cntexp(:,tmp)=sum(~isnan(tmp_exp(:,1:skip:end,tmp)),1);
                                    end  
                                %     if size(identexp,1)==2
                                %         trkerr_exp_fcnt1(1:size(sum(~isnan(tmp_exp(:,1:skip:end,1)),1),2))=sum(~isnan(tmp_exp(:,1:skip:end,1)),1);            
                                %         trkerr_exp_fcnt2(1:size(sum(~isnan(tmp_exp(:,1:skip:end,2)),1),2))=sum(~isnan(tmp_exp(:,1:skip:end,2)),1);            
                                %         for i=1:size(trkerr_exp_fcnt1,2)
                                %             if trkerr_exp_fcnt1(i)==trkerr_exp_fcnt2(i)
                                %                 b.XTickLabel{i} = num2str(trkerr_exp_fcnt1(i));
                                %             else
                                %                 b.XTickLabel{i} = ['\color[rgb]{',num2str(identexpcolors(1,:)),'}',num2str(trkerr_exp_fcnt1(i)),'\color[rgb]{0,0,0}/\color[rgb]{',num2str(identexpcolors(2,:)),'}',num2str(trkerr_exp_fcnt2(i)),''];
                                %             end
                                %         end
                                %     elseif size(identexp,1)>2
                                %         maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1));         
                                %         first=min(maxmin');    
                                %         second=max(maxmin');
                                %         for i=1:size(maxmin,1)
                                %             if first(i)==second(i)
                                %                 b.XTickLabel{i} = num2str(first(i));
                                %             else
                                %                 b.XTickLabel{i} = [num2str(first(i)),'/',num2str(second(i)),''];
                                %             end
                                %         end
                                %     end
                                    %if size(trkerr_gh,2)*3<max(0:size(1:skiptick:tmpxend,2):size(1:skiptick:tmpxend,2)*11)
                                    %    trkerr_gh_fcnt(end-1:end)=0;
                                    %end
                                    set(gca,'fontsize',10)
                                    xlabel('# fcsts','Position',[-.5 0],'VerticalAlignment','top','HorizontalAlignment','center','Rotation',90,'units','normalized'); 
                                    set(gca,'position',[spPos(1)+.02 spPos(2)-.05 spPos(3) spPos(4)])
                                    screenposition = get(gcf,'Position');
                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                    set(gcf, 'InvertHardcopy', 'off')
                                    % Create a text box at every Tick label position
                                    maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1)); 
                                    xTicks0 = get(gca, 'xticklabel');
                                    xTicks = get(gca, 'xtick');
                                    if size(maxmin,1)<size(xTicks0,1)
                                        for n=1:size(xTicks0,1)-size(maxmin,1)
                                            maxmin(end+n,:)=0;
                                        end
                                    end
                                    set(b,'xticklabels',[]);
                                    minY =0;
                                    VerticalOffset1=0.03;
                                    HorizontalOffset = 0.2;
                                    for xx = 1:size(xTicks0,1)
                                        tmptxt0=maxmin(xx,:);
                                        tmplines=size(tmptxt0,2);
                                        if size(unique(tmptxt0),2)==1
                                            tmptxt1=num2str(tmptxt0(1)); 
                                            text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)                    
                                        else
                                            for n=1:tmplines
                                                tmptxt1=[];                            
                                                tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(n,:)),'}',num2str(tmptxt0(n))];                           
                                                if n==1
                                                    text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)
                                                else
                                                    text(xTicks(xx), minY - (VerticalOffset1+(.02*(n-1))),tmptxt1,'horizontalalignment','center','fontsize',10)                                
                                                end
                                            end    
                                        end
                                    end
                                    f = getframe(hfig);
                                    imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/COMP_',tmp_name,'_',stname,'.png'],'png');
                                    close all
                                end   
                                % Create Graphics: trk, int, spd improvement vs. deny
                                for plt=1:23
                                    clear l cntexp
                                    set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                    hfig=figure;
                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                    ax1=subplot(3,4,[1:8]);
                                    hold on
                                    if plt==1
                                         tmp_exp=trkerr_exp(:,1:skip:end,:);
                                         tmp_name='trkskill';
                                         tmp_title='Track Improvement (\%)';
                                         tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                         yrange=[-20 20];
                                    elseif plt==2
                                        tmp_exp=interr_exp(:,1:skip:end,:);
                                        tmp_name='presskill';
                                        tmp_title='Pressure Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                    elseif plt==3
                                        tmp_exp=spderr_exp(:,1:skip:end,:);
                                        tmp_name='spdskill';
                                        tmp_title='Wind Speed Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                     elseif plt==4
                                        tmp_exp=ne34err_exp(:,1:skip:end,:);
                                        tmp_name='ne34skill';
                                        tmp_title='R34 NEQ Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                        yrange=[-100 100];                 
                                    elseif plt==5
                                        tmp_exp=se34err_exp(:,1:skip:end,:);
                                        tmp_name='se34skill';
                                        tmp_title='R34 SEQ Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                        yrange=[-100 100];                 
                                    elseif plt==6
                                        tmp_exp=sw34err_exp(:,1:skip:end,:);
                                        tmp_name='sw34skill';
                                        tmp_title='R34 SWQ Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                        yrange=[-100 100];                 
                                    elseif plt==7
                                        tmp_exp=nw34err_exp(:,1:skip:end,:);
                                        tmp_name='nw34skill';
                                        tmp_title='R34 NWQ Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                        yrange=[-100 100];                 
                                    elseif plt==8
                                        tmp_exp=ne50err_exp(:,1:skip:end,:);
                                        tmp_name='ne50skill';
                                        tmp_title='R50 NEQ Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                        yrange=[-100 100];                 
                                    elseif plt==9
                                        tmp_exp=se50err_exp(:,1:skip:end,:);
                                        tmp_name='se50skill';
                                        tmp_title='R50 SEQ Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                        yrange=[-100 100];                 
                                    elseif plt==10
                                        tmp_exp=sw50err_exp(:,1:skip:end,:);
                                        tmp_name='sw50skill';
                                        tmp_title='R50 SWQ Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                        yrange=[-100 100];                 
                                    elseif plt==11
                                        tmp_exp=nw50err_exp(:,1:skip:end,:);
                                        tmp_name='nw50skill';
                                        tmp_title='R50 NWQ Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                        yrange=[-100 100];                 
                                    elseif plt==12
                                        tmp_exp=ne64err_exp(:,1:skip:end,:);
                                        tmp_name='ne64skill';
                                        tmp_title='R64 NEQ Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                        yrange=[-100 100];                 
                                    elseif plt==13
                                        tmp_exp=se64err_exp(:,1:skip:end,:);
                                        tmp_name='se64skill';
                                        tmp_title='R64 SEQ Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                        yrange=[-100 100];                 
                                    elseif plt==14
                                        tmp_exp=sw64err_exp(:,1:skip:end,:);
                                        tmp_name='sw64skill';
                                        tmp_title='R64 SWQ Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                        yrange=[-100 100];                 
                                    elseif plt==15
                                        tmp_exp=nw64err_exp(:,1:skip:end,:);
                                        tmp_name='nw64skill';
                                        tmp_title='R64 NWQ Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                        yrange=[-100 100];                 
                                    elseif plt==16
                                        tmp_exp=poerr_exp(:,1:skip:end,:);
                                        tmp_name='poskill';
                                        tmp_title='Outer Clsd Isbr Prs Improvement (hPa)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                    elseif plt==17
                                        tmp_exp=roerr_exp(:,1:skip:end,:);
                                        tmp_name='roskill';
                                        tmp_title='Outer Clsd Isbr Rad Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                    elseif plt==18
                                        tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                        tmp_name='rmwskill';
                                        tmp_title='RMW Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                    elseif plt==19
                                        tmp_exp=ateerr_exp(:,1:skip:end,:);
                                        tmp_name='ateskill';
                                        tmp_title='Along-Track Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                        yrange=[-200 200];                                 
                                    elseif plt==20
                                        tmp_exp=xteerr_exp(:,1:skip:end,:);
                                        tmp_name='xteskill';
                                        tmp_title='Across-Track Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                        yrange=[-200 200];                                 
                                    elseif plt==21
                                        tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                        tmp_name='34skill';
                                        tmp_title='R34 Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                        yrange=[-50 50];
                                    elseif plt==22
                                        tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                        tmp_name='50skill';
                                        tmp_title='R50 Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                        yrange=[-50 50];
                                    elseif plt==23
                                        tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                        tmp_name='64skill';
                                        tmp_title='R64 Improvement (\%)';
                                        tmp_ytitle=['Improvement wrt ', identexpsigimpshort,' (%)'];
                                        yrange=[-50 50];
                                    end
                                    if plt <19 || plt >20
                                        tmp_exp=abs(tmp_exp); % added for MAE
                                    end
                                        tmp_exp0=tmp_exp;
                                    % Strat
                                    if strat==1
                                        clear tmpyrb
                                        tmpyr=identdr;
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==2
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_drops==1,:,:);
                                        end
                                        tmpyr=identdr(keepstm);
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==3
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_target==1,:,:);
                                        end
                                        tmpyr=identdr(keepstm);
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==4 % TD
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]<34,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat<34,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_cat<34) BT_storm(BT_cat<34)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat<34));
                                    elseif strat==5 % TS
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=34 & BT_cat<63,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat>=34 & BT_cat<63) BT_storm(BT_cat>=34 & BT_cat<63)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;                
                                        tmpnm=unique(BT_name(BT_cat>=34 & BT_cat<63));
                                    elseif strat==6 % MN
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=63 & BT_cat<95,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat>=63 & BT_cat<95) BT_storm(BT_cat>=63 & BT_cat<95)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=63 & BT_cat<95));
                                    elseif strat==7 % MJ
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=96,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=96,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat>=96) BT_storm(BT_cat>=96)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=96));
                                    elseif strat==8 % N30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]>=30,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat>=30,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_lat>=30) BT_storm(BT_lat>=30)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat>=30));
                                    elseif strat==9 % S30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]<30,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat<30,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_lat<30) BT_storm(BT_lat<30)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat<30));
                                    elseif strat>14 && strat<=14+size(unique(BT_year),1) % by year
                                        clear tmpyrb
                                        tmps=sort(unique(BT_year));
                                        tmps=tmps(strat-14);
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_year;BT_year;BT_year;BT_year]==tmps,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_year==tmps,:,:);
                                        end                    
                                        tmpnm=unique(BT_name(BT_year==tmps));
                                        tmpyr=repmat(tmps+2000,size(tmpnm,2),1);
                                    elseif strat==14+size(unique(BT_year),1)+1 %% TD strat obs only
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat<34 & BT_drops'==1,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat<34 & BT_drops'==1) BT_storm(BT_cat<34 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat<34 & BT_drops'==1));
                                    elseif strat==14+size(unique(BT_year),1)+2 % TS
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=34 & BT_cat<63 & BT_drops'==1,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_cat>=34 & BT_cat<63 & BT_drops'==1) BT_storm(BT_cat>=34 & BT_cat<63 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;                
                                        tmpnm=unique(BT_name(BT_cat>=34 & BT_cat<63 & BT_drops'==1));
                                    elseif strat==14+size(unique(BT_year),1)+3 % MN
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=63 & BT_cat<95 & BT_drops'==1,:,:);
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=63 & BT_cat<95 & BT_drops'==1) BT_storm(BT_cat>=63 & BT_cat<95 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=63 & BT_cat<95 & BT_drops'==1));
                                    elseif strat==14+size(unique(BT_year),1)+4 % MJ
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=96 & BT_drops'==1,:,:);
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=96 & BT_drops'==1) BT_storm(BT_cat>=96 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=96 & BT_drops'==1));
                                    elseif strat==14+size(unique(BT_year),1)+5 % N30
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat>=30 & BT_drops'==1,:,:);
                                         end                     
                                        tmpyr=unique([BT_year(BT_lat>=30 & BT_drops'==1) BT_storm(BT_lat>=30 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat>=30 & BT_drops'==1));
                                    elseif strat==14+size(unique(BT_year),1)+6 % S30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat<30 & BT_drops'==1,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_lat<30 & BT_drops'==1) BT_storm(BT_lat<30 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat<30 & BT_drops'==1));
                                    elseif strat>14+size(unique(BT_year),1)+6 && strat<=(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1) % by year% by year
                                        clear tmpyrb
                                        tmps=sort(unique(BT_year));
                                        tmps=tmps(strat-(14+size(unique(BT_year),1)+6));
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_year;BT_year;BT_year;BT_year]==tmps & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_year==tmps & BT_drops'==1,:,:);
                                         end                                                
                                        tmpnm=unique(BT_name(BT_year==tmps & BT_drops'==1));
                                        tmpyr=repmat(tmps+2000,size(tmpnm,2),1);   
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+1
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_drops==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_drops==0));                           
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+2
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_target==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_target==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;  
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+3
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsB==1,:,:);
                                        end
                                        tmpyr=identdr(keepstm);
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+4
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetB==1,:,:);
                                        end
                                        tmpyr=identdr(keepstm);
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;   
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+5
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsB==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_dropsB==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+6
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetB==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_targetB==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+7
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==1 & [BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsB==1 & BT_drops==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_dropsB==1 & BT_drops==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+8
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==1 & [BT_target;BT_target;BT_target;BT_target]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetB==1 & BT_target==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_targetB==1 & BT_target==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                     elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+9
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsI;BT_dropsI;BT_dropsI;BT_dropsI]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsI==1,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_dropsI==1));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;  
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+10
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsT;BT_dropsT;BT_dropsT;BT_dropsT]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsT==1,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_dropsT==1));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+11
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetI;BT_targetI;BT_targetI;BT_targetI]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetI==1,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_targetI==1));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;  
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+12
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetT;BT_targetT;BT_targetT;BT_targetT]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetT==1,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_targetT==1));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+13 %% TD no obs only
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat<34 & BT_drops'==0,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat<34 & BT_drops'==0) BT_storm(BT_cat<34 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat<34 & BT_drops'==0));
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+14 % TS no obs only
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=34 & BT_cat<63 & BT_drops'==0,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_cat>=34 & BT_cat<63 & BT_drops'==0) BT_storm(BT_cat>=34 & BT_cat<63 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;                
                                        tmpnm=unique(BT_name(BT_cat>=34 & BT_cat<63 & BT_drops'==0));
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+15 % MN no obs only
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=63 & BT_cat<95 & BT_drops'==0,:,:);
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=63 & BT_cat<95 & BT_drops'==0) BT_storm(BT_cat>=63 & BT_cat<95 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=63 & BT_cat<95 & BT_drops'==0));
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+16 % MJ no obs only
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=96 & BT_drops'==0,:,:);
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=96 & BT_drops'==0) BT_storm(BT_cat>=96 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=96 & BT_drops'==0)); 
                                     elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+17 % N30
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat>=30 & BT_drops'==0,:,:);
                                         end                     
                                        tmpyr=unique([BT_year(BT_lat>=30 & BT_drops'==0) BT_storm(BT_lat>=30 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat>=30 & BT_drops'==0));
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18 % S30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat<30 & BT_drops'==0,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_lat<30 & BT_drops'==0) BT_storm(BT_lat<30 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat<30 & BT_drops'==0)); 
                                    elseif strat>((14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18) && strat<=888 % by year noobs
                                        clear tmpyrb
                                        tmps=sort(unique(BT_year));
                                        tmps=tmps(strat-((14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18));
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_year;BT_year;BT_year;BT_year]==tmps & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_year==tmps & BT_drops'==0,:,:);
                                         end                                                
                                        tmpnm=unique(BT_name(BT_year==tmps & BT_drops'==0));
                                        tmpyr=repmat(tmps+2000,size(tmpnm,2),1);    
                                    elseif strat==888
                                        clear tmpyrb
                                        numlist=[];
                                        for ins=1:size(identnewsub,1)
                                            tmp=identnewsub(ins,:);
                                            for ins2=1:size(BT_date)
                                                if strcmp(BT_date(ins2,:),tmp)==1
                                                    numlist=[numlist ins2];
                                                end
                                            end
                                        end
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([numlist;numlist;numlist;numlist],:,:);
                                        else
                                            tmp_exp=tmp_exp(numlist,:,:);
                                        end
                                        tmpyr=unique([BT_year(numlist) BT_storm(numlist)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(numlist));    
                                    end

                                    % Find which experiment to compare to
                                    for tmp=1:size(identexp,1)
                                        if strcmp(identexp(tmp),identexpsigimp)
                                            tmpimp=tmp;
                                        end
                                    end      
                                    tmpu=1:size(identexp,1);
                                    tmpu(tmpu==tmpimp)=[];
                                    plot(-10:89,zeros(1,100),'Color',[.5 .5 .5],'linewidth',1);
                                    for tmp=[tmpimp,tmpu]
                                        imprv=100.*(1-nanmean(tmp_exp(:,:,tmp),1)./nanmean(tmp_exp(:,:,tmpimp),1));                  
                                        imprv2(:,tmp)=imprv;
                                        l(tmp)=plot(1:size(imprv,2),imprv,'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2); 
                                        sigtest=ttestsc(tmp_exp(:,:,tmp),tmp_exp(:,:,tmpimp),'alpha',.05);
                                        sigtest_loc=find(sigtest==1);
                                        sigtest_exp=imprv(sigtest_loc);
                                        plot(sigtest_loc,sigtest_exp,'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                        sigtest=ttestsc(tmp_exp(:,:,tmp),tmp_exp(:,:,tmpimp),'alpha',.1);
                                        sigtest_loc1=find(sigtest==1);
                                        sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                        sigtest_exp=imprv(sigtest_loc);
                                        plot(sigtest_loc,sigtest_exp,'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                                    end   
                                    set(gca,'plotboxaspectratio',[1 1 1])
                                    xlabel('Forecast Lead Time (h)','fontsize',20)
                                    ylabel(tmp_ytitle,'fontsize',20)
                                    set(gca,'fontsize',20)
                                    box on
                                    if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                        if mod(identmaxfhr*3,12)==0
                                            xlim([1 ((identmaxfhr*3))/skiphr+1])
                                        else
                                            xlim([1 ((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1]) 
                                        end
                                    else
                                        if mod(identmaxfhr*3-3,12)==0
                                            xlim([1 ((identmaxfhr*3)-3)/skiphr+1])
                                        else
                                            xlim([1 ((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1]) 
                                        end
                                    end  
                                    % YRANGE
                                        clear allquad imprv3
                                        imprv3(:,:,1)=100.*(1-nanmean(abs(ne34err_exp(:,1:skip:end,:)))./nanmean(abs(ne34err_exp(:,1:skip:end,tmpimp))));
                                        imprv3(:,:,2)=100.*(1-nanmean(abs(se34err_exp(:,1:skip:end,:)))./nanmean(abs(se34err_exp(:,1:skip:end,tmpimp))));
                                        imprv3(:,:,3)=100.*(1-nanmean(abs(nw34err_exp(:,1:skip:end,:)))./nanmean(abs(nw34err_exp(:,1:skip:end,tmpimp))));
                                        imprv3(:,:,4)=100.*(1-nanmean(abs(sw34err_exp(:,1:skip:end,:)))./nanmean(abs(sw34err_exp(:,1:skip:end,tmpimp))));
                                        imprv3(:,:,5)=100.*(1-nanmean(abs(ne34err_exp(:,1:skip:end,:)))./nanmean(abs(ne34err_exp(:,1:skip:end,tmpimp))));
                                        imprv3(:,:,6)=100.*(1-nanmean(abs(se34err_exp(:,1:skip:end,:)))./nanmean(abs(se34err_exp(:,1:skip:end,tmpimp))));
                                        imprv3(:,:,7)=100.*(1-nanmean(abs(nw34err_exp(:,1:skip:end,:)))./nanmean(abs(nw34err_exp(:,1:skip:end,tmpimp))));
                                        imprv3(:,:,8)=100.*(1-nanmean(abs(sw34err_exp(:,1:skip:end,:)))./nanmean(abs(sw34err_exp(:,1:skip:end,tmpimp))));
                                        imprv3(:,:,9)=100.*(1-nanmean(abs(ne34err_exp(:,1:skip:end,:)))./nanmean(abs(ne34err_exp(:,1:skip:end,tmpimp))));
                                        imprv3(:,:,10)=100.*(1-nanmean(abs(se34err_exp(:,1:skip:end,:)))./nanmean(abs(se34err_exp(:,1:skip:end,tmpimp))));
                                        imprv3(:,:,11)=100.*(1-nanmean(abs(nw34err_exp(:,1:skip:end,:)))./nanmean(abs(nw34err_exp(:,1:skip:end,tmpimp))));
                                        imprv3(:,:,12)=100.*(1-nanmean(abs(sw34err_exp(:,1:skip:end,:)))./nanmean(abs(sw34err_exp(:,1:skip:end,tmpimp))));
                                        allquadmax=max(max(max(imprv3)));
                                        allquadmin=min(min(min(imprv3)));
                                        tmpvalq=max(abs(allquadmin),abs(allquadmax));
                                        if isnan(tmpvalq)==1
                                            tmpvalq=0;
                                        end
                                        if numel(num2str(tmpvalq))==3
                                            addfacq=100;
                                        elseif numel(num2str(tmpvalq))==2
                                            addfacq=20;
                                        else
                                            addfacq=20;
                                        end
                                        imprv0=squeeze(100.*(1-nanmean(tmp_exp0(:,:,:),1)./nanmean(tmp_exp0(:,:,tmpimp),1)));                  
                                        if numel(num2str(round(max(imprv0(:)))))==3
                                            addfac=100;
                                        elseif numel(num2str(round(max(imprv0(:)))))==2
                                            addfac=20;
                                        else
                                            addfac=20;
                                        end
                                        if plt<=3 || (plt>=16 && plt<=18) % 0-end
                                            tmpmin=min(imprv0(:));
                                            tmpmax=max(imprv0(:));
                                            tmpval=max(abs(tmpmin),abs(tmpmax));
                                            if isnan(tmpval)==1
                                                tmpval=0;
                                            end
                                            if tmpval>250
                                                yrange=[-250 250];
                                            else
                                                yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                                            end
                                        elseif plt==19 || plt==20 % -end end 
                                            tmpmin=min(imprv0(:));
                                            tmpmax=max(imprv0(:));
                                            tmpval=max(abs(tmpmin),abs(tmpmax));
                                            if isnan(tmpval)==1
                                                tmpval=0;
                                            end
                                            if tmpval>250
                                                yrange=[-250 250];
                                            else
                                                yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                                            end
                                        elseif (plt>=4 && plt<=15) || plt>=21%quad 
                                            if tmpvalq>250
                                                yrange=[-250 250];
                                            else
                                                yrange=[-round((tmpvalq+addfacq)/10)*10 round((tmpvalq+addfacq)/10)*10];
                                            end
                                        end
                    %                                   
                    %                 if plt==2 || plt==3 || plt>15 && plt<19
                    %                     for lo=1:2:200
                    %                         if max(abs(imprv))>5*lo
                    %                             ylim([-10-5*(lo+1) 10+5*(lo+1)])
                    %                         end
                    %                     end  
                    %                 else
                                        ylim(yrange)
                    %                 end
                                    set(gca,'xtick',1:skiptick:50)
                                    set(gca,'xticklabel',{'0','12','24','36','48','60','72','84','96','108','120','132'}) 
                                    grid on
                                    set(gca,'gridcolor','k','gridalpha',.4,'ygrid','off')
                                    set(gca,'fontsize',20)      
                                    hold off
                                    box on
                                    lh=legend(l,identexpshort,'location','northeast');
									lh.FontSize=10;
                                    set(gcf,'Units','inches');
                                    a1Pos = get(gca,'Position');
                                    set(gcf, 'InvertHardcopy', 'off')
                                    set(gcf,'Units','inches');
                                    screenposition = get(gcf,'Position');
                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                    set(gcf, 'InvertHardcopy', 'off')
                                    text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                    if strat==1
                                    else
                                        text(1,1.03,['\textbf{SUBSET: ',upper(stname),'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                    end                
                                    tmpuv = unique(tmpyr);
                                    tmpn  = histc(tmpyr,tmpuv); 
                                    tmpphrase='';
                                    for tmpdr=1:length(tmpn)
                                        if tmpdr==length(tmpn)
                                            tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),')'];
                                        else
                                            tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),') $\mid$ '];
                                        end
                                    end    
                                    text(0,1.03,['\textbf{STORMS: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                    ax=gca;
                                    box on
                                    set(ax, 'Layer', 'bottom')
                                    ax.LineWidth=1; 
                                    set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                    set(gca,'Color',[.9 .9 .9])            
                                    if sum(~isnan((diff(imprv))))==0
                                        tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                        set(tx, 'Layer', 'front')
                                    end
                                    % Mean Value            
                                    tmpstr=['Mean: '];
                                    tmpstrmean=nanmean(imprv2,1);
                                    tmpstrmean=(find(tmpstrmean~=0));
                                    for tmp=tmpstrmean
                                        if tmp==tmpstrmean(end)
                                            tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(imprv2(:,tmp)),2)),'%'];
                                        else
                                            tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(imprv2(:,tmp)),2)),'% \color[rgb]{0,0,0}| '];
                                        end
                                    end
                                    if sum(sum(~isnan(imprv2)))==0
                                        tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                        set(tx, 'Layer', 'front')          
                                    else
                                        tx=text(0.98,0.06,tmpstr,'HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                        set(tx, 'Layer', 'front')
                                    end 
                                    b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                                    set(b,'plotboxaspectratio',[1 1 1])
                                    set(b,'Color','none');
                                    set(b,'YColor','none');
                                    set(b,'tickdir','both')
                                    set(b,'XColor',[0 0 0]);
                                    set(b,'ytick',[]);
                                    if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                        if mod(identmaxfhr*3,12)==0
                                            xlim(b,[1 ((identmaxfhr*3))/skiphr+1])
                                            tmpxend=((identmaxfhr*3))/skiphr+1;
                                        else
                                            xlim(b,[1 ((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1]) 
                                            tmpxend=((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1;
                                        end
                                    else
                                        if mod(identmaxfhr*3-3,12)==0
                                            xlim(b,[1 ((identmaxfhr*3)-3)/skiphr+1])
                                            tmpxend=((identmaxfhr*3)-3)/skiphr+1;
                                        else
                                            xlim(b,[1 ((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1]) 
                                            tmpxend=((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1;
                                        end
                                    end        
                                    set(b,'xtick',[1:skiptick:50]); 
                                    trkerr_exp_fcnt=zeros(1,tmpxend);            
                                    trkerr_exp_fcnt1=zeros(1,tmpxend);            
                                    trkerr_exp_fcnt2=zeros(1,tmpxend);
                                    for tmp=1:size(identexp,1)
                                        cntexp(:,tmp)=sum(~isnan(tmp_exp(:,1:skip:end,tmp)),1);
                                    end  
                                %     if size(identexp,1)==2
                                %         trkerr_exp_fcnt1(1:size(sum(~isnan(tmp_exp(:,1:skip:end,1)),1),2))=sum(~isnan(tmp_exp(:,1:skip:end,1)),1);            
                                %         trkerr_exp_fcnt2(1:size(sum(~isnan(tmp_exp(:,1:skip:end,2)),1),2))=sum(~isnan(tmp_exp(:,1:skip:end,2)),1);            
                                %         for i=1:size(trkerr_exp_fcnt1,2)
                                %             if trkerr_exp_fcnt1(i)==trkerr_exp_fcnt2(i)
                                %                 b.XTickLabel{i} = num2str(trkerr_exp_fcnt1(i));
                                %             else
                                %                 b.XTickLabel{i} = ['\color[rgb]{',num2str(identexpcolors(1,:)),'}',num2str(trkerr_exp_fcnt1(i)),'\color[rgb]{0,0,0}/\color[rgb]{',num2str(identexpcolors(2,:)),'}',num2str(trkerr_exp_fcnt2(i)),''];
                                %             end
                                %         end
                                %     elseif size(identexp,1)>2
                                %         maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1));         
                                %         first=min(maxmin');    
                                %         second=max(maxmin');
                                %         for i=1:size(maxmin,1)
                                %             if first(i)==second(i)
                                %                 b.XTickLabel{i} = num2str(first(i));
                                %             else
                                %                 b.XTickLabel{i} = [num2str(first(i)),'/',num2str(second(i)),''];
                                %             end
                                %         end
                                %     end
                                    set(gca,'fontsize',10)
                                    xlabel('# fcsts','Position',[-.5 0],'VerticalAlignment','top','HorizontalAlignment','center','Rotation',90,'units','normalized'); 
                                    set(gca,'position',[spPos(1)+.02 spPos(2)-.05 spPos(3) spPos(4)])
                                    screenposition = get(gcf,'Position');
                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                    set(gcf, 'InvertHardcopy', 'off')
                                    % Create a text box at every Tick label position
                                    maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1)); 
                                    xTicks0 = get(gca, 'xticklabel');
                                    xTicks = get(gca, 'xtick');
                                    if size(maxmin,1)<size(xTicks0,1)
                                        for n=1:size(xTicks0,1)-size(maxmin,1)
                                            maxmin(end+n,:)=0;
                                        end
                                    end
                                    set(b,'xticklabels',[]);
                                    minY =0;
                                    VerticalOffset1=0.03;
                                    HorizontalOffset = 0.2;
                                    for xx = 1:size(xTicks0,1)
                                        tmptxt0=maxmin(xx,:);
                                        tmplines=size(tmptxt0,2);
                                        if size(unique(tmptxt0),2)==1
                                            tmptxt1=num2str(tmptxt0(1)); 
                                            text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)                    
                                        else
                                            for n=1:tmplines
                                                tmptxt1=[];                            
                                                tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(n,:)),'}',num2str(tmptxt0(n))];                           
                                                if n==1
                                                    text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)
                                                else
                                                    text(xTicks(xx), minY - (VerticalOffset1+(.02*(n-1))),tmptxt1,'horizontalalignment','center','fontsize',10)                                
                                                end
                                            end    
                                        end
                                    end
                                    f = getframe(hfig);
                                    imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/COMP_',tmp_name,'_',stname,'.png'],'png');
                                    close all
                                end
                                % Create Graphics: trk, int, spd FSP vs. deny
                                for fspsub=1:2
                                    for plt=1:23
                                        clear l cntexp
                                        set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                        hfig=figure;
                                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                        ax1=subplot(3,4,[1:8]);
                                        hold on
                                        if plt==1
                                             tmp_exp=trkerr_exp(:,1:skip:end,:);
                                             tmp_name='trkfsp';
                                             tmp_title='Track FSP (\%)';
                                             tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                             yrange=[-20 20];
                                        elseif plt==2
                                            tmp_exp=interr_exp(:,1:skip:end,:);
                                            tmp_name='presfsp';
                                            tmp_title='Pressure FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                        elseif plt==3
                                            tmp_exp=spderr_exp(:,1:skip:end,:);
                                            tmp_name='spdfsp';
                                            tmp_title='Wind Speed FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                         elseif plt==4
                                            tmp_exp=ne34err_exp(:,1:skip:end,:);
                                            tmp_name='ne34fsp';
                                            tmp_title='R34 NEQ FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                            yrange=[-100 100];                 
                                        elseif plt==5
                                            tmp_exp=se34err_exp(:,1:skip:end,:);
                                            tmp_name='se34fsp';
                                            tmp_title='R34 SEQ FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                            yrange=[-100 100];                 
                                        elseif plt==6
                                            tmp_exp=sw34err_exp(:,1:skip:end,:);
                                            tmp_name='sw34fsp';
                                            tmp_title='R34 SWQ FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                            yrange=[-100 100];                 
                                        elseif plt==7
                                            tmp_exp=nw34err_exp(:,1:skip:end,:);
                                            tmp_name='nw34fsp';
                                            tmp_title='R34 NWQ FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                            yrange=[-100 100];                 
                                        elseif plt==8
                                            tmp_exp=ne50err_exp(:,1:skip:end,:);
                                            tmp_name='ne50fsp';
                                            tmp_title='R50 NEQ FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                            yrange=[-100 100];                 
                                        elseif plt==9
                                            tmp_exp=se50err_exp(:,1:skip:end,:);
                                            tmp_name='se50fsp';
                                            tmp_title='R50 SEQ FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                            yrange=[-100 100];                 
                                        elseif plt==10
                                            tmp_exp=sw50err_exp(:,1:skip:end,:);
                                            tmp_name='sw50fsp';
                                            tmp_title='R50 SWQ FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                            yrange=[-100 100];                 
                                        elseif plt==11
                                            tmp_exp=nw50err_exp(:,1:skip:end,:);
                                            tmp_name='nw50fsp';
                                            tmp_title='R50 NWQ FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                            yrange=[-100 100];                 
                                        elseif plt==12
                                            tmp_exp=ne64err_exp(:,1:skip:end,:);
                                            tmp_name='ne64fsp';
                                            tmp_title='R64 NEQ FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                            yrange=[-100 100];                 
                                        elseif plt==13
                                            tmp_exp=se64err_exp(:,1:skip:end,:);
                                            tmp_name='se64fsp';
                                            tmp_title='R64 SEQ FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                            yrange=[-100 100];                 
                                        elseif plt==14
                                            tmp_exp=sw64err_exp(:,1:skip:end,:);
                                            tmp_name='sw64fsp';
                                            tmp_title='R64 SWQ FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                            yrange=[-100 100];                 
                                        elseif plt==15
                                            tmp_exp=nw64err_exp(:,1:skip:end,:);
                                            tmp_name='nw64fsp';
                                            tmp_title='R64 NWQ FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                            yrange=[-100 100];                 
                                        elseif plt==16
                                            tmp_exp=poerr_exp(:,1:skip:end,:);
                                            tmp_name='pofsp';
                                            tmp_title='Outer Clsd Isbr Prs FSP (hPa)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                        elseif plt==17
                                            tmp_exp=roerr_exp(:,1:skip:end,:);
                                            tmp_name='rofsp';
                                            tmp_title='Outer Clsd Isbr Rad FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                        elseif plt==18
                                            tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                            tmp_name='rmwfsp';
                                            tmp_title='RMW FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                        elseif plt==19
                                            tmp_exp=ateerr_exp(:,1:skip:end,:);
                                            tmp_name='atefsp';
                                            tmp_title='Along-Track FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                            yrange=[-200 200];                                 
                                        elseif plt==20
                                            tmp_exp=xteerr_exp(:,1:skip:end,:);
                                            tmp_name='xtefsp';
                                            tmp_title='Across-Track FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                            yrange=[-200 200];                                 
                                        elseif plt==21
                                            tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                            tmp_name='34fsp';
                                            tmp_title='R34 FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                            yrange=[-50 50];
                                        elseif plt==22
                                            tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                            tmp_name='50fsp';
                                            tmp_title='R50 FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                            yrange=[-50 50];
                                        elseif plt==23
                                            tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                            tmp_name='64fsp';
                                            tmp_title='R64 FSP (\%)';
                                            tmp_ytitle=['FSP wrt ', identexpsigimpshort,' (%)'];
                                            yrange=[-50 50];
                                        end
                                        if plt <19 || plt >20
                                            tmp_exp=abs(tmp_exp); % added for MAE
                                        end

                                        if fspsub==2
                                            tmp_exp(tmp_exp<5)=NaN;
                                        end

                                        % Strat
                                        if strat==1
                                            clear tmpyrb
                                            tmpyr=identdr;
                                            for tmpyri=1:size(tmpyr,2)
                                                tmpyra=tmpyr{tmpyri};
                                                tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                            end
                                            tmpyr=tmpyrb+2000;
                                        elseif strat==2
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==1,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_drops==1,:,:);
                                            end
                                            tmpyr=identdr(keepstm);
                                            for tmpyri=1:size(tmpyr,2)
                                                tmpyra=tmpyr{tmpyri};
                                                tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                            end
                                            tmpyr=tmpyrb+2000;
                                        elseif strat==3
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==1,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_target==1,:,:);
                                            end
                                            tmpyr=identdr(keepstm);
                                            for tmpyri=1:size(tmpyr,2)
                                                tmpyra=tmpyr{tmpyri};
                                                tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                            end
                                            tmpyr=tmpyrb+2000;
                                        elseif strat==4 % TD
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]<34,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_cat<34,:,:);
                                            end
                                            tmpyr=unique([BT_year(BT_cat<34) BT_storm(BT_cat<34)],'rows');
                                            tmpyr=tmpyr(:,1);
                                            tmpyr=tmpyr+2000;
                                            tmpnm=unique(BT_name(BT_cat<34));
                                        elseif strat==5 % TS
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_cat>=34 & BT_cat<63,:,:);
                                            end                    
                                            tmpyr=unique([BT_year(BT_cat>=34 & BT_cat<63) BT_storm(BT_cat>=34 & BT_cat<63)],'rows');
                                            tmpyr=tmpyr(:,1);
                                            tmpyr=tmpyr+2000;                
                                            tmpnm=unique(BT_name(BT_cat>=34 & BT_cat<63));
                                        elseif strat==6 % MN
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_cat>=63 & BT_cat<95,:,:);
                                            end                    
                                            tmpyr=unique([BT_year(BT_cat>=63 & BT_cat<95) BT_storm(BT_cat>=63 & BT_cat<95)],'rows');
                                            tmpyr=tmpyr(:,1);
                                            tmpyr=tmpyr+2000;
                                            tmpnm=unique(BT_name(BT_cat>=63 & BT_cat<95));
                                        elseif strat==7 % MJ
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=96,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_cat>=96,:,:);
                                            end                    
                                            tmpyr=unique([BT_year(BT_cat>=96) BT_storm(BT_cat>=96)],'rows');
                                            tmpyr=tmpyr(:,1);
                                            tmpyr=tmpyr+2000;
                                            tmpnm=unique(BT_name(BT_cat>=96));
                                        elseif strat==8 % N30
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]>=30,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_lat>=30,:,:);
                                            end                    
                                            tmpyr=unique([BT_year(BT_lat>=30) BT_storm(BT_lat>=30)],'rows');
                                            tmpyr=tmpyr(:,1);
                                            tmpyr=tmpyr+2000;
                                            tmpnm=unique(BT_name(BT_lat>=30));
                                        elseif strat==9 % S30
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]<30,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_lat<30,:,:);
                                            end
                                            tmpyr=unique([BT_year(BT_lat<30) BT_storm(BT_lat<30)],'rows');
                                            tmpyr=tmpyr(:,1);
                                            tmpyr=tmpyr+2000;
                                            tmpnm=unique(BT_name(BT_lat<30));
                                        elseif strat>14 && strat<=14+size(unique(BT_year),1) % by year
                                            clear tmpyrb
                                            tmps=sort(unique(BT_year));
                                            tmps=tmps(strat-14);
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_year;BT_year;BT_year;BT_year]==tmps,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_year==tmps,:,:);
                                            end                    
                                            tmpnm=unique(BT_name(BT_year==tmps));
                                            tmpyr=repmat(tmps+2000,size(tmpnm,2),1);
                                        elseif strat==14+size(unique(BT_year),1)+1 %% TD strat obs only
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_cat<34 & BT_drops'==1,:,:);
                                            end                    
                                            tmpyr=unique([BT_year(BT_cat<34 & BT_drops'==1) BT_storm(BT_cat<34 & BT_drops'==1)],'rows');
                                            tmpyr=tmpyr(:,1);
                                            tmpyr=tmpyr+2000;
                                            tmpnm=unique(BT_name(BT_cat<34 & BT_drops'==1));
                                        elseif strat==14+size(unique(BT_year),1)+2 % TS
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_cat>=34 & BT_cat<63 & BT_drops'==1,:,:);
                                            end
                                            tmpyr=unique([BT_year(BT_cat>=34 & BT_cat<63 & BT_drops'==1) BT_storm(BT_cat>=34 & BT_cat<63 & BT_drops'==1)],'rows');
                                            tmpyr=tmpyr(:,1);
                                            tmpyr=tmpyr+2000;                
                                            tmpnm=unique(BT_name(BT_cat>=34 & BT_cat<63 & BT_drops'==1));
                                        elseif strat==14+size(unique(BT_year),1)+3 % MN
                                            clear tmpyrb
                                             if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_cat>=63 & BT_cat<95 & BT_drops'==1,:,:);
                                             end
                                            tmpyr=unique([BT_year(BT_cat>=63 & BT_cat<95 & BT_drops'==1) BT_storm(BT_cat>=63 & BT_cat<95 & BT_drops'==1)],'rows');
                                            tmpyr=tmpyr(:,1);
                                            tmpyr=tmpyr+2000;
                                            tmpnm=unique(BT_name(BT_cat>=63 & BT_cat<95 & BT_drops'==1));
                                        elseif strat==14+size(unique(BT_year),1)+4 % MJ
                                            clear tmpyrb
                                             if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_cat>=96 & BT_drops'==1,:,:);
                                             end
                                            tmpyr=unique([BT_year(BT_cat>=96 & BT_drops'==1) BT_storm(BT_cat>=96 & BT_drops'==1)],'rows');
                                            tmpyr=tmpyr(:,1);
                                            tmpyr=tmpyr+2000;
                                            tmpnm=unique(BT_name(BT_cat>=96 & BT_drops'==1));
                                        elseif strat==14+size(unique(BT_year),1)+5 % N30
                                            clear tmpyrb
                                             if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_lat>=30 & BT_drops'==1,:,:);
                                             end                     
                                            tmpyr=unique([BT_year(BT_lat>=30 & BT_drops'==1) BT_storm(BT_lat>=30 & BT_drops'==1)],'rows');
                                            tmpyr=tmpyr(:,1);
                                            tmpyr=tmpyr+2000;
                                            tmpnm=unique(BT_name(BT_lat>=30 & BT_drops'==1));
                                        elseif strat==14+size(unique(BT_year),1)+6 % S30
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_lat<30 & BT_drops'==1,:,:);
                                            end
                                            tmpyr=unique([BT_year(BT_lat<30 & BT_drops'==1) BT_storm(BT_lat<30 & BT_drops'==1)],'rows');
                                            tmpyr=tmpyr(:,1);
                                            tmpyr=tmpyr+2000;
                                            tmpnm=unique(BT_name(BT_lat<30 & BT_drops'==1));
                                        elseif strat>14+size(unique(BT_year),1)+6 && strat<=(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1) % by year% by year
                                            clear tmpyrb
                                            tmps=sort(unique(BT_year));
                                            tmps=tmps(strat-(14+size(unique(BT_year),1)+6));
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_year;BT_year;BT_year;BT_year]==tmps & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_year==tmps & BT_drops'==1,:,:);
                                             end                                                
                                            tmpnm=unique(BT_name(BT_year==tmps & BT_drops'==1));
                                            tmpyr=repmat(tmps+2000,size(tmpnm,2),1);  
                                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+1
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_drops==0,:,:);
                                            end
                                            tmpyr=unique(BT_name(BT_drops==0));                           
                                            for tmpyri=1:size(tmpyr,2)
                                                tmpyra=tmpyr{tmpyri};
                                                tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                            end
                                            tmpyr=tmpyrb+2000;
                                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+2
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==0,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_target==0,:,:);
                                            end
                                            tmpyr=unique(BT_name(BT_target==0));
                                            for tmpyri=1:size(tmpyr,2)
                                                tmpyra=tmpyr{tmpyri};
                                                tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                            end
                                            tmpyr=tmpyrb+2000;  
                                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+3
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==1,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_dropsB==1,:,:);
                                            end
                                            tmpyr=identdr(keepstm);
                                            for tmpyri=1:size(tmpyr,2)
                                                tmpyra=tmpyr{tmpyri};
                                                tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                            end
                                            tmpyr=tmpyrb+2000;
                                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+4
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==1,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_targetB==1,:,:);
                                            end
                                            tmpyr=identdr(keepstm);
                                            for tmpyri=1:size(tmpyr,2)
                                                tmpyra=tmpyr{tmpyri};
                                                tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                            end
                                            tmpyr=tmpyrb+2000;   
                                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+5
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==0,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_dropsB==0,:,:);
                                            end
                                            tmpyr=unique(BT_name(BT_dropsB==0));
                                            for tmpyri=1:size(tmpyr,2)
                                                tmpyra=tmpyr{tmpyri};
                                                tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                            end
                                            tmpyr=tmpyrb+2000;
                                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+6
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==0,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_targetB==0,:,:);
                                            end
                                            tmpyr=unique(BT_name(BT_targetB==0));
                                            for tmpyri=1:size(tmpyr,2)
                                                tmpyra=tmpyr{tmpyri};
                                                tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                            end
                                            tmpyr=tmpyrb+2000;  
                                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+7
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==1 & [BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_dropsB==1 & BT_drops==0,:,:);
                                            end
                                            tmpyr=unique(BT_name(BT_dropsB==1 & BT_drops==0));
                                            for tmpyri=1:size(tmpyr,2)
                                                tmpyra=tmpyr{tmpyri};
                                                tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                            end
                                            tmpyr=tmpyrb+2000;
                                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+8
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==1 & [BT_target;BT_target;BT_target;BT_target]==0,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_targetB==1 & BT_target==0,:,:);
                                            end
                                            tmpyr=unique(BT_name(BT_targetB==1 & BT_target==0));
                                            for tmpyri=1:size(tmpyr,2)
                                                tmpyra=tmpyr{tmpyri};
                                                tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                            end
                                            tmpyr=tmpyrb+2000;
                                         elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+9
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_dropsI;BT_dropsI;BT_dropsI;BT_dropsI]==1,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_dropsI==1,:,:);
                                            end
                                            tmpyr=unique(BT_name(BT_dropsI==1));
                                            for tmpyri=1:size(tmpyr,2)
                                                tmpyra=tmpyr{tmpyri};
                                                tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                            end
                                            tmpyr=tmpyrb+2000;  
                                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+10
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_dropsT;BT_dropsT;BT_dropsT;BT_dropsT]==1,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_dropsT==1,:,:);
                                            end
                                            tmpyr=unique(BT_name(BT_dropsT==1));
                                            for tmpyri=1:size(tmpyr,2)
                                                tmpyra=tmpyr{tmpyri};
                                                tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                            end
                                            tmpyr=tmpyrb+2000;   
                                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+11
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_targetI;BT_targetI;BT_targetI;BT_targetI]==1,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_targetI==1,:,:);
                                            end
                                            tmpyr=unique(BT_name(BT_targetI==1));
                                            for tmpyri=1:size(tmpyr,2)
                                                tmpyra=tmpyr{tmpyri};
                                                tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                            end
                                            tmpyr=tmpyrb+2000;  
                                        elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+12
                                            clear tmpyrb
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([BT_targetT;BT_targetT;BT_targetT;BT_targetT]==1,:,:);
                                            else
                                                tmp_exp=tmp_exp(BT_targetT==1,:,:);
                                            end
                                            tmpyr=unique(BT_name(BT_targetT==1));
                                            for tmpyri=1:size(tmpyr,2)
                                                tmpyra=tmpyr{tmpyri};
                                                tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                            end
                                            tmpyr=tmpyrb+2000; 
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+13 %% TD no obs only
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat<34 & BT_drops'==0,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat<34 & BT_drops'==0) BT_storm(BT_cat<34 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat<34 & BT_drops'==0));
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+14 % TS no obs only
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=34 & BT_cat<63 & BT_drops'==0,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_cat>=34 & BT_cat<63 & BT_drops'==0) BT_storm(BT_cat>=34 & BT_cat<63 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;                
                                        tmpnm=unique(BT_name(BT_cat>=34 & BT_cat<63 & BT_drops'==0));
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+15 % MN no obs only
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=63 & BT_cat<95 & BT_drops'==0,:,:);
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=63 & BT_cat<95 & BT_drops'==0) BT_storm(BT_cat>=63 & BT_cat<95 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=63 & BT_cat<95 & BT_drops'==0));
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+16 % MJ no obs only
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=96 & BT_drops'==0,:,:);
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=96 & BT_drops'==0) BT_storm(BT_cat>=96 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=96 & BT_drops'==0)); 
                                     elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+17 % N30
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat>=30 & BT_drops'==0,:,:);
                                         end                     
                                        tmpyr=unique([BT_year(BT_lat>=30 & BT_drops'==0) BT_storm(BT_lat>=30 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat>=30 & BT_drops'==0));
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18 % S30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat<30 & BT_drops'==0,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_lat<30 & BT_drops'==0) BT_storm(BT_lat<30 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat<30 & BT_drops'==0));  
                                    elseif strat>((14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18) && strat<=888 % by year noobs
                                        clear tmpyrb
                                        tmps=sort(unique(BT_year));
                                        tmps=tmps(strat-((14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18));
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_year;BT_year;BT_year;BT_year]==tmps & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_year==tmps & BT_drops'==0,:,:);
                                         end                                                
                                        tmpnm=unique(BT_name(BT_year==tmps & BT_drops'==0));
                                        tmpyr=repmat(tmps+2000,size(tmpnm,2),1);    
                                    elseif strat==888
                                            clear tmpyrb
                                            numlist=[];
                                            for ins=1:size(identnewsub,1)
                                                tmp=identnewsub(ins,:);
                                                for ins2=1:size(BT_date)
                                                    if strcmp(BT_date(ins2,:),tmp)==1
                                                        numlist=[numlist ins2];
                                                    end
                                                end
                                            end
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([numlist;numlist;numlist;numlist],:,:);
                                            else
                                                tmp_exp=tmp_exp(numlist,:,:);
                                            end
                                            tmpyr=unique([BT_year(numlist) BT_storm(numlist)],'rows');
                                            tmpyr=tmpyr(:,1);
                                            tmpyr=tmpyr+2000;
                                            tmpnm=unique(BT_name(numlist));    
                                        end

                                        % Find which experiment to compare to
                                        for tmp=1:size(identexp,1)
                                            if strcmp(identexp(tmp),identexpsigimp)
                                                tmpimp=tmp;
                                            end
                                        end      
                                        tmpu=1:size(identexp,1);
                                        tmpu(tmpu==tmpimp)=[];
                                        plot(-10:89,50*ones(1,100),'Color',[.5 .5 .5],'linewidth',1);
                                        clear fsp2
                                        cntl=1;
                                        for tmp=tmpu
                                            tmp1=tmp_exp(:,:,tmp);
                                            tmp2=tmp_exp(:,:,tmpimp);
                                            tmp3=sign(tmp1-tmp2);
                                            tmp4=tmp3<0;
                                            tmp5=tmp3>0;
                                            tmp6=tmp3==0;
                                            tmptmp=sum(~isnan(tmp3),1);                            
                                            fspa=100*(nansum(tmp4,1)+nansum(tmp6,1)./2)./tmptmp;
                                            fspb=100*(nansum(tmp5,1)+nansum(tmp6,1)./2)./tmptmp;
                                            fsp2(:,tmp)=fspa;
                                            %plot(1:size(fspb,2),fspb,'--s','Color',identexpcolors(tmp,:),'linewidth',.5,'markersize',2); 
                                            l(cntl)=plot(1:size(fspa,2),fspa,'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2); 
                                            cntl=cntl+1;
											sigtest=ttestsc(abs(tmp_exp(:,:,tmp)),abs(tmp_exp(:,:,tmpimp)),'alpha',.05);
                                            sigtest_loc=find(sigtest==1);
                                            sigtest_exp=fspa(sigtest_loc);
                                            plot(sigtest_loc,sigtest_exp,'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                            sigtest=ttestsc(abs(tmp_exp(:,:,tmp)),abs(tmp_exp(:,:,tmpimp)),'alpha',.1);
                                            sigtest_loc1=find(sigtest==1);
                                            sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                            sigtest_exp=fspa(sigtest_loc);
                                            plot(sigtest_loc,sigtest_exp,'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                                        end
                                        set(gca,'plotboxaspectratio',[1 1 1])
                                        xlabel('Forecast Lead Time (h)','fontsize',20)
                                        ylabel(tmp_ytitle,'fontsize',20)
                                        set(gca,'fontsize',20)
                                        box on
                                        if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                            if mod(identmaxfhr*3,12)==0
                                                xlim([1 ((identmaxfhr*3))/skiphr+1])
                                            else
                                                xlim([1 ((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1]) 
                                            end
                                        else
                                            if mod(identmaxfhr*3-3,12)==0
                                                xlim([1 ((identmaxfhr*3)-3)/skiphr+1])
                                            else
                                                xlim([1 ((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1]) 
                                            end
                                        end  
                                        ylim([25 75])
                                        set(gca,'xtick',1:skiptick:50)
                                        set(gca,'xticklabel',{'0','12','24','36','48','60','72','84','96','108','120','132'}) 
                                        grid on
                                        set(gca,'gridcolor','k','gridalpha',.4,'ygrid','off')
                                        set(gca,'fontsize',20)      
                                        hold off
                                        box on
                                        lh=legend(l,identexpshort(tmpu),'location','northeast');
										lh.FontSize=10;
                                        set(gcf,'Units','inches');
                                        a1Pos = get(gca,'Position');
                                        set(gcf, 'InvertHardcopy', 'off')
                                        set(gcf,'Units','inches');
                                        screenposition = get(gcf,'Position');
                                        set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                        set(gcf, 'InvertHardcopy', 'off')
                                        text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')



                                        if strat==1
                                            if fspsub==2
                                                text(1,1.03,['\textbf{Errors $<$5 Removed}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                            end
                                        else
                                            text(1,1.03,['\textbf{SUBSET: ',upper(stname),'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                            if fspsub==2
                                                text(1,1.065,['\textbf{Errors $<$5 Removed}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                            end
                                        end                
                                        tmpuv = unique(tmpyr);
                                        tmpn  = histc(tmpyr,tmpuv); 
                                        tmpphrase='';
                                        for tmpdr=1:length(tmpn)
                                            if tmpdr==length(tmpn)
                                                tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),')'];
                                            else
                                                tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),') $\mid$ '];
                                            end
                                        end    
                                        text(0,1.03,['\textbf{STORMS: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                        ax=gca;
                                        box on
                                        set(ax, 'Layer', 'bottom')
                                        ax.LineWidth=1; 
                                        set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                        set(gca,'Color',[.9 .9 .9])            
                                        if sum(~isnan((diff(fspa))))==0
                                            tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                            set(tx, 'Layer', 'front')
                                        end
                                        % Mean Value            
                                        tmpstr=['Mean: '];
                                        tmpstrmean=nanmean(fsp2,1);
                                        tmpstrmean=(find(tmpstrmean~=0));
                                        for tmp=tmpstrmean
                                            if tmp==tmpstrmean(end)
                                                tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(fsp2(:,tmp)),2)),'%'];
                                            else
                                                tmpstr=[tmpstr, '\color[rgb]{',num2str(identexpcolors(tmp,:)),'}',num2str(round(nanmean(fsp2(:,tmp)),2)),'% \color[rgb]{0,0,0}| '];
                                            end
                                        end
                                        if sum(sum(~isnan(fsp2)))==0
                                            tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                            set(tx, 'Layer', 'front')          
                                        else
                                            tx=text(0.98,0.06,tmpstr,'HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                            set(tx, 'Layer', 'front')
                                        end 
                                        b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                                        set(b,'plotboxaspectratio',[1 1 1])
                                        set(b,'Color','none');
                                        set(b,'YColor','none');
                                        set(b,'tickdir','both')
                                        set(b,'XColor',[0 0 0]);
                                        set(b,'ytick',[]);
                                        if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                            if mod(identmaxfhr*3,12)==0
                                                xlim(b,[1 ((identmaxfhr*3))/skiphr+1])
                                                tmpxend=((identmaxfhr*3))/skiphr+1;
                                            else
                                                xlim(b,[1 ((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1]) 
                                                tmpxend=((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1;
                                            end
                                        else
                                            if mod(identmaxfhr*3-3,12)==0
                                                xlim(b,[1 ((identmaxfhr*3)-3)/skiphr+1])
                                                tmpxend=((identmaxfhr*3)-3)/skiphr+1;
                                            else
                                                xlim(b,[1 ((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1]) 
                                                tmpxend=((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1;
                                            end
                                        end        
                                        set(b,'xtick',[1:skiptick:50]); 
                                        trkerr_exp_fcnt=zeros(1,tmpxend);            
                                        trkerr_exp_fcnt1=zeros(1,tmpxend);            
                                        trkerr_exp_fcnt2=zeros(1,tmpxend);
                                        for tmp=1:size(identexp,1)
                                            cntexp(:,tmp)=sum(~isnan(tmp_exp(:,1:skip:end,tmp)),1);
                                        end  
                                    %     if size(identexp,1)==2
                                    %         trkerr_exp_fcnt1(1:size(sum(~isnan(tmp_exp(:,1:skip:end,1)),1),2))=sum(~isnan(tmp_exp(:,1:skip:end,1)),1);            
                                    %         trkerr_exp_fcnt2(1:size(sum(~isnan(tmp_exp(:,1:skip:end,2)),1),2))=sum(~isnan(tmp_exp(:,1:skip:end,2)),1);            
                                    %         for i=1:size(trkerr_exp_fcnt1,2)
                                    %             if trkerr_exp_fcnt1(i)==trkerr_exp_fcnt2(i)
                                    %                 b.XTickLabel{i} = num2str(trkerr_exp_fcnt1(i));
                                    %             else
                                    %                 b.XTickLabel{i} = ['\color[rgb]{',num2str(identexpcolors(1,:)),'}',num2str(trkerr_exp_fcnt1(i)),'\color[rgb]{0,0,0}/\color[rgb]{',num2str(identexpcolors(2,:)),'}',num2str(trkerr_exp_fcnt2(i)),''];
                                    %             end
                                    %         end
                                    %     elseif size(identexp,1)>2
                                    %         maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1));         
                                    %         first=min(maxmin');    
                                    %         second=max(maxmin');
                                    %         for i=1:size(maxmin,1)
                                    %             if first(i)==second(i)
                                    %                 b.XTickLabel{i} = num2str(first(i));
                                    %             else
                                    %                 b.XTickLabel{i} = [num2str(first(i)),'/',num2str(second(i)),''];
                                    %             end
                                    %         end
                                    %     end
                                        set(gca,'fontsize',10)
                                        xlabel('# fcsts','Position',[-.5 0],'VerticalAlignment','top','HorizontalAlignment','center','Rotation',90,'units','normalized'); 
                                        set(gca,'position',[spPos(1)+.02 spPos(2)-.05 spPos(3) spPos(4)])
                                        screenposition = get(gcf,'Position');
                                        set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                        set(gcf, 'InvertHardcopy', 'off')
                                        % Create a text box at every Tick label position
                                        maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1)); 
                                        xTicks0 = get(gca, 'xticklabel');
                                        xTicks = get(gca, 'xtick');
                                        if size(maxmin,1)<size(xTicks0,1)
                                            for n=1:size(xTicks0,1)-size(maxmin,1)
                                                maxmin(end+n,:)=0;
                                            end
                                        end
                                        set(b,'xticklabels',[]);
                                        minY =0;
                                        VerticalOffset1=0.03;
                                        HorizontalOffset = 0.2;
                                        for xx = 1:size(xTicks0,1)
                                            tmptxt0=maxmin(xx,:);
                                            tmplines=size(tmptxt0,2);
                                            if size(unique(tmptxt0),2)==1
                                                tmptxt1=num2str(tmptxt0(1)); 
                                                text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)                    
                                            else
                                                for n=1:tmplines
                                                    tmptxt1=[];                            
                                                    tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(n,:)),'}',num2str(tmptxt0(n))];                           
                                                    if n==1
                                                        text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)
                                                    else
                                                        text(xTicks(xx), minY - (VerticalOffset1+(.02*(n-1))),tmptxt1,'horizontalalignment','center','fontsize',10)                                
                                                    end
                                                end    
                                            end
                                        end
                                        f = getframe(hfig);
                                        if fspsub==1
                                            imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/COMP_',tmp_name,'_',stname,'.png'],'png');
                                        else
                                            imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/COMP_',tmp_name,'_',stname,'_removed.png'],'png');
                                        end
                                        close all
                                    end                                        
                                end
                                % Create Graphics: trk, int, spd bias - bt-gh vs. bt-deny
                                for plt=[2:18,21:23] % no across or along for bias since already in error
                                    clear l cntexp
                                    set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                    hfig=figure;
                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                    ax1=subplot(3,4,[1:8]);
                                    hold on
                                    if plt==1
                                         tmp_exp=trkerr_exp(:,1:skip:end,:);
                                         tmp_name='trkbias';
                                         tmp_title='Track Bias (km)';
                                         tmp_ytitle='Bias (km)';
                                    elseif plt==2
                                        tmp_exp=interr_exp(:,1:skip:end,:);
                                        tmp_name='presbias';
                                        tmp_title='Pressure Bias (hPa)';
                                        tmp_ytitle='Bias (hPa)';
                                    elseif plt==3
                                        tmp_exp=spderr_exp(:,1:skip:end,:);
                                        tmp_name='spdbias';
                                        tmp_title='Wind Speed Bias (kts)';
                                        tmp_ytitle='Bias (kts)';
                                     elseif plt==4
                                        tmp_exp=ne34err_exp(:,1:skip:end,:);
                                        tmp_name='ne34bias';
                                        tmp_title='R34 NEQ Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                        yrange=[-200 200];
                                    elseif plt==5
                                        tmp_exp=se34err_exp(:,1:skip:end,:);
                                        tmp_name='se34bias';
                                        tmp_title='R34 SEQ Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                        yrange=[-200 200];
                                    elseif plt==6
                                        tmp_exp=sw34err_exp(:,1:skip:end,:);
                                        tmp_name='sw34bias';
                                        tmp_title='R34 SWQ Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                        yrange=[-200 200];
                                    elseif plt==7
                                        tmp_exp=nw34err_exp(:,1:skip:end,:);
                                        tmp_name='nw34bias';
                                        tmp_title='R34 NWQ Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                        yrange=[-200 200];
                                    elseif plt==8
                                        tmp_exp=ne50err_exp(:,1:skip:end,:);
                                        tmp_name='ne50bias';
                                        tmp_title='R50 NEQ Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                        yrange=[-200 200];
                                    elseif plt==9
                                        tmp_exp=se50err_exp(:,1:skip:end,:);
                                        tmp_name='se50bias';
                                        tmp_title='R50 SEQ Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                        yrange=[-200 200];
                                    elseif plt==10
                                        tmp_exp=sw50err_exp(:,1:skip:end,:);
                                        tmp_name='sw50bias';
                                        tmp_title='R50 SWQ Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                        yrange=[-200 200];
                                    elseif plt==11
                                        tmp_exp=nw50err_exp(:,1:skip:end,:);
                                        tmp_name='nw50bias';
                                        tmp_title='R50 NWQ Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                        yrange=[-200 200];
                                    elseif plt==12
                                        tmp_exp=ne64err_exp(:,1:skip:end,:);
                                        tmp_name='ne64bias';
                                        tmp_title='R64 NEQ Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                        yrange=[-200 200];
                                    elseif plt==13
                                        tmp_exp=se64err_exp(:,1:skip:end,:);
                                        tmp_name='se64bias';
                                        tmp_title='R64 SEQ Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                        yrange=[-200 200];
                                    elseif plt==14
                                        tmp_exp=sw64err_exp(:,1:skip:end,:);
                                        tmp_name='sw64bias';
                                        tmp_title='R64 SWQ Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                        yrange=[-200 200];
                                    elseif plt==15
                                        tmp_exp=nw64err_exp(:,1:skip:end,:);
                                        tmp_name='nw64bias';
                                        tmp_title='R64 NWQ Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                        yrange=[-200 200];
                                    elseif plt==16
                                        tmp_exp=poerr_exp(:,1:skip:end,:);
                                        tmp_name='pobias';
                                        tmp_title='Outer Clsd Isbr Prs Bias (hPa)';
                                        tmp_ytitle='Bias (hPa)';
                                    elseif plt==17
                                        tmp_exp=roerr_exp(:,1:skip:end,:);
                                        tmp_name='robias';
                                        tmp_title='Outer Clsd Isbr Rad Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                    elseif plt==18
                                        tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                        tmp_name='rmwbias';
                                        tmp_title='RMW Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                    elseif plt==19
                                        tmp_exp=ateerr_exp(:,1:skip:end,:);
                                        tmp_name='atebias';
                                        tmp_title='Along-Track Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                        yrange=[-500 500];                
                                    elseif plt==20
                                        tmp_exp=xteerr_exp(:,1:skip:end,:);
                                        tmp_name='xtebias';
                                        tmp_title='Across-Track Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                        yrange=[-500 500]; 
                                    elseif plt==21
                                        tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                        tmp_name='34bias';
                                        tmp_title='R34 Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                        yrange=[-100 100];
                                    elseif plt==22
                                        tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                        tmp_name='50bias';
                                        tmp_title='R50 Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                        yrange=[-100 100];
                                    elseif plt==23
                                        tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                        tmp_name='64bias';
                                        tmp_title='R64 Bias (km)';
                                        tmp_ytitle='Bias (km)';
                                        yrange=[-100 100];
                                    end
                                    tmp_exp0=tmp_exp;

                                     % Strat
                                     if strat==1
                                        clear tmpyrb
                                        tmpyr=identdr;
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==2
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_drops==1,:,:);
                                        end
                                        tmpyr=identdr(keepstm);
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==3
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_target==1,:,:);
                                        end
                                        tmpyr=identdr(keepstm);
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==4 % TD
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]<34,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat<34,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_cat<34) BT_storm(BT_cat<34)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat<34));
                                    elseif strat==5 % TS
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=34 & BT_cat<63,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat>=34 & BT_cat<63) BT_storm(BT_cat>=34 & BT_cat<63)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;                
                                        tmpnm=unique(BT_name(BT_cat>=34 & BT_cat<63));
                                    elseif strat==6 % MN
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=63 & BT_cat<95,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat>=63 & BT_cat<95) BT_storm(BT_cat>=63 & BT_cat<95)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=63 & BT_cat<95));
                                    elseif strat==7 % MJ
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=96,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=96,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat>=96) BT_storm(BT_cat>=96)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=96));
                                    elseif strat==8 % N30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]>=30,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat>=30,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_lat>=30) BT_storm(BT_lat>=30)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat>=30));
                                    elseif strat==9 % S30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]<30,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat<30,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_lat<30) BT_storm(BT_lat<30)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat<30));
                                    elseif strat>14 && strat<=14+size(unique(BT_year),1) % by year
                                        clear tmpyrb
                                        tmps=sort(unique(BT_year));
                                        tmps=tmps(strat-14);
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_year;BT_year;BT_year;BT_year]==tmps,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_year==tmps,:,:);
                                        end                    
                                        tmpnm=unique(BT_name(BT_year==tmps));
                                        tmpyr=repmat(tmps+2000,size(tmpnm,2),1);
                                    elseif strat==14+size(unique(BT_year),1)+1 %% TD strat obs only
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat<34 & BT_drops'==1,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat<34 & BT_drops'==1) BT_storm(BT_cat<34 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat<34 & BT_drops'==1));
                                    elseif strat==14+size(unique(BT_year),1)+2 % TS
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=34 & BT_cat<63 & BT_drops'==1,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_cat>=34 & BT_cat<63 & BT_drops'==1) BT_storm(BT_cat>=34 & BT_cat<63 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;                
                                        tmpnm=unique(BT_name(BT_cat>=34 & BT_cat<63 & BT_drops'==1));
                                    elseif strat==14+size(unique(BT_year),1)+3 % MN
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=63 & BT_cat<95 & BT_drops'==1,:,:);
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=63 & BT_cat<95 & BT_drops'==1) BT_storm(BT_cat>=63 & BT_cat<95 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=63 & BT_cat<95 & BT_drops'==1));
                                    elseif strat==14+size(unique(BT_year),1)+4 % MJ
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=96 & BT_drops'==1,:,:);
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=96 & BT_drops'==1) BT_storm(BT_cat>=96 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=96 & BT_drops'==1));
                                    elseif strat==14+size(unique(BT_year),1)+5 % N30
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat>=30 & BT_drops'==1,:,:);
                                         end                     
                                        tmpyr=unique([BT_year(BT_lat>=30 & BT_drops'==1) BT_storm(BT_lat>=30 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat>=30 & BT_drops'==1));
                                    elseif strat==14+size(unique(BT_year),1)+6 % S30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat<30 & BT_drops'==1,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_lat<30 & BT_drops'==1) BT_storm(BT_lat<30 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat<30 & BT_drops'==1));
                                    elseif strat>14+size(unique(BT_year),1)+6 && strat<=(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1) % by year% by year
                                        clear tmpyrb
                                        tmps=sort(unique(BT_year));
                                        tmps=tmps(strat-(14+size(unique(BT_year),1)+6));
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_year;BT_year;BT_year;BT_year]==tmps & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_year==tmps & BT_drops'==1,:,:);
                                         end                                                
                                        tmpnm=unique(BT_name(BT_year==tmps & BT_drops'==1));
                                        tmpyr=repmat(tmps+2000,size(tmpnm,2),1); 
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+1
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_drops==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_drops==0));                            
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+2
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_target==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_target==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;  
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+3
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsB==1,:,:);
                                        end
                                        tmpyr=identdr(keepstm);
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+4
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetB==1,:,:);
                                        end
                                        tmpyr=identdr(keepstm);
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;   
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+5
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsB==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_dropsB==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+6
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetB==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_targetB==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+7
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==1 & [BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsB==1 & BT_drops==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_dropsB==1 & BT_drops==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+8
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==1 & [BT_target;BT_target;BT_target;BT_target]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetB==1 & BT_target==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_targetB==1 & BT_target==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                     elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+9
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsI;BT_dropsI;BT_dropsI;BT_dropsI]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsI==1,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_dropsI==1));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;  
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+10
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsT;BT_dropsT;BT_dropsT;BT_dropsT]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsT==1,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_dropsT==1));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+11
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetI;BT_targetI;BT_targetI;BT_targetI]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetI==1,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_targetI==1));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;  
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+12
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetT;BT_targetT;BT_targetT;BT_targetT]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetT==1,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_targetT==1));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;  
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+13 %% TD no obs only
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat<34 & BT_drops'==0,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat<34 & BT_drops'==0) BT_storm(BT_cat<34 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat<34 & BT_drops'==0));
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+14 % TS no obs only
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=34 & BT_cat<63 & BT_drops'==0,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_cat>=34 & BT_cat<63 & BT_drops'==0) BT_storm(BT_cat>=34 & BT_cat<63 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;                
                                        tmpnm=unique(BT_name(BT_cat>=34 & BT_cat<63 & BT_drops'==0));
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+15 % MN no obs only
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=63 & BT_cat<95 & BT_drops'==0,:,:);
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=63 & BT_cat<95 & BT_drops'==0) BT_storm(BT_cat>=63 & BT_cat<95 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=63 & BT_cat<95 & BT_drops'==0));
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+16 % MJ no obs only
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=96 & BT_drops'==0,:,:);
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=96 & BT_drops'==0) BT_storm(BT_cat>=96 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=96 & BT_drops'==0));                                         
                                     elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+17 % N30
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat>=30 & BT_drops'==0,:,:);
                                         end                     
                                        tmpyr=unique([BT_year(BT_lat>=30 & BT_drops'==0) BT_storm(BT_lat>=30 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat>=30 & BT_drops'==0));
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18 % S30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat<30 & BT_drops'==0,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_lat<30 & BT_drops'==0) BT_storm(BT_lat<30 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat<30 & BT_drops'==0)); 
                                    elseif strat>((14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18) && strat<=888 % by year noobs
                                        clear tmpyrb
                                        tmps=sort(unique(BT_year));
                                        tmps=tmps(strat-((14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18));
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_year;BT_year;BT_year;BT_year]==tmps & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_year==tmps & BT_drops'==0,:,:);
                                         end                                                
                                        tmpnm=unique(BT_name(BT_year==tmps & BT_drops'==0));
                                        tmpyr=repmat(tmps+2000,size(tmpnm,2),1);    
                                    elseif strat==888
                                            clear tmpyrb
                                            numlist=[];
                                            for ins=1:size(identnewsub,1)
                                                tmp=identnewsub(ins,:);
                                                for ins2=1:size(BT_date)
                                                    if strcmp(BT_date(ins2,:),tmp)==1
                                                        numlist=[numlist ins2];
                                                    end
                                                end
                                            end
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([numlist;numlist;numlist;numlist],:,:);
                                            else
                                                tmp_exp=tmp_exp(numlist,:,:);
                                            end
                                            tmpyr=unique([BT_year(numlist) BT_storm(numlist)],'rows');
                                            tmpyr=tmpyr(:,1);
                                            tmpyr=tmpyr+2000;
                                            tmpnm=unique(BT_name(numlist));    
                                    end

                                    for tmp=1:size(identexp,1)
                                        l(tmp)=plot(1:size(tmp_exp,2),nanmean(tmp_exp(:,:,tmp),1),'-s','Color',identexpcolors(tmp,:),'linewidth',2,'markersize',2);
                                    end           
                                    % Find which experiment to compare to
                                    for tmp=1:size(identexp,1)
                                        if strcmp(identexp(tmp),identexpsigimp)
                                            tmpimp=tmp;
                                        end
                                    end
                                    plot(-10:89,zeros(1,100),'Color',[.5 .5 .5],'linewidth',1);
                                    for tmp=1:size(identexp,1)
                                        sigtest=ttestsc(abs(tmp_exp(:,:,tmp)),abs(tmp_exp(:,:,tmpimp)),'alpha',.05);
                                        sigtest_loc=find(sigtest==1);
                                        sigtest_exp=nanmean(tmp_exp(:,sigtest_loc,:),1);
                                        for tmpi=tmp
                                            plot(sigtest_loc,sigtest_exp(:,:,tmpi),'s','Color','k','markerfacecolor',identexpcolors(tmp,:),'markersize',9)
                                        end
                                        sigtest=ttestsc(abs(tmp_exp(:,:,tmp)),abs(tmp_exp(:,:,tmpimp)),'alpha',.1);
                                        sigtest_loc1=find(sigtest==1);
                                        sigtest_loc=setdiff(sigtest_loc1,sigtest_loc);
                                        sigtest_exp=nanmean(tmp_exp(:,sigtest_loc,:),1);
                                        for tmpi=tmp
                                            plot(sigtest_loc,sigtest_exp(:,:,tmpi),'o','Color','k','markersize',8,'markerfacecolor',identexpcolors(tmp,:))
                                        end
                                    end   
                                    set(gca,'plotboxaspectratio',[1 1 1])
                                    xlabel('Forecast Lead Time (h)','fontsize',20)
                                    ylabel(tmp_ytitle,'fontsize',20)
                                    set(gca,'fontsize',20)
                                    box on
                                    if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                        if mod(identmaxfhr*3,12)==0
                                            xlim([1 ((identmaxfhr*3))/skiphr+1])
                                        else
                                            xlim([1 ((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1]) 
                                        end
                                    else
                                        if mod(identmaxfhr*3-3,12)==0
                                            xlim([1 ((identmaxfhr*3)-3)/skiphr+1])
                                        else
                                            xlim([1 ((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1]) 
                                        end
                                    end
                                    % YRANGE
                                    clear allquad
                                    allquad(1)=(max(max(nanmean((ne34err_exp(:,1:skip:end,:)),1))));
                                    allquad(2)=(max(max(nanmean((se34err_exp(:,1:skip:end,:)),1))));
                                    allquad(3)=(max(max(nanmean((nw34err_exp(:,1:skip:end,:)),1))));
                                    allquad(4)=(max(max(nanmean((sw34err_exp(:,1:skip:end,:)),1))));
                                    allquad(5)=(max(max(nanmean((ne50err_exp(:,1:skip:end,:)),1))));
                                    allquad(6)=(max(max(nanmean((se50err_exp(:,1:skip:end,:)),1))));
                                    allquad(7)=(max(max(nanmean((nw50err_exp(:,1:skip:end,:)),1))));
                                    allquad(8)=(max(max(nanmean((sw50err_exp(:,1:skip:end,:)),1))));
                                    allquad(9)=(max(max(nanmean((ne64err_exp(:,1:skip:end,:)),1))));
                                    allquad(10)=(max(max(nanmean((se64err_exp(:,1:skip:end,:)),1))));
                                    allquad(11)=(max(max(nanmean((nw64err_exp(:,1:skip:end,:)),1))));
                                    allquad(12)=(max(max(nanmean((sw64err_exp(:,1:skip:end,:)),1))));
                                    allquadmax=max(max(max(allquad)));
                                    allquadmin=min(min(min(allquad)));
                                    tmpvalq=max(abs(allquadmin),abs(allquadmax));
                                    if isnan(tmpvalq)==1
                                        tmpvalq=0;
                                    end
                                    if numel(num2str(tmpvalq))==3
                                        addfacq=100;
                                    elseif numel(num2str(tmpvalq))==2
                                        addfacq=20;
                                    else
                                        addfacq=20;
                                    end
                                    if numel(num2str(round(max(max(nanmean((tmp_exp0),1))))))==3
                                        addfac=100;
                                    elseif numel(num2str(round(max(max(nanmean((tmp_exp0),1))))))==2
                                        addfac=20;
                                    else
                                        addfac=20;
                                    end
                                    if plt<=3 || (plt>=16 && plt<=18) % -end-end
                                        tmpmin=min(min(nanmean((tmp_exp0),1)));
                                        tmpmax=max(max(nanmean((tmp_exp0),1)));
                                        tmpval=max(abs(tmpmin),abs(tmpmax));
                                        if isnan(tmpval)==1
                                            tmpval=0;
                                        end
                                        yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                                    elseif plt==19 || plt==20 % -end end 
                                        tmpmin=min(min(nanmean((tmp_exp0),1)));
                                        tmpmax=max(max(nanmean((tmp_exp0),1)));
                                        tmpval=max(abs(tmpmin),abs(tmpmax));
                                        if isnan(tmpval)==1
                                            tmpval=0;
                                        end
                                        yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                                    elseif (plt>=4 && plt<=15) || plt>=21%quad
                                        yrange=[-round((tmpvalq+addfacq)/10)*10 round((tmpvalq+addfacq)/10)*10];
                                    end
                    %                                  
                    %                 if plt==1
                    %                     for lo=1:50
                    %                         if max(nanmean(tmp_exp,1))>100*lo
                    %                             ylim([-200-100*lo 200+100*lo])
                    %                         end
                    %                     end
                    %                 elseif plt==2 || plt==3 || plt>15 && plt <19
                    %                     for lo=1:2:50
                    %                         if max(nanmean(tmp_exp,1))>5*lo
                    %                             ylim([-10-5*(lo+1) 10+5*(lo+1)])
                    %                         end
                    %                     end 
                    %                 else
                                        ylim(yrange)
                    %                 end
                                    set(gca,'xtick',1:skiptick:50)
                                    set(gca,'xticklabel',{'0','12','24','36','48','60','72','84','96','108','120','132'}) 
                                    grid on
                                    set(gca,'gridcolor','k','gridalpha',.4,'ygrid','off')
                                    set(gca,'fontsize',20)      
                                    hold off
                                    box on
                                    lh=legend(l,identexpshort,'location','northeast');
									lh.FontSize=10;
                                    set(gcf,'Units','inches');
                                    a1Pos = get(gca,'Position');
                                    set(gcf, 'InvertHardcopy', 'off')
                                    set(gcf,'Units','inches');
                                    screenposition = get(gcf,'Position');
                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                    set(gcf, 'InvertHardcopy', 'off')
                                    text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                    if strat==1
                                    else
                                        text(1,1.03,['\textbf{SUBSET: ',upper(stname),'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                    end                
                                    tmpuv = unique(tmpyr);
                                    tmpn  = histc(tmpyr,tmpuv); 
                                    tmpphrase='';
                                    for tmpdr=1:length(tmpn)
                                        if tmpdr==length(tmpn)
                                            tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),')'];
                                        else
                                            tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),') $\mid$ '];
                                        end
                                    end    
                                    text(0,1.03,['\textbf{STORMS: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                    ax=gca;
                                    box on
                                    set(ax, 'Layer', 'bottom')
                                    ax.LineWidth=1; 
                                    set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                    set(gca,'Color',[.9 .9 .9])
                                    for tmp=1:size(identexp,1)
                                        cntexp(:,tmp)=sum(~isnan(tmp_exp(:,1:skip:end,tmp)),1);
                                    end
                                    if sum([cntexp(:)])==0
                                        tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                        set(tx, 'Layer', 'front')
                                    end
                                    if plt==1 || plt>=4 && plt<=15 || plt==17 || plt==18 || plt>20
                                         tx=text(0.02,0.06,'Too Small','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         tx=text(0.02,0.98,'Too Large','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         set(tx, 'Layer', 'front')  
                                    elseif plt==2 || plt==16
                                         tx=text(0.02,0.06,'Too Low','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         tx=text(0.02,0.98,'Too High','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         set(tx, 'Layer', 'front')  
                                    elseif plt==3
                                         tx=text(0.02,0.06,'Too Slow','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         tx=text(0.02,0.98,'Too Fast','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         set(tx, 'Layer', 'front') 
                                    elseif plt==19
                                         tx=text(0.02,0.06,'Slower than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         tx=text(0.02,0.98,'Faster than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         set(tx, 'Layer', 'front')            
                                    elseif plt==20
                                         tx=text(0.02,0.06,'Left of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         tx=text(0.02,0.98,'Right of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         set(tx, 'Layer', 'front')            
                                    end
                                    b=axes('Position',[a1Pos(1) a1Pos(2)-.11 a1Pos(3) a1Pos(4)]);
                                    set(b,'plotboxaspectratio',[1 1 1])
                                    set(b,'Color','none');
                                    set(b,'YColor','none');
                                    set(b,'tickdir','both')
                                    set(b,'XColor',[0 0 0]);
                                    set(b,'ytick',[]);
                                    if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                        if mod(identmaxfhr*3,12)==0
                                            xlim(b,[1 ((identmaxfhr*3))/skiphr+1])
                                            tmpxend=((identmaxfhr*3))/skiphr+1;
                                        else
                                            xlim(b,[1 ((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1]) 
                                            tmpxend=((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1;
                                        end
                                    else
                                        if mod(identmaxfhr*3-3,12)==0
                                            xlim(b,[1 ((identmaxfhr*3)-3)/skiphr+1])
                                            tmpxend=((identmaxfhr*3)-3)/skiphr+1;
                                        else
                                            xlim(b,[1 ((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1]) 
                                            tmpxend=((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1;
                                        end
                                    end        
                                    set(b,'xtick',[1:skiptick:50]);
                                    trkerr_exp_fcnt=zeros(1,tmpxend);            
                                    trkerr_exp_fcnt1=zeros(1,tmpxend);            
                                    trkerr_exp_fcnt2=zeros(1,tmpxend);
                                    for tmp=1:size(identexp,1)
                                        cntexp(:,tmp)=sum(~isnan(tmp_exp(:,1:skip:end,tmp)),1);
                                    end  
                                %     if size(identexp,1)==2
                                %         trkerr_exp_fcnt1(1:size(sum(~isnan(tmp_exp(:,1:skip:end,1)),1),2))=sum(~isnan(tmp_exp(:,1:skip:end,1)),1);            
                                %         trkerr_exp_fcnt2(1:size(sum(~isnan(tmp_exp(:,1:skip:end,2)),1),2))=sum(~isnan(tmp_exp(:,1:skip:end,2)),1);            
                                %         for i=1:size(trkerr_exp_fcnt1,2)
                                %             if trkerr_exp_fcnt1(i)==trkerr_exp_fcnt2(i)
                                %                 b.XTickLabel{i} = num2str(trkerr_exp_fcnt1(i));
                                %             else
                                %                 b.XTickLabel{i} = ['\color[rgb]{',num2str(identexpcolors(1,:)),'}',num2str(trkerr_exp_fcnt1(i)),'\color[rgb]{0,0,0}/\color[rgb]{',num2str(identexpcolors(2,:)),'}',num2str(trkerr_exp_fcnt2(i)),''];
                                %             end
                                %         end
                                %     elseif size(identexp,1)>2
                                %         maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1));         
                                %         first=min(maxmin');    
                                %         second=max(maxmin');
                                %         for i=1:size(maxmin,1)
                                %             if first(i)==second(i)
                                %                 b.XTickLabel{i} = num2str(first(i));
                                %             else
                                %                 b.XTickLabel{i} = [num2str(first(i)),'/',num2str(second(i)),''];
                                %             end
                                %         end
                                %     end
                                    %if size(trkerr_gh,2)*3<max(0:size(1:skiptick:tmpxend,2):size(1:skiptick:tmpxend,2)*11)
                                    %    trkerr_gh_fcnt(end-1:end)=0;
                                    %end
                                    set(gca,'fontsize',10)
                                    xlabel('# fcsts','Position',[-.5 0],'VerticalAlignment','top','HorizontalAlignment','center','Rotation',90,'units','normalized'); 
                                    set(gca,'position',[spPos(1)+.02 spPos(2)-.05 spPos(3) spPos(4)])
                                    screenposition = get(gcf,'Position');
                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                    set(gcf, 'InvertHardcopy', 'off')
                                    % Create a text box at every Tick label position
                                    maxmin=squeeze(sum(~isnan(tmp_exp(:,1:skip:end,:)),1)); 
                                    xTicks0 = get(gca, 'xticklabel');
                                    xTicks = get(gca, 'xtick');
                                    if size(maxmin,1)<size(xTicks0,1)
                                        for n=1:size(xTicks0,1)-size(maxmin,1)
                                            maxmin(end+n,:)=0;
                                        end
                                    end
                                    set(b,'xticklabels',[]);
                                    minY =0;
                                    VerticalOffset1=0.03;
                                    HorizontalOffset = 0.2;
                                    for xx = 1:size(xTicks0,1)
                                        tmptxt0=maxmin(xx,:);
                                        tmplines=size(tmptxt0,2);
                                        if size(unique(tmptxt0),2)==1
                                            tmptxt1=num2str(tmptxt0(1)); 
                                            text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)                    
                                        else
                                            for n=1:tmplines
                                                tmptxt1=[];                            
                                                tmptxt1=[tmptxt1,'\color[rgb]{',num2str(identexpcolors(n,:)),'}',num2str(tmptxt0(n))];                           
                                                if n==1
                                                    text(xTicks(xx), minY - VerticalOffset1,tmptxt1,'horizontalalignment','center','fontsize',10)
                                                else
                                                    text(xTicks(xx), minY - (VerticalOffset1+(.02*(n-1))),tmptxt1,'horizontalalignment','center','fontsize',10)                                
                                                end
                                            end    
                                        end
                                    end
                                    f = getframe(hfig);
                                    imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/COMP_',tmp_name,'_',stname,'.png'],'png');
                                    close all
                                end
                                % Create Contribution Graphics
                                for plt=[1:18,21:23] % no across or along for bias
                                    clear l cntexp
                                    set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                    hfig=figure;
                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                    ax1=subplot(3,4,[1:8]);
                                    hold on
                                    if plt==1
                                         tmp_exp=trkerr_exp(:,1:skip:end,:);
                                         tmp_name='trkerr';
                                         tmp_title='Percent Contribution to Track Error (\%)';
                                         tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==2
                                        tmp_exp=interr_exp(:,1:skip:end,:);
                                        tmp_name='preserr';
                                        tmp_title='Percent Contribution to Pressure Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==3
                                        tmp_exp=spderr_exp(:,1:skip:end,:);
                                        tmp_name='spderr';
                                        tmp_title='Percent Contribution to Wind Speed Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                     elseif plt==4
                                        tmp_exp=ne34err_exp(:,1:skip:end,:);
                                        tmp_name='ne34err';
                                        tmp_title='Percent Contribution to R34 NEQ Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==5
                                        tmp_exp=se34err_exp(:,1:skip:end,:);
                                        tmp_name='se34err';
                                        tmp_title='Percent Contribution to R34 SEQ Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==6
                                        tmp_exp=sw34err_exp(:,1:skip:end,:);
                                        tmp_name='sw34err';
                                        tmp_title='Percent Contribution to R34 SWQ Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==7
                                        tmp_exp=nw34err_exp(:,1:skip:end,:);
                                        tmp_name='nw34err';
                                        tmp_title='Percent Contribution to R34 NWQ Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==8
                                        tmp_exp=ne50err_exp(:,1:skip:end,:);
                                        tmp_name='ne50err';
                                        tmp_title='Percent Contribution to R50 NEQ Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==9
                                        tmp_exp=se50err_exp(:,1:skip:end,:);
                                        tmp_name='se50err';
                                        tmp_title='Percent Contribution to R50 SEQ Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==10
                                        tmp_exp=sw50err_exp(:,1:skip:end,:);
                                        tmp_name='sw50err';
                                        tmp_title='Percent Contribution to R50 SWQ Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==11
                                        tmp_exp=nw50err_exp(:,1:skip:end,:);
                                        tmp_name='nw50err';
                                        tmp_title='Percent Contribution to R50 NWQ Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==12
                                        tmp_exp=ne64err_exp(:,1:skip:end,:);
                                        tmp_name='ne64err';
                                        tmp_title='Percent Contribution to R64 NEQ Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==13
                                        tmp_exp=se64err_exp(:,1:skip:end,:);
                                        tmp_name='se64err';
                                        tmp_title='Percent Contribution to R64 SEQ Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==14
                                        tmp_exp=sw64err_exp(:,1:skip:end,:);
                                        tmp_name='sw64err';
                                        tmp_title='Percent Contribution to R64 SWQ Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                        yrange=[-100 100];                 
                                    elseif plt==15
                                        tmp_exp=nw64err_exp(:,1:skip:end,:);
                                        tmp_name='nw64err';
                                        tmp_title='Percent Contribution to R64 NWQ Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==16
                                        tmp_exp=poerr_exp(:,1:skip:end,:);
                                        tmp_name='poerr';
                                        tmp_title='Percent Contribution to Outer Clsd Isbr Prs Improvement (hPa)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==17
                                        tmp_exp=roerr_exp(:,1:skip:end,:);
                                        tmp_name='roerr';
                                        tmp_title='Percent Contribution to Outer Clsd Isbr Rad Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==18
                                        tmp_exp=rmwerr_exp(:,1:skip:end,:);
                                        tmp_name='rmwerr';
                                        tmp_title='Percent Contribution to RMW Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==19
                                        tmp_exp=ateerr_exp(:,1:skip:end,:);
                                        tmp_name='ateerr';
                                        tmp_title='Percent Contribution to Along-Track Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==20
                                        tmp_exp=xteerr_exp(:,1:skip:end,:);
                                        tmp_name='xteerr';
                                        tmp_title='Percent Contribution to Across-Track Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==21
                                        tmp_exp=cat(1,ne34err_exp(:,1:skip:end,:),nw34err_exp(:,1:skip:end,:),se34err_exp(:,1:skip:end,:),sw34err_exp(:,1:skip:end,:));
                                        tmp_name='34err';
                                        tmp_title='Percent Contribution to R34 Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==22
                                        tmp_exp=cat(1,ne50err_exp(:,1:skip:end,:),nw50err_exp(:,1:skip:end,:),se50err_exp(:,1:skip:end,:),sw50err_exp(:,1:skip:end,:));
                                        tmp_name='50err';
                                        tmp_title='Percent Contribution to R50 Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    elseif plt==23
                                        tmp_exp=cat(1,ne64err_exp(:,1:skip:end,:),nw64err_exp(:,1:skip:end,:),se64err_exp(:,1:skip:end,:),sw64err_exp(:,1:skip:end,:));
                                        tmp_name='64err';
                                        tmp_title='Percent Contribution to R64 Error (\%)';
                                        tmp_ytitle='Error Contribution (\%)';
                                    end
                                    if plt <19 || plt >20
                                        tmp_exp=abs(tmp_exp); % added for MAE
                                    end

                                    % Strat
                                    if strat==1
                                        clear tmpyrb
                                        tmpyr=identdr;
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb'+2000;
                                        tmpnm=unique(BT_name);
                                         if plt>=21 && plt<=23
                                            BTnm=[BT_name BT_name BT_name BT_name];
                                        else
                                             BTnm=BT_name;
                                        end
                                   elseif strat==2
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==1,:,:);
                                             BTnm=BT_name(BT_drops==1);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_drops==1,:,:);
                                             BTnm=BT_name(BT_drops==1);
                                        end
                                        tmpyr=identdr(keepstm);
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb'+2000;
                                        tmpnm=unique(BT_name(BT_drops==1));                   
                                   elseif strat==3
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==1,:,:);
                                             BTnm=BT_name(BT_target==1);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_target==1,:,:);
                                             BTnm=BT_name(BT_target==1);
                                        end
                                        tmpyr=identdr(keepstm);
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb'+2000;
                                        tmpnm=unique(BT_name(BT_target==1));                                       
                                   elseif strat==4 % TD
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]<34,:,:);
                                            BTnm=BT_name(BT_cat<34);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_cat<34,:,:);
                                            BTnm=BT_name(BT_cat<34);
                                        end
                                        tmpyr=unique([BT_year(BT_cat<34) BT_storm(BT_cat<34)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat<34));
                                    elseif strat==5 % TS
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63,:,:);
                                            BTnm=BT_name(BT_cat>=34 & BT_cat<63);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=34 & BT_cat<63,:,:);
                                            BTnm=BT_name(BT_cat>=34 & BT_cat<63);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat>=34 & BT_cat<63) BT_storm(BT_cat>=34 & BT_cat<63)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;                
                                        tmpnm=unique(BT_name(BT_cat>=34 & BT_cat<63));
                                    elseif strat==6 % MN
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95,:,:);
                                            BTnm=BT_name(BT_cat>=63 & BT_cat<95);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=63 & BT_cat<95,:,:);
                                            BTnm=BT_name(BT_cat>=63 & BT_cat<95);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat>=63 & BT_cat<95) BT_storm(BT_cat>=63 & BT_cat<95)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=63 & BT_cat<95));
                                    elseif strat==7 % MJ
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=96,:,:);
                                            BTnm=BT_name(BT_cat>=96);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=96,:,:);
                                            BTnm=BT_name(BT_cat>=96);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat>=96) BT_storm(BT_cat>=96)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=96));
                                   elseif strat==8 % N30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]>=30,:,:);
                                            BTnm=BT_name(BT_lat>=30);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_lat>=30,:,:);
                                            BTnm=BT_name(BT_lat>=30);
                                        end                    
                                        tmpyr=unique([BT_year(BT_lat>=30) BT_storm(BT_lat>=30)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat>=30));
                                    elseif strat==9 % S30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]<30,:,:);
                                             BTnm=BT_name(BT_lat<30);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_lat<30,:,:);
                                             BTnm=BT_name(BT_lat<30);
                                        end
                                        tmpyr=unique([BT_year(BT_lat<30) BT_storm(BT_lat<30)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat<30));
                                   elseif strat>14 && strat<=14+size(unique(BT_year),1) % by year
                                        clear tmpyrb
                                        tmps=sort(unique(BT_year));
                                        tmps=tmps(strat-14);
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_year;BT_year;BT_year;BT_year]==tmps,:,:);
                                            BTnm=BT_name(BT_year==tmps);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_year==tmps,:,:);
                                            BTnm=BT_name(BT_year==tmps);
                                        end                    
                                        tmpnm=unique(BT_name(BT_year==tmps));
                                        tmpyr=repmat(tmps+2000,size(tmpnm,2),1);
                                    elseif strat==14+size(unique(BT_year),1)+1 %% TD strat obs only
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                             BTnm=BT_name(BT_cat<34 & BT_drops'==1);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_cat<34 & BT_drops'==1,:,:);
                                             BTnm=BT_name(BT_cat<34 & BT_drops'==1);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat<34 & BT_drops'==1) BT_storm(BT_cat<34 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat<34 & BT_drops'==1));
                                   elseif strat==14+size(unique(BT_year),1)+2 % TS
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                             BTnm=BT_name(BT_cat>=34 & BT_cat<63 & BT_drops'==1);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=34 & BT_cat<63 & BT_drops'==1,:,:);
                                             BTnm=BT_name(BT_cat>=34 & BT_cat<63 & BT_drops'==1);
                                        end
                                        tmpyr=unique([BT_year(BT_cat>=34 & BT_cat<63 & BT_drops'==1) BT_storm(BT_cat>=34 & BT_cat<63 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;                
                                        tmpnm=unique(BT_name(BT_cat>=34 & BT_cat<63 & BT_drops'==1));
                                   elseif strat==14+size(unique(BT_year),1)+3 % MN
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            BTnm=BT_name(BT_cat>=63 & BT_cat<95 & BT_drops'==1);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=63 & BT_cat<95 & BT_drops'==1,:,:);
                                            BTnm=BT_name(BT_cat>=63 & BT_cat<95 & BT_drops'==1);
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=63 & BT_cat<95 & BT_drops'==1) BT_storm(BT_cat>=63 & BT_cat<95 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=63 & BT_cat<95 & BT_drops'==1));
                                 elseif strat==14+size(unique(BT_year),1)+4 % MJ
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            BTnm=BT_name(BT_cat>=96 & BT_drops'==1);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=96 & BT_drops'==1,:,:);
                                            BTnm=BT_name(BT_cat>=96 & BT_drops'==1);
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=96 & BT_drops'==1) BT_storm(BT_cat>=96 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=96 & BT_drops'==1));
                                    elseif strat==14+size(unique(BT_year),1)+5 % N30
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            BTnm=BT_name(BT_lat>=30 & BT_drops'==1);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_lat>=30 & BT_drops'==1,:,:);
                                            BTnm=BT_name(BT_lat>=30 & BT_drops'==1);
                                         end                     
                                        tmpyr=unique([BT_year(BT_lat>=30 & BT_drops'==1) BT_storm(BT_lat>=30 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat>=30 & BT_drops'==1));
                                   elseif strat==14+size(unique(BT_year),1)+6 % S30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            BTnm=BT_name(BT_lat<30 & BT_drops'==1);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_lat<30 & BT_drops'==1,:,:);
                                            BTnm=BT_name(BT_lat<30 & BT_drops'==1);
                                        end
                                        tmpyr=unique([BT_year(BT_lat<30 & BT_drops'==1) BT_storm(BT_lat<30 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat<30 & BT_drops'==1));
                                    elseif strat>14+size(unique(BT_year),1)+6 && strat<=(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1) % by year% by year
                                        clear tmpyrb
                                        tmps=sort(unique(BT_year));
                                        tmps=tmps(strat-(14+size(unique(BT_year),1)+6));
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_year;BT_year;BT_year;BT_year]==tmps & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            BTnm=BT_name(BT_year==tmps & BT_drops'==1);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                         else
                                            tmp_exp=tmp_exp(BT_year==tmps & BT_drops'==1,:,:);
                                             BTnm=BT_name(BT_year==tmps & BT_drops'==1);
                                         end                                                
                                        tmpnm=unique(BT_name(BT_year==tmps & BT_drops'==1));
                                        tmpyr=repmat(tmps+2000,size(tmpnm,2),1);   
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+1
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:);
                                            BTnm=BT_name(BT_drops==0);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_drops==0,:,:);
                                            BTnm=BT_name(BT_drops==0);
                                        end
                                        tmpyr=unique(BT_name(BT_drops==0));                            
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb'+2000;
                                        tmpnm=unique(BT_name(BT_drops==0));                   
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+2
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==0,:,:);
                                            BTnm=BT_name(BT_target==0);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_target==0,:,:);
                                            BTnm=BT_name(BT_target==0);
                                        end
                                        tmpyr=unique(BT_name(BT_target==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb'+2000; 
                                        tmpnm=unique(BT_name(BT_target==0));                                       
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+3
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==1,:,:);
                                             BTnm=BT_name(BT_dropsB==1);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_dropsB==1,:,:);
                                             BTnm=BT_name(BT_dropsB==1);
                                        end
                                        tmpyr=identdr(keepstm);
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb'+2000;
                                        tmpnm=unique(BT_name(BT_dropsB==1));                                       
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+4
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==1,:,:);
                                            BTnm=BT_name(BT_targetB==1);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_targetB==1,:,:);
                                            BTnm=BT_name(BT_targetB==1);
                                        end
                                        tmpyr=identdr(keepstm);
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb'+2000;   
                                        tmpnm=unique(BT_name(BT_targetB==1));                                       
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+5
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==0,:,:);
                                            BTnm=BT_name(BT_dropsB==0);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_dropsB==0,:,:);
                                            BTnm=BT_name(BT_dropsB==0);
                                        end
                                        tmpyr=unique(BT_name(BT_dropsB==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb'+2000;
                                        tmpnm=unique(BT_name(BT_dropsB==0));                                       
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+6
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==0,:,:);
                                            BTnm=BT_name(BT_targetB==0); 
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_targetB==0,:,:);
                                            BTnm=BT_name(BT_targetB==0); 
                                        end
                                        tmpyr=unique(BT_name(BT_targetB==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb'+2000;
                                        tmpnm=unique(BT_name(BT_targetB==0));                                       
                                   elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+7
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==1 & [BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:);
                                            BTnm=BT_name(BT_dropsB==1 & BT_drops==0); 
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_dropsB==1 & BT_drops==0,:,:);
                                            BTnm=BT_name(BT_dropsB==1 & BT_drops==0); 
                                        end
                                        tmpyr=unique(BT_name(BT_dropsB==1 & BT_drops==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb'+2000;
                                        tmpnm=unique(BT_name(BT_dropsB==1 & BT_drops==0));                                       
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+8
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==1 & [BT_target;BT_target;BT_target;BT_target]==0,:,:);
                                            BTnm=BT_name(BT_targetB==1 & BT_target==0); 
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_targetB==1 & BT_target==0,:,:);
                                            BTnm=BT_name(BT_targetB==1 & BT_target==0); 
                                        end
                                        tmpyr=unique(BT_name(BT_targetB==1 & BT_target==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb'+2000; 
                                        tmpnm=unique(BT_name(BT_targetB==1 & BT_target==0));
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+9
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsI;BT_dropsI;BT_dropsI;BT_dropsI]==1,:,:);
                                            BTnm=BT_name(BT_dropsI==1); 
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_dropsI==1,:,:);
                                            BTnm=BT_name(BT_dropsI==1);                                             
                                        end
                                        tmpyr=unique(BT_name(BT_dropsI==1));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb'+2000;  
                                        tmpnm=unique(BT_name(BT_dropsI==1));                                            
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+10
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsT;BT_dropsT;BT_dropsT;BT_dropsT]==1,:,:);
                                            BTnm=BT_name(BT_dropsT==1); 
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_dropsT==1,:,:);
                                            BTnm=BT_name(BT_dropsT==1);                                             
                                        end
                                        tmpyr=unique(BT_name(BT_dropsT==1));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb'+2000;  
                                        tmpnm=unique(BT_name(BT_dropsT==1));
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+11
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetI;BT_targetI;BT_targetI;BT_targetI]==1,:,:);
                                            BTnm=BT_name(BT_targetI==1); 
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_targetI==1,:,:);
                                            BTnm=BT_name(BT_targetI==1);                                             
                                        end
                                        tmpyr=unique(BT_name(BT_targetI==1));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb'+2000;  
                                        tmpnm=unique(BT_name(BT_targetI==1));                                            
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+12
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetT;BT_targetT;BT_targetT;BT_targetT]==1,:,:);
                                            BTnm=BT_name(BT_targetT==1); 
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_targetT==1,:,:);
                                            BTnm=BT_name(BT_targetT==1);                                             
                                        end
                                        tmpyr=unique(BT_name(BT_targetT==1));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb'+2000;  
                                        tmpnm=unique(BT_name(BT_targetT==1)); 
                                   elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+13 %% TD no obs only
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                            BTnm=BT_name(BT_cat<34 & BT_drops'==0);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_cat<34 & BT_drops'==0,:,:);
                                             BTnm=BT_name(BT_cat<34 & BT_drops'==0);                                            
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat<34 & BT_drops'==0) BT_storm(BT_cat<34 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat<34 & BT_drops'==0));
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+14 % TS no obs only
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                            BTnm=BT_name(BT_cat>=34 & BT_cat<63 & BT_drops'==0);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=34 & BT_cat<63 & BT_drops'==0,:,:);
                                             BTnm=BT_name(BT_cat>=34 & BT_cat<63 & BT_drops'==0);                                            
                                        end
                                        tmpyr=unique([BT_year(BT_cat>=34 & BT_cat<63 & BT_drops'==0) BT_storm(BT_cat>=34 & BT_cat<63 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;                
                                        tmpnm=unique(BT_name(BT_cat>=34 & BT_cat<63 & BT_drops'==0));
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+15 % MN no obs only
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                            BTnm=BT_name(BT_cat>=63 & BT_cat<95 & BT_drops'==0);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=63 & BT_cat<95 & BT_drops'==0,:,:);
                                            BTnm=BT_name(BT_cat>=63 & BT_cat<95 & BT_drops'==0);
                                            
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=63 & BT_cat<95 & BT_drops'==0) BT_storm(BT_cat>=63 & BT_cat<95 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=63 & BT_cat<95 & BT_drops'==0));
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+16 % MJ no obs only
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                            BTnm=BT_name(BT_cat>=96 & BT_drops'==0);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=96 & BT_drops'==0,:,:);
                                            BTnm=BT_name(BT_cat>=96 & BT_drops'==0);                                            
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=96 & BT_drops'==0) BT_storm(BT_cat>=96 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=96 & BT_drops'==0));   
                                   elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+17 % N30
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                            BTnm=BT_name(BT_lat>=30 & BT_drops'==0);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_lat>=30 & BT_drops'==0,:,:);
                                            BTnm=BT_name(BT_lat>=30 & BT_drops'==0);                                            
                                         end                     
                                        tmpyr=unique([BT_year(BT_lat>=30 & BT_drops'==0) BT_storm(BT_lat>=30 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat>=30 & BT_drops'==0));
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18 % S30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                            BTnm=BT_name(BT_lat<30 & BT_drops'==0);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_lat<30 & BT_drops'==0,:,:);
                                            BTnm=BT_name(BT_lat<30 & BT_drops'==0);                                            
                                        end
                                        tmpyr=unique([BT_year(BT_lat<30 & BT_drops'==0) BT_storm(BT_lat<30 & BT_drops'==0)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat<30 & BT_drops'==0)); 
                                   elseif strat>((14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18) && strat<=888 % by year noobs
                                        clear tmpyrb
                                        tmps=sort(unique(BT_year));
                                        tmps=tmps(strat-((14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18));
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_year;BT_year;BT_year;BT_year]==tmps & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                            BTnm=BT_name(BT_year==tmps & BT_drops'==0);
                                            BTnm=[BTnm BTnm BTnm BTnm];
                                        else
                                            tmp_exp=tmp_exp(BT_year==tmps & BT_drops'==0,:,:);
                                            BTnm=BT_name(BT_year==tmps & BT_drops'==0);                                            
                                         end                                                
                                        tmpnm=unique(BT_name(BT_year==tmps & BT_drops'==0));
                                        tmpyr=repmat(tmps+2000,size(tmpnm,2),1);     
                                   elseif strat==888
                                            clear tmpyrb
                                            numlist=[];
                                            for ins=1:size(identnewsub,1)
                                                tmp=identnewsub(ins,:);
                                                for ins2=1:size(BT_date)
                                                    if strcmp(BT_date(ins2,:),tmp)==1
                                                        numlist=[numlist ins2];
                                                    end
                                                end
                                            end
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([numlist;numlist;numlist;numlist],:,:);
                                                BTnm=[BT_name(numlist) BT_name(numlist) BT_name(numlist) BT_name(numlist)];
                                            else
                                                tmp_exp=tmp_exp(numlist,:,:);
                                                BTnm=BT_name(numlist);                                    
                                            end
                                            tmpyr=unique([BT_year(numlist) BT_storm(numlist)],'rows');
                                            tmpyr=tmpyr(:,1);
                                            tmpyr=tmpyr'+2000;
                                            tmpnm=unique(BT_name(numlist));
                                   end                                            

                                    % for each storm...
                                    clear nm_stm nm_sum nm_pct
                                    for i=1:size(tmpnm,2)
                                        nmtmp=tmpnm{i};                    
                                        nmindex=find(contains(BTnm,nmtmp));
                                        nmvar=tmp_exp(nmindex,:,:);
                                        nm_stm(1:size(nmvar,1),:,:,i)=nmvar;
                                    end

                                    % calculate the sum of all errors
                                    nm_sum=squeeze(nansum(squeeze(nansum(nm_stm,4)),1));
                                    %calculate the percentage of each storm to the sum of all errors
                                    nm_pct=(100.*squeeze(nansum(nm_stm,1))./nm_sum);                    

                                    % sort by year and then by name                               
                                    [a_sorted, a_order] = sort(tmpyr);
                                    nm_pct = nm_pct(:,:,a_order);
                                    tmpnm = tmpnm(a_order);

                                    for identexploop=1:size(nm_pct,2)
                                        tmppct=squeeze(nm_pct(:,identexploop,:));
                                        tmppct(tmppct==0)=NaN;
                                        tmpstd=nanstd(tmppct');
                                        tmpmn=nanmean(tmppct,2);
                                        tmpval=(tmpmn+tmpstd');
                                        set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                        hfig=figure;
                                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                        ax1=subplot(3,4,[1:8]);
                                        imagesc((tmppct)')
                                        xlabel('Forecast Lead Time (h)','fontsize',14)        
                                        set(gca,'fontsize',14)
                                        box on
                                        if mod(identmaxfhr*3,skiphr)==0  % xrange to nearest tickmark
                                            if mod(identmaxfhr*3,12)==0
                                                xlim([0.5 (((identmaxfhr*3))/skiphr+1)-.5])
                                            else
                                                xlim([0.5 (((identmaxfhr*3)+(12-mod(identmaxfhr*3,12)))/skiphr+1)-.5]) 
                                            end
                                        else
                                            if mod(identmaxfhr*3-3,12)==0
                                                xlim([0.5 (((identmaxfhr*3)-3)/skiphr+1)-.5])
                                            else
                                                xlim([0.5 (((identmaxfhr*3)-3+(12-mod(identmaxfhr*3-3,12)))/skiphr+1)-.5]) 
                                            end
                                        end    
                                        set(gca,'xtick',1:skiptick:50)
                                        set(gca,'xticklabel',{'0','12','24','36','48','60','72','84','96','108','120','132'}) 
                                        set(gca,'fontsize',14)
                                        hold on                        
                                        ylabel('','fontsize',14)                                   
                                        set(gca,'fontsize',14)
                                        set(gca,'ytick',1:size(identdr,2))
                                        cnt=1;
                                        clear plotsim
                                        for findsim=1:size(tmpnm,2)
                                            tmpsim=tmpnm{findsim};
                                            for findsim2=1:size(stormsdone,2)
                                                tmpsd=stormsdone{findsim2};      
                                                if strcmp(tmpsim(1:end-2),upper(tmpsd(1:end-3)))==1
                                                    plotsim{cnt}=[upper(tmpsd(end-2:end)),' (',upper(tmpsd(1)),tmpsd(2:end-3),')'];
                                                    cnt=cnt+1;
                                                end
                                            end
                                        end
                                        set(gca,'yticklabel',plotsim(:));
                                        colorbar
                                        caxis([0 100])
                                        colormap(flipud(gray(20)))
                                        hold on
                                        for i=1:size(tmppct,1)
                                            plot(repmat(0.5+i,1,size(identdr,2)+3),-1:size(identdr,2)+1,'k')
                                        end
                                        for i=1:size(tmppct,2)
                                            plot(-1:size(tmppct,1)+1,repmat(i-.5,1,size(tmppct,1)+3),'k')
                                        end
                                        %set(gca,'plotboxaspectratio',[1 1 1])
                                        set(gcf, 'InvertHardcopy', 'off')
                                        set(gcf,'Units','inches');
                                        screenposition = get(gcf,'Position');
                                        set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                        set(gcf, 'InvertHardcopy', 'off')
                                        tmppctstr=isnan(tmppct);
                                        clear diffpct
                                        for j=1:size(tmppct,2)
                                            for i=1:size(tmppct,1)
                                                if tmppctstr(i,j)==0
                                                    if sum(round(tmppct(i,:)))>100
                                                        for k=1:size(tmppct,2)
                                                            diffpct(k)=round(tmppct(i,k))-tmppct(i,k);
                                                        end
                                                        tmppct(i,find(diffpct==max(diffpct')))=tmppct(i,find(diffpct==max(diffpct')))-diffpct(k);
                                                    elseif sum(round(tmppct(i,:)))<100
                                                        for k=1:size(tmppct,2)
                                                            diffpct(k)=round(tmppct(i,k))-tmppct(i,k);
                                                        end
                                                        tmppct(i,find(diffpct==max(diffpct')))=tmppct(i,find(diffpct==max(diffpct')))+diffpct(k);
                                                    end
                                                        if tmppct(i,j)>70
                                                            text(i,j, [num2str(round(tmppct(i,j))),'%'], 'color','w','HorizontalAlignment', 'Center','fontsize',10)
                                                        else
                                                            text(i,j, [num2str(round(tmppct(i,j))),'%'], 'HorizontalAlignment', 'Center','fontsize',10)
                                                        end
                                                end
                                            end
                                        end        
                                        set(gca,'TickLength',[0 0])
                                        if strat==1
                                            text(1,1.05,['\textbf{',identexpshort{identexploop},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(identexploop,:),'units','normalized');
                                        else
                                            text(1,1.1,['\textbf{',identexpshort{identexploop},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(identexploop,:),'units','normalized');
                                            text(1,1.05,['\textbf{SUBSET: ',upper(stname),'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                        end
                                        text(0,1.1,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')                                        
                                        tmpuv = unique(tmpyr);
                                        tmpn  = histc(tmpyr,tmpuv); 
                                        tmpphrase='';
                                        for tmpdr=1:size(tmpn,1)
                                            if tmpdr==size(tmpn,1)
                                                tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),')'];
                                            else
                                                tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),') $\mid$ '];
                                            end
                                        end    
                                        text(0,1.05,['\textbf{STORMS: ',tmpphrase,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                        ax=gca;
                                        box on
                                        set(ax, 'Layer', 'top')
                                        ax.LineWidth=1; 
                                        pos=get(gca,'Position');
                                        set(gca,'position',[pos(1)+.01 pos(2) pos(3) pos(4)])
                                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .9, 0.96]); % maximize figure window
                                        f = getframe(hfig);
                                        imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/COMP_',tmp_name,'_contr_',stname,'_',identexpshort{identexploop},'.png'],'png');
                                        %print([identtrackint,'/trackcomp_fhr_',num2str((fhr-1)*3),'h'],'-dpdf','-r200');
                                        close all   
                                    end                                    

                                end
                                % BT Value vs. EXP Value
                                for plt=[2:18,21:23]
                                    clear l cntexp
                                    set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                    hfig=figure;
                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                    ax1=subplot(3,4,[1:8]);
                                    hold on
                                    % Mean Value            
                                    ylabv=[];
                                    for tmp=1:size(identexpshort,1)
                                        if tmp==size(identexpshort,1)
                                            ylabv=[ylabv, 'and ',identexpshort{tmp},' Values'];
                                        else
                                            ylabv=[ylabv,identexpshort{tmp},', '];
                                        end
                                    end
                                    if plt==1
                                         tmp_exp=squeeze(trkerr_exp(:,1,:));
                                         tmp_name='trkval';
                                         tmp_title='Track (km)';
                                         tmp_ytitle=[ylabv,' (km)'];
                                         tmp_u='(km)';
                                    elseif plt==2
                                        tmp_exp=squeeze(EXP_pres(:,1,:));
                                        tmp_bt=squeeze(BT_pres(:,1,:));
                                        tmp_name='presval';
                                        tmp_title='Pressure (hPa)';
                                        tmp_ytitle=[ylabv,' (hPa)'];
                                        tmp_u='(hPa)';
                                    elseif plt==3
                                        tmp_exp=squeeze(EXP_cat(:,1,:));
                                        tmp_bt=squeeze(BT_cat(:,1,:));
                                        tmp_name='spdval';
                                        tmp_title='Wind Speed (kts)';
                                        tmp_ytitle=[ylabv,' (kts)'];
                                        tmp_u='(kts)';
                                     elseif plt==4
                                        tmp_exp=squeeze(EXP_ne34(:,1,:));
                                        tmp_bt=squeeze(BT_ne34(:,1,:));
                                        tmp_name='ne34val';
                                        tmp_title='R34 NEQ (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        yrange=[0 200];
                                        tmp_u='(km)';
                                    elseif plt==5
                                        tmp_exp=squeeze(EXP_se34(:,1,:));
                                        tmp_bt=squeeze(BT_se34(:,1,:));
                                        tmp_name='se34val';
                                        tmp_title='R34 SEQ (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        yrange=[0 200];
                                        tmp_u='(km)';
                                    elseif plt==6
                                        tmp_exp=squeeze(EXP_sw34(:,1,:));
                                        tmp_bt=squeeze(BT_sw34(:,1,:));
                                        tmp_name='sw34val';
                                        tmp_title='R34 SWQ (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        yrange=[0 200];
                                        tmp_u='(km)';
                                    elseif plt==7
                                        tmp_exp=squeeze(EXP_nw34(:,1,:));
                                        tmp_bt=squeeze(BT_nw34(:,1,:));
                                        tmp_name='nw34val';
                                        tmp_title='R34 NWQ (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        yrange=[0 200];
                                        tmp_u='(km)';
                                    elseif plt==8
                                        tmp_exp=squeeze(EXP_ne50(:,1,:));
                                        tmp_bt=squeeze(BT_ne50(:,1,:));
                                        tmp_name='ne50val';
                                        tmp_title='R50 NEQ (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        yrange=[0 200];
                                        tmp_u='(km)';
                                    elseif plt==9
                                        tmp_exp=squeeze(EXP_se50(:,1,:));
                                        tmp_bt=squeeze(BT_se50(:,1,:));
                                        tmp_name='se50val';
                                        tmp_title='R50 SEQ (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        yrange=[0 200];
                                        tmp_u='(km)';
                                    elseif plt==10
                                        tmp_exp=squeeze(EXP_sw50(:,1,:));
                                        tmp_bt=squeeze(BT_sw50(:,1,:));
                                        tmp_name='sw50val';
                                        tmp_title='R50 SWQ (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        yrange=[0 200];
                                        tmp_u='(km)';
                                    elseif plt==11
                                        tmp_exp=squeeze(EXP_nw50(:,1,:));
                                        tmp_bt=squeeze(BT_nw50(:,1,:));
                                        tmp_name='nw50val';
                                        tmp_title='R50 NWQ (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        yrange=[0 200];
                                        tmp_u='(km)';
                                    elseif plt==12
                                        tmp_exp=squeeze(EXP_ne64(:,1,:));
                                        tmp_bt=squeeze(BT_ne64(:,1,:));
                                        tmp_name='ne64val';
                                        tmp_title='R64 NEQ (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        yrange=[0 200];
                                        tmp_u='(km)';
                                    elseif plt==13
                                        tmp_exp=squeeze(EXP_se64(:,1,:));
                                        tmp_bt=squeeze(BT_se64(:,1,:));
                                        tmp_name='se64val';
                                        tmp_title='R64 SEQ (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        yrange=[0 200];
                                        tmp_u='(km)';
                                    elseif plt==14
                                        tmp_exp=squeeze(EXP_sw64(:,1,:));
                                        tmp_bt=squeeze(BT_sw64(:,1,:));
                                        tmp_name='sw64val';
                                        tmp_title='R64 SWQ (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        yrange=[0 200];
                                        tmp_u='(km)';
                                    elseif plt==15
                                        tmp_exp=squeeze(EXP_nw64(:,1,:));
                                        tmp_bt=squeeze(BT_nw64(:,1,:));
                                        tmp_name='nw64val';
                                        tmp_title='R64 NWQ (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        yrange=[0 200];
                                        tmp_u='(km)';
                                    elseif plt==16
                                        tmp_exp=squeeze(EXP_po(:,1,:));
                                        tmp_bt=squeeze(BT_po(:,1,:));
                                        tmp_name='poval';
                                        tmp_title='Outer Clsd Isbr Prs (hPa)';
                                        tmp_ytitle=[ylabv,' (hPa)'];
                                        tmp_u='(hPa)';
                                    elseif plt==17
                                        tmp_exp=squeeze(EXP_ro(:,1,:));
                                        tmp_bt=squeeze(BT_ro(:,1,:));
                                        tmp_name='roval';
                                        tmp_title='Outer Clsd Isbr Rad (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        tmp_u='(km)';
                                    elseif plt==18
                                        tmp_exp=squeeze(EXP_rmw(:,1,:));
                                        tmp_bt=squeeze(BT_rmw(:,1,:));
                                        tmp_name='rmwval';
                                        tmp_title='RMW (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        tmp_u='(km)';
                                    elseif plt==19
                                        tmp_exp=squeeze(ateerr_exp(:,1,:));
                                        tmp_name='ateval';
                                        tmp_title='Along-Track (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        yrange=[-500 500];       
                                        tmp_u='(km)';
                                    elseif plt==20
                                        tmp_exp=squeeze(xteerr_exp(:,1,:));
                                        tmp_name='xteval';
                                        tmp_title='Across-Track (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        tmp_u='(km)';
                                        yrange=[-500 500]; 
                                    elseif plt==21
                                        tmp_exp=squeeze(cat(1,EXP_ne34(:,1,:),EXP_nw34(:,1,:),EXP_se34(:,1,:),EXP_sw34(:,1,:)));
                                        tmp_bt=squeeze(cat(1,BT_ne34(:,1,:),BT_nw34(:,1,:),BT_se34(:,1,:),BT_sw34(:,1,:)));
                                        tmp_name='34val';
                                        tmp_title='R34 (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        tmp_u='(km)';
                                        yrange=[0 100];
                                    elseif plt==22
                                        tmp_exp=squeeze(cat(1,EXP_ne50(:,1,:),EXP_nw50(:,1,:),EXP_se50(:,1,:),EXP_sw50(:,1,:)));
                                        tmp_bt=squeeze(cat(1,BT_ne50(:,1,:),BT_nw50(:,1,:),BT_se50(:,1,:),BT_sw50(:,1,:)));
                                        tmp_name='50val';
                                        tmp_title='R50 (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        tmp_u='(km)';
                                        yrange=[0 100];
                                    elseif plt==23
                                        tmp_exp=squeeze(cat(1,EXP_ne64(:,1,:),EXP_nw64(:,1,:),EXP_se64(:,1,:),EXP_sw64(:,1,:)));
                                        tmp_bt=squeeze(cat(1,BT_ne64(:,1,:),BT_nw64(:,1,:),BT_se64(:,1,:),BT_sw64(:,1,:)));
                                        tmp_name='64val';
                                        tmp_title='R64 (km)';
                                        tmp_ytitle=[ylabv,' (km)'];
                                        tmp_u='(km)';
                                        yrange=[0 100];
                                    end
                                    
                                    tmp_exp0=tmp_exp;
                                    % Strat
                                    if strat==1
                                        clear tmpyrb
                                        tmpyr=identdr;
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==2
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==1,:,:);
                                            tmp_bt=tmp_bt([BT_drops;BT_drops;BT_drops;BT_drops]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_drops==1,:,:);
                                            tmp_bt=tmp_bt(BT_drops==1,:,:);
                                        end
                                        tmpyr=identdr(keepstm); % keeps just the storms that have obs
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==3
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==1,:,:);
                                            tmp_bt=tmp_bt([BT_target;BT_target;BT_target;BT_target]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_target==1,:,:);
                                            tmp_bt=tmp_bt(BT_target==1,:,:);
                                        end
                                        tmpyr=identdr(keepstm);
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==4 % TD
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]<34,:,:);
                                            tmp_bt=tmp_bt([BT_cat;BT_cat;BT_cat;BT_cat]<34,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat<34,:,:);
                                            tmp_bt=tmp_bt(BT_cat<34,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_cat<34) BT_storm(BT_cat<34)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat<34));           
                                    elseif strat==5 % TS
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63,:,:);
                                            tmp_bt=tmp_bt([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=34 & BT_cat<63,:,:);
                                            tmp_bt=tmp_bt(BT_cat>=34 & BT_cat<63,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat>=34 & BT_cat<63) BT_storm(BT_cat>=34 & BT_cat<63)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;                
                                        tmpnm=unique(BT_name(BT_cat>=34 & BT_cat<63));
                                    elseif strat==6 % MN
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95,:,:);
                                            tmp_bt=tmp_bt([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=63 & BT_cat<95,:,:);
                                            tmp_bt=tmp_bt(BT_cat>=63 & BT_cat<95,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat>=63 & BT_cat<95) BT_storm(BT_cat>=63 & BT_cat<95)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=63 & BT_cat<95));
                                    elseif strat==7 % MJ
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=96,:,:);
                                            tmp_bt=tmp_bt([BT_cat;BT_cat;BT_cat;BT_cat]>=96,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=96,:,:);
                                            tmp_bt=tmp_bt(BT_cat>=96,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat>=96) BT_storm(BT_cat>=96)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=96));
                                    elseif strat==8 % N30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]>=30,:,:);
                                            tmp_bt=tmp_bt([BT_lat;BT_lat;BT_lat;BT_lat]>=30,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat>=30,:,:);
                                            tmp_bt=tmp_bt(BT_lat>=30,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_lat>=30) BT_storm(BT_lat>=30)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat>=30));
                                    elseif strat==9 % S30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]<30,:,:);
                                            tmp_bt=tmp_bt([BT_lat;BT_lat;BT_lat;BT_lat]<30,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat<30,:,:);
                                            tmp_bt=tmp_bt(BT_lat<30,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_lat<30) BT_storm(BT_lat<30)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat<30));
                                    elseif strat>14 && strat<=14+size(unique(BT_year),1) % by year
                                        clear tmpyrb
                                        tmps=sort(unique(BT_year));
                                        tmps=tmps(strat-14);
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_year;BT_year;BT_year;BT_year]==tmps,:,:);
                                            tmp_bt=tmp_bt([BT_year;BT_year;BT_year;BT_year]==tmps,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_year==tmps,:,:);
                                            tmp_bt=tmp_bt(BT_year==tmps,:,:);
                                        end                    
                                        tmpnm=unique(BT_name(BT_year==tmps));
                                        tmpyr=repmat(tmps+2000,size(tmpnm,2),1);
                                    elseif strat==14+size(unique(BT_year),1)+1 %% TD strat obs only
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            tmp_bt=tmp_bt([BT_cat;BT_cat;BT_cat;BT_cat]<34 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat<34 & BT_drops'==1,:,:);
                                            tmp_bt=tmp_bt(BT_cat<34 & BT_drops'==1,:,:);
                                        end                    
                                        tmpyr=unique([BT_year(BT_cat<34 & BT_drops'==1) BT_storm(BT_cat<34 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat<34 & BT_drops'==1));
                                    elseif strat==14+size(unique(BT_year),1)+2 % TS
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            tmp_bt=tmp_bt([BT_cat;BT_cat;BT_cat;BT_cat]>=34 & [BT_cat;BT_cat;BT_cat;BT_cat]<63 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=34 & BT_cat<63 & BT_drops'==1,:,:);
                                            tmp_bt=tmp_bt(BT_cat>=34 & BT_cat<63 & BT_drops'==1,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_cat>=34 & BT_cat<63 & BT_drops'==1) BT_storm(BT_cat>=34 & BT_cat<63 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;                
                                        tmpnm=unique(BT_name(BT_cat>=34 & BT_cat<63 & BT_drops'==1));
                                    elseif strat==14+size(unique(BT_year),1)+3 % MN
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            tmp_bt=tmp_bt([BT_cat;BT_cat;BT_cat;BT_cat]>=63 & [BT_cat;BT_cat;BT_cat;BT_cat]<95 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=63 & BT_cat<95 & BT_drops'==1,:,:);
                                            tmp_bt=tmp_bt(BT_cat>=63 & BT_cat<95 & BT_drops'==1,:,:);
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=63 & BT_cat<95 & BT_drops'==1) BT_storm(BT_cat>=63 & BT_cat<95 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=63 & BT_cat<95 & BT_drops'==1));
                                    elseif strat==14+size(unique(BT_year),1)+4 % MJ
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_cat;BT_cat;BT_cat;BT_cat]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            tmp_bt=tmp_bt([BT_cat;BT_cat;BT_cat;BT_cat]>=96 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_cat>=96 & BT_drops'==1,:,:);
                                            tmp_bt=tmp_bt(BT_cat>=96 & BT_drops'==1,:,:);
                                         end
                                        tmpyr=unique([BT_year(BT_cat>=96 & BT_drops'==1) BT_storm(BT_cat>=96 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_cat>=96 & BT_drops'==1));
                                    elseif strat==14+size(unique(BT_year),1)+5 % N30
                                        clear tmpyrb
                                         if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            tmp_bt=tmp_bt([BT_lat;BT_lat;BT_lat;BT_lat]>=30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat>=30 & BT_drops'==1,:,:);
                                            tmp_bt=tmp_bt(BT_lat>=30 & BT_drops'==1,:,:);
                                         end                     
                                        tmpyr=unique([BT_year(BT_lat>=30 & BT_drops'==1) BT_storm(BT_lat>=30 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat>=30 & BT_drops'==1));
                                    elseif strat==14+size(unique(BT_year),1)+6 % S30
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_lat;BT_lat;BT_lat;BT_lat]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            tmp_bt=tmp_bt([BT_lat;BT_lat;BT_lat;BT_lat]<30 & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_lat<30 & BT_drops'==1,:,:);
                                            tmp_bt=tmp_bt(BT_lat<30 & BT_drops'==1,:,:);
                                        end
                                        tmpyr=unique([BT_year(BT_lat<30 & BT_drops'==1) BT_storm(BT_lat<30 & BT_drops'==1)],'rows');
                                        tmpyr=tmpyr(:,1);
                                        tmpyr=tmpyr+2000;
                                        tmpnm=unique(BT_name(BT_lat<30 & BT_drops'==1));
                                    elseif strat>14+size(unique(BT_year),1)+6 && strat<=(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1) % by year
                                        clear tmpyrb
                                        tmps=sort(unique(BT_year));
                                        tmps=tmps(strat-(14+size(unique(BT_year),1)+6));
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_year;BT_year;BT_year;BT_year]==tmps & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                            tmp_bt=tmp_bt([BT_year;BT_year;BT_year;BT_year]==tmps & [BT_drops';BT_drops';BT_drops';BT_drops']==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_year==tmps & BT_drops'==1,:,:);
                                            tmp_bt=tmp_bt(BT_year==tmps & BT_drops'==1,:,:);
                                         end                                                
                                        tmpnm=unique(BT_name(BT_year==tmps & BT_drops'==1));
                                        tmpyr=repmat(tmps+2000,size(tmpnm,2),1);
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+1
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:);
                                            tmp_bt=tmp_bt([BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_drops==0,:,:);
                                            tmp_bt=tmp_bt(BT_drops==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_drops==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+2
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_target;BT_target;BT_target;BT_target]==0,:,:);
                                            tmp_bt=tmp_bt([BT_target;BT_target;BT_target;BT_target]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_target==0,:,:);
                                            tmp_bt=tmp_bt(BT_target==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_target==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;  
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+3
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==1,:,:);
                                            tmp_bt=tmp_bt([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsB==1,:,:);
                                            tmp_bt=tmp_bt(BT_dropsB==1,:,:);
                                        end
                                        tmpyr=identdr(keepstm);
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+4
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==1,:,:);
                                            tmp_bt=tmp_bt([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetB==1,:,:);
                                            tmp_bt=tmp_bt(BT_targetB==1,:,:);
                                        end
                                        tmpyr=identdr(keepstm);
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;   
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+5
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==0,:,:);
                                            tmp_bt=tmp_bt([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsB==0,:,:);
                                            tmp_bt=tmp_bt(BT_dropsB==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_dropsB==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+6
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==0,:,:);
                                            tmp_bt=tmp_bt([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetB==0,:,:);
                                            tmp_bt=tmp_bt(BT_targetB==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_targetB==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+7
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==1 & [BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:);
                                            tmp_bt=tmp_bt([BT_dropsB;BT_dropsB;BT_dropsB;BT_dropsB]==1 & [BT_drops;BT_drops;BT_drops;BT_drops]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsB==1 & BT_drops==0,:,:);
                                            tmp_bt=tmp_bt(BT_dropsB==1 & BT_drops==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_dropsB==1 & BT_drops==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+8
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==1 & [BT_target;BT_target;BT_target;BT_target]==0,:,:);
                                            tmp_bt=tmp_bt([BT_targetB;BT_targetB;BT_targetB;BT_targetB]==1 & [BT_target;BT_target;BT_target;BT_target]==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetB==1 & BT_target==0,:,:);
                                            tmp_bt=tmp_bt(BT_targetB==1 & BT_target==0,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_targetB==1 & BT_target==0));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+9
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsI;BT_dropsI;BT_dropsI;BT_dropsI]==1,:,:);
                                            tmp_bt=tmp_bt([BT_dropsI;BT_dropsI;BT_dropsI;BT_dropsI]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsI==1,:,:);
                                            tmp_bt=tmp_bt(BT_dropsI==1,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_dropsI==1));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;  
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+10
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_dropsT;BT_dropsT;BT_dropsT;BT_dropsT]==1,:,:);
                                            tmp_bt=tmp_bt([BT_dropsT;BT_dropsT;BT_dropsT;BT_dropsT]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_dropsT==1,:,:);
                                            tmp_bt=tmp_bt(BT_dropsT==1,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_dropsT==1));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000; 
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+11
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetI;BT_targetI;BT_targetI;BT_targetI]==1,:,:);
                                            tmp_bt=tmp_bt([BT_targetI;BT_targetI;BT_targetI;BT_targetI]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetI==1,:,:);
                                            tmp_bt=tmp_bt(BT_targetI==1,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_targetI==1));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;  
                                    elseif strat==(14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+12
                                        clear tmpyrb
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_targetT;BT_targetT;BT_targetT;BT_targetT]==1,:,:);
                                            tmp_bt=tmp_bt([BT_targetT;BT_targetT;BT_targetT;BT_targetT]==1,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_targetT==1,:,:);
                                            tmp_bt=tmp_bt(BT_targetT==1,:,:);
                                        end
                                        tmpyr=unique(BT_name(BT_targetT==1));
                                        for tmpyri=1:size(tmpyr,2)
                                            tmpyra=tmpyr{tmpyri};
                                            tmpyrb(tmpyri)=str2num(tmpyra(end-1:end));
                                        end
                                        tmpyr=tmpyrb+2000;    
                                   elseif strat>((14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18) && strat<=888 % by year noobs
                                        clear tmpyrb
                                        tmps=sort(unique(BT_year));
                                        tmps=tmps(strat-((14+size(unique(BT_year),1)+6)+size(unique(BT_year),1)+18));
                                        if plt>=21 && plt<=23
                                            tmp_exp=tmp_exp([BT_year;BT_year;BT_year;BT_year]==tmps & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                            tmp_bt=tmp_bt([BT_year;BT_year;BT_year;BT_year]==tmps & [BT_drops';BT_drops';BT_drops';BT_drops']==0,:,:);
                                        else
                                            tmp_exp=tmp_exp(BT_year==tmps & BT_drops'==0,:,:);
                                            tmp_bt=tmp_bt(BT_year==tmps & BT_drops'==0,:,:);
                                         end                                                
                                        tmpnm=unique(BT_name(BT_year==tmps & BT_drops'==0));
                                        tmpyr=repmat(tmps+2000,size(tmpnm,2),1);     
                                    elseif strat==888
                                            clear tmpyrb
                                            numlist=[];
                                            for ins=1:size(identnewsub,1)
                                                tmp=identnewsub(ins,:);
                                                for ins2=1:size(BT_date)
                                                    if strcmp(BT_date(ins2,:),tmp)==1
                                                        numlist=[numlist ins2];
                                                    end
                                                end
                                            end
                                            if plt>=21 && plt<=23
                                                tmp_exp=tmp_exp([numlist;numlist;numlist;numlist],:,:);
                                                tmp_bt=tmp_bt([numlist;numlist;numlist;numlist],:,:);
                                            else
                                                tmp_exp=tmp_exp(numlist,:,:);
                                                tmp_bt=tmp_bt(numlist,:,:);
                                            end
                                            tmpyr=unique([BT_year(numlist) BT_storm(numlist)],'rows');
                                            tmpyr=tmpyr(:,1);
                                            tmpyr=tmpyr+2000;
                                            tmpnm=unique(BT_name(numlist));    
                                    end

                                    % 1-1 Line
                                    plot(0:5000,0:5000,'Color',[0 0 0],'linewidth',1);

                                    % Plot each experiment as scatter
                                    for tmp=1:size(identexp,1)
                                        l(tmp)=plot(-100,-100,'s','Color',identexpcolors(tmp,:),'markerfacecolor',identexpcolors(tmp,:),'markersize',5);                                        
                                        plot(tmp_bt,tmp_exp(:,tmp),'s','Color',identexpcolors(tmp,:),'markerfacecolor',identexpcolors(tmp,:),'markersize',2);                                        
                                        tmpnan=[tmp_bt tmp_exp(:,tmp)];
                                        tmprows = any(isnan(tmpnan),2);
                                        tmpnan(tmprows,:) = [];  
                                        c = polyfit(tmpnan(:,1),tmpnan(:,2),1);
                                        %disp(['Equation is y = ' num2str(c(1)) '*x + ' num2str(c(2))])
                                        y_est = polyval(c,tmp_bt);
                                        plot(tmp_bt,y_est,'Color',identexpcolors(tmp,:),'LineWidth',1)
                                    end
                                    
                                    
                                    
                                    set(gca,'plotboxaspectratio',[1 1 1])
                                    xlabel(['Best Track Values ',tmp_u],'fontsize',20)
                                    ylabel(tmp_ytitle,'fontsize',20)
                                    set(gca,'fontsize',20)
                                    box on                                    
                                    % YRANGE
                                    clear allquad
                                    allquad(1)=(max(max((abs(EXP_ne34(:))))));
                                    allquad(2)=(max(max((abs(EXP_se34(:))))));
                                    allquad(3)=(max(max((abs(EXP_nw34(:))))));
                                    allquad(4)=(max(max((abs(EXP_sw34(:))))));
                                    allquad(5)=(max(max((abs(EXP_ne50(:))))));
                                    allquad(6)=(max(max((abs(EXP_se50(:))))));
                                    allquad(7)=(max(max((abs(EXP_nw50(:))))));
                                    allquad(8)=(max(max((abs(EXP_sw50(:))))));
                                    allquad(9)=(max(max((abs(EXP_ne64(:))))));
                                    allquad(10)=(max(max((abs(EXP_se64(:))))));
                                    allquad(11)=(max(max((abs(EXP_nw64(:))))));
                                    allquad(12)=(max(max((abs(EXP_sw64(:))))));
                                    allquadmax=max(max(max(allquad)));
                                    allquadmin=min(min(min(allquad)));
                                    tmpvalq=round(max(abs(allquadmin),abs(allquadmax)));
                                    if isnan(tmpvalq)==1
                                        tmpvalq=0;
                                    end
                                    if numel(num2str(tmpvalq))==3
                                        addfacq=100;
                                    elseif numel(num2str(tmpvalq))==2
                                        addfacq=20;
                                    else 
                                        addfacq=20;
                                    end
                                    if numel(num2str(round(max(max(((tmp_exp0)))))))==3
                                        addfac=100;
                                    elseif numel(num2str(round(max(max(((tmp_exp0)))))))==2
                                        addfac=20;
                                    else
                                        addfac=20;
                                    end
                                    if plt<=3 || (plt>=16 && plt<=18) % 0-end
                                        tmpmin=min(min(((tmp_exp0))));
                                        tmpmax=max(max(((tmp_exp0))));
                                        tmpval=max(abs(tmpmin),abs(tmpmax));
                                        if isnan(tmpval)==1
                                            tmpval=0;
                                        end
                                        yrange=[0 round((tmpval+addfac)/10)*10];                
                                    elseif plt==19 || plt==20 % -end end 
                                        tmpmin=min(min(((tmp_exp0))));
                                        tmpmax=max(max(((tmp_exp0))));
                                        tmpval=max(abs(tmpmin),abs(tmpmax));
                                        if isnan(tmpval)==1
                                            tmpval=0;
                                        end
                                        yrange=[-round((tmpval+addfac)/10)*10 round((tmpval+addfac)/10)*10];
                                    elseif (plt>=4 && plt<=15) || plt>=21%quad
                                        yrange=[0 round((tmpvalq+addfacq)/10)*10];
                                    end
                    %                 if plt==1
                    %                     for lo=1:50
                    %                         if max(nanmean(tmp_exp,1))>100*lo
                    %                             ylim([0 200+100*lo])
                    %                         end
                    %                     end
                    %                 elseif plt==2 || plt==3 || plt>15 && plt <19
                    %                     for lo=1:2:50
                    %                         if max(nanmean(tmp_exp,1))>5*lo
                    %                             ylim([0 10+5*(lo+1)])
                    %                         end
                    %                     end 
                    %                 else                                       
                    %                 end
                                    if max(yrange)>500
                                        set(gca,'ytick',0:100:max(yrange))
                                        set(gca,'xtick',0:100:max(yrange))
                                    elseif max(yrange)>300
                                        set(gca,'ytick',0:50:max(yrange))
                                        set(gca,'xtick',0:50:max(yrange))
                                    elseif max(yrange)>100
                                        set(gca,'ytick',0:25:max(yrange))
                                        set(gca,'xtick',0:25:max(yrange))
                                    else
                                        set(gca,'ytick',0:10:max(yrange))
                                        set(gca,'xtick',0:10:max(yrange))
                                    end      
                                    ylim(yrange)
                                    xlim(yrange)
                                    if plt==2
                                        ylim([875 1050])
                                        xlim([875 1050])
                                        set(gca,'ytick',0:25:max(yrange))
                                        set(gca,'xtick',0:25:max(yrange))
                                    end
                                    if plt==16
                                        ylim([975 1040])
                                        xlim([975 1040])
                                        set(gca,'ytick',0:10:max(yrange))
                                        set(gca,'xtick',0:10:max(yrange))
                                    end
                                    if plt==17
                                        ylim([0 750])
                                        xlim([0 750])
                                        set(gca,'ytick',0:100:750)
                                        set(gca,'xtick',0:100:750)
                                    end
                                    grid off
                                    set(gca,'fontsize',20)      
                                    hold off
                                    box on
                                    lh=legend(l,identexpshort,'location','northeast');
									lh.FontSize=10;
                                    set(gcf,'Units','inches');
                                    a1Pos = get(gca,'Position');
                                    set(gcf, 'InvertHardcopy', 'off')
                                    set(gcf,'Units','inches');
                                    screenposition = get(gcf,'Position');
                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                    set(gcf, 'InvertHardcopy', 'off')
                                    text(0,1.065,['\textbf{',tmp_title,'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')    
                                    if strat==1
                                        text(1,1.03,['\textbf{N=',num2str(size(tmp_bt,1)),'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')                                        
                                    else
                                        text(1,1.065,['\textbf{N=',num2str(size(tmp_bt,1)),'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                        text(1,1.03,['\textbf{SUBSET: ',upper(stname),'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                    end                
                                    tmpuv = unique(tmpyr);
                                    tmpn  = histc(tmpyr,tmpuv); 
                                    tmpphrase='';
                                    for tmpdr=1:length(tmpn)
                                        if tmpdr==length(tmpn)
                                            tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),')'];
                                        else
                                            tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),') $\mid$ '];
                                        end
                                    end    
                                    text(0,1.03,['\textbf{STORMS: ',tmpphrase,'  $\mid$ FHR: 0}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                    ax=gca;
                                    box on
                                    set(ax, 'Layer', 'bottom')
                                    ax.LineWidth=1; 
                                    set(gca,'position',[spPos(1)+.02 spPos(2)+.05 spPos(3) spPos(4)])
                                    set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                    set(gca,'Color',[.9 .9 .9])                                    
                                    for tmp=1:size(identexp,1)
                                        cntexp(:,tmp)=sum(~isnan(tmp_exp(:,tmp)));
                                    end
                                    if sum([cntexp(:)])==0
                                        tx=text(0.98,0.06,'Not Enough Data','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                        set(tx, 'Layer', 'front')
                                    end
                                    if plt==1 || plt>=4 && plt<=15 || plt==17 || plt==18 || plt>20
                                         tx=text(0.98,0.06,'Too Small','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         tx=text(0.02,0.98,'Too Large','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         set(tx, 'Layer', 'front')  
                                    elseif plt==2 || plt==16
                                         tx=text(0.98,0.06,'Too Low','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         tx=text(0.02,0.98,'Too High','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         set(tx, 'Layer', 'front')  
                                    elseif plt==3
                                         tx=text(0.98,0.06,'Too Slow','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         tx=text(0.02,0.98,'Too Fast','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         set(tx, 'Layer', 'front') 
                                    elseif plt==19
                                         tx=text(0.98,0.06,'Slower than BT','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         tx=text(0.02,0.98,'Faster than BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         set(tx, 'Layer', 'front')            
                                    elseif plt==20
                                         tx=text(0.98,0.06,'Left of BT','HorizontalAlignment','right','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         tx=text(0.02,0.98,'Right of BT','HorizontalAlignment','left','VerticalAlignment','top','BackgroundColor', 'w','EdgeColor','k','fontsize',12,'units','normalized');
                                         set(tx, 'Layer', 'front')            
                                    end
                                    screenposition = get(gcf,'Position');
                                    set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                    set(gcf, 'InvertHardcopy', 'off')                                    
                                    f = getframe(hfig);
                                    imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/',identremovename,'/',identdr5{basinloop},'/COMP_',tmp_name,'_',stname,'.png'],'png');
                                    close all
                                end   
                            end
                        end
                    end
                end
                clearvars -except identbasinmodel identsatobs identgraphicssat identsatid identsatname identindivch identchannel identindivstorm identcomposite identstormsdone identconvtype identconvcolors identconvlegend identns* identnewsub identgraphicsbycycle identgraphicsconv identconvid  ident* skip* stormsdone yearsdone

            end

            %% Conventional Obs Composite - all and by year, if multiple years present
            if identconv==1
                if size(unique(yearsdone,'rows'),1)==1
                    convyear=size(unique(yearsdone,'rows'),1);
                else
                    convyear=size(unique(yearsdone,'rows'),1)+1;
                end
                for yrlp=1:convyear
                   if yrlp==1
                   else
                       yrlpa=unique(yearsdone,'rows');
                       curyear=yrlpa(yrlp-1,:);
                       curyearcut=curyear(3:4);
                   end    

                    for j=1:size(identexp,1) 
                        if yrlp==1
                            identdr=dir([identout,'RESULTS/',identfold,'VERIFICATION/OBS/*.mat']);
                        else
                            identdr=dir([identout,'RESULTS/',identfold,'VERIFICATION/OBS/*',curyearcut,'*.mat']);
                        end
                        identdr={identdr.name};
                        compvalues=[];
                        compdenmap=[];
                        compdenmap_t=[];
                        compinner=zeros(1,size(identexp,1));
                        compgale=zeros(1,size(identexp,1));
                        compouter=zeros(1,size(identexp,1));
                        compinner_t=zeros(1,size(identexp,1));
                        compgale_t=zeros(1,size(identexp,1));
                        compouter_t=zeros(1,size(identexp,1));
                        for i=1:size(identdr,2)
                            load([identout,'RESULTS/',identfold,'VERIFICATION/OBS/',identdr{i}])
                            identdroplist{:}
                            presum=valuescomp{j};
                            presum=sum(presum,3);
                            compvalues=cat(1,compvalues,presum);

                            if size(identconvtype,2)>1
                                compdenmap_t=cat(1,compdenmap_t,denmapcomp_t{j});
                                compinner_t=identdroplist{5}+compinner_t;
                                compgale_t=identdroplist{6}+compgale_t;
                                compouter_t=identdroplist{7}+compouter_t;
                            end

                            if sum(sum(denmapcomp{j}))==0
                            else
                                compdenmap=cat(3,compdenmap,denmapcomp{j});
                            end
                            compinner=identdroplist{2}+compinner;
                            compgale=identdroplist{3}+compgale;
                            compouter=identdroplist{4}+compouter;
                        end

                        % Histogram Composite Graphic
                        spPos=[0.11 0.13+.05 0.75 0.75-.05]; % arrange plots the same
                        set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                        hfig=figure;
                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                        ax1=subplot(3,4,[1:8]);
                        set(gca,'plotboxaspectratio',[1 1 1])
                        box on
                        set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                        hold on
                        if isempty(compvalues)==1
                            if size(identconvtype,2)>1 % there are subtypes to this conventional observation!
                                for sot=1:size(identconvtype,2)
                                     l(sot)=plot(0,5000,'.','markerfacecolor',identconvcolors(sot,:),'markeredgecolor',identconvcolors(sot,:));
                                     lsz(sot)=0;
                                end
                            else % there are no subtypes to this conventional bservation!
                                l(1)=plot(0,5000,'.k');
                            end
                        else
                            if size(identconvtype,2)>1 % there are subtypes to this conventional observation!
                                for sot=1:size(identconvtype,2)
                                    [counts,centers]=hist(compvalues((compvalues(:,9)==identconvtype(sot)),5),[0:5:2000]);
                                    l(sot)=plot(centers,counts,'-','color',identconvcolors(sot,:),'linewidth',2);            
                                    lsz(sot)=size(compvalues((compvalues(:,9)==identconvtype(sot)),1),1);
                                end
                            else % there are no subtypes to this conventional observation!
                                   [counts,centers]=hist(compvalues(:,5),[0:5:2000]);
                                    l(1)=plot(centers,counts,'-k','linewidth',2);            
                            end
                        end
                        xlim([-.5 2000])
                        if yrlp==1 && j==1
                            ymaxallbasin=round(max(counts)/100)*100+50;
                        end
                        ylim([0 ymaxallbasin])
                        if size(identconvtype,2)>1
                                for sot=1:size(identconvtype,2)
                                    identlegendconv(sot)={[identconvlegend{sot} ' (',num2str(lsz(sot)),')']};
                                end
                                ll=legend(l,identlegendconv,'location','northeast');
                        else
                                ll=legend(l,['Assimilated Observations'],'location','northeast');
                        end
                        ll.FontSize=10;
                        ylabel('Number of Assimilated Observations','fontsize',20)                                   
                        xlabel('Radius (km)','fontsize',20)                                   
                        set(gca,'fontsize',20)
                        grid on
                        set(gca,'xtick',0:250:2000)
                        set(gcf, 'InvertHardcopy', 'off')
                        set(gcf,'Units','inches');
                        screenposition = get(gcf,'Position');
                        set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                        set(gcf, 'InvertHardcopy', 'off')    
                        for tmpdr=1:size(identdr,2)
                            tmp=identdr{tmpdr};
                            tmpyr1=str2num(tmp(end-10:end-9));
                            if tmpyr1<80
                                tmpyr(tmpdr)=tmpyr1+2000;
                            else
                                tmpyr(tmpdr)=tmpyr1+1900;
                            end
                        end
                        tmpuv = unique(tmpyr);
                        tmpn  = histc(tmpyr,tmpuv); 
                        tmpphrase='';
                        for tmpdr=1:length(tmpn)
                            if tmpdr==length(tmpn)
                                tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),')'];
                            else
                                tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),') $\mid$ '];
                            end
                        end    
                        text(0,1.035,['\textbf{STORMS: ',tmpphrase,'$\mid$ N=',num2str(size(compvalues,1)),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                        text(0,1.07,['\textbf{Assimilated ',identconvid,' Observations}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                        text(1,1.035,['\textbf{',identexpshort{j},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(j,:),'units','normalized');                    
                        ax=gca;
                        set(gca,'Color',[.9 .9 .9])
                        set(ax, 'Layer', 'top')
                        ax.LineWidth=1; 
                        set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                        f = getframe(hfig);
                        if yrlp==1
                            imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/OBS/conv_histcomp_',identexpshort{j},'.png'],'png');
                        else
                            imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/OBS/conv_histcomp_',identexpshort{j},'_',curyear,'.png'],'png');
                        end
                        close all    

                        % Storm-Relative Composite Plan-View Graphic
                        spPos=[0.11 0.13+.05 0.75 0.75-.05]; % arrange plots the same
                        set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                        hfig=figure;
                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                        ax2=subplot(3,4,[1:8]);
                        set(gca,'plotboxaspectratio',[1 1 1])
                        ax2=gca;
                        set(gca,'Color',[.9 .9 .9])
                        box on
                        set(ax2, 'Layer', 'top')
                        ax2.LineWidth=1; 
                        set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                        set(gca,'xtick',[])
                        set(gca,'ytick',[])
                        hold on
                        ax1=subplot(3,4,[1:8],polaraxes);
            %             th = linspace(0,2*pi,75);
            %             r = 75;
            %             polarplot(th,r+zeros(size(th)),'Color',[.7 .7 .7],'linewidth',1)
                         hold on
            %             th = linspace(0,2*pi,75);
            %             r = 250;
            %             polarplot(th,r+zeros(size(th)),'Color',[.7 .7 .7],'linewidth',1)
                        if isempty(compvalues)==1
                            if size(identconvtype,2)>1 % there are subtypes to this conventional observation!
                                for sot=1:size(identconvtype,2)
                                     l(sot)=polarplot(0,5000,'.','markerfacecolor',identconvcolors(sot,:),'markeredgecolor',identconvcolors(sot,:));
                                     lsz(sot)=0;
                                end
                            else % there are no subtypes to this conventional bservation!
                                l(1)=polarplot(0,5000,'.k');
                            end
                        else
                            if size(identconvtype,2)>1 % there are subtypes to this conventional observation!
                                for sot=1:size(identconvtype,2)
                                    l(sot)=polarplot(compvalues((compvalues(:,9)==identconvtype(sot)),6)*pi/180,compvalues((compvalues(:,9)==identconvtype(sot)),5),'.','color',identconvcolors(sot,:));
                                    lsz(sot)=size(compvalues((compvalues(:,9)==identconvtype(sot)),1),1);
                                end
                            else % there are no subtypes to this conventional bservation!
                                    l(1)=polarplot(compvalues(:,6)*pi/180,compvalues(:,5),'.k');
                            end
                        end
                        if size(identconvtype,2)>1
                                for sot=1:size(identconvtype,2)
                                    identlegendconv(sot)={[identconvlegend{sot} ' (',num2str(lsz(sot)),')']};
                                end
                                l=legend(l,identlegendconv,'location','northeast');
                        else
                                l=legend(l,['Assimilated Observations'],'location','northeast');
                        end
                        l.FontSize=10;
                        ax1.ThetaDir = 'clockwise';
                        ax1.ThetaZeroLocation = 'top';
                        ax1.RLim=[0 1600];
                        ax1.ThetaTick = [];
                        rticks([75 250 500 1000 1500])
                        rticklabels({})
                        thetaticklabels({}) 
                        ax1.GridLineStyle = '--';
                        ax1.ThetaColor=[.9 .9 .9];
                        ax1.GridAlpha = 1;
                        ax1.GridColor=[.7 .7 .7];
                        set(gcf, 'InvertHardcopy', 'off')
                        set(gcf,'Units','inches');
                        screenposition = get(gcf,'Position');
                        set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                        set(gcf, 'InvertHardcopy', 'off')    
                        text(.5,.484,'75 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])
                        text(.5,.426,'250 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])
                        text(.5,.347,'500 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])
                        text(.5,.19,'1000 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])
                        text(.5,.034,'1500 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])                    
                        for tmpdr=1:size(identdr,2)
                            tmp=identdr{tmpdr};
                            tmpyr1=str2num(tmp(end-10:end-9));
                            if tmpyr1<80
                                tmpyr(tmpdr)=tmpyr1+2000;
                            else
                                tmpyr(tmpdr)=tmpyr1+1900;
                            end
                        end
                        tmpuv = unique(tmpyr);
                        tmpn  = histc(tmpyr,tmpuv); 
                        tmpphrase='';
                        for tmpdr=1:length(tmpn)
                            if tmpdr==length(tmpn)
                                tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),')'];
                            else
                                tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),') $\mid$ '];
                            end
                        end    
                        text(-.015,1.035,['\textbf{STORMS: ',tmpphrase,'$\mid$ N=',num2str(size(compvalues,1)),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                        text(-.015,1.07,['\textbf{Assimilated ',identconvid,' Observations}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                        text(1.015,1.035,['\textbf{',identexpshort{j},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(j,:),'units','normalized');                    
                        ax=gca;
                        set(gca,'Color',[.9 .9 .9])
                        set(ax, 'Layer', 'top')
                        ax.LineWidth=1; 
                        set(gca,'position',[spPos(1)+.035 spPos(2)+.015 spPos(3) spPos(4)-.02])
                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                        f = getframe(hfig);
                        if yrlp==1
                            imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/OBS/conv_plancomp_',identexpshort{j},'.png'],'png');
                        else
                            imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/OBS/conv_plancomp_',identexpshort{j},'_',curyear,'.png'],'png');
                        end
                        close all          

                        %% Denmap for Subtypes  
                        if size(identconvtype,2)>1
                            for sot=1:size(identconvtype,2)
                                clear tmp1_den_tt
                                if isempty(compdenmap_t)==1
                                    tmp1_den_tt=zeros(11,3);
                                else
                                    for soti=1:size(compdenmap_t,1)
                                        tmp1_den_tt(:,:,soti)=compdenmap_t{soti,sot};
                                    end
                                end 

                                set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                                hfig=figure;
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                                ax1=subplot(3,4,[1:8]);  
                                identvals=sum(sum(tmp1_den_tt,1),3);
                                imagesc(sum(tmp1_den_tt,3))
                                xlabel('','fontsize',20)
                                ylabel('Pressure (hPa)','fontsize',20)                                   
                                set(gca,'fontsize',20)
                                set(gca,'xtick',1:3)
                                set(gca,'xticklabel',{'<75 km','75-250 km','>250 km'});
                                set(gca,'ytick',0.5:1:12)
                                set(gca,'yticklabel',{'0','100','200','300','400','500','600','700','800','900','1000','1100'});
                                colorbar
                                caxis([0 5000])
                                colormap(flipud(gray(25)))
                                set(gca, 'YGrid', 'on', 'XGrid', 'off')
                                hold on
                                plot(repmat(1.5,1,13),0:12,'k')
                                plot(repmat(2.5,1,13),0:12,'k')
                                set(gca,'plotboxaspectratio',[1 1 1])
                                set(gcf, 'InvertHardcopy', 'off')
                                set(gcf,'Units','inches');
                                screenposition = get(gcf,'Position');
                                set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                                set(gcf, 'InvertHardcopy', 'off')
                                tmpsum=sum(identvals);                
                                text(0,1.03,['\textbf{STORMS: ',tmpphrase,'$\mid$ N=',num2str(sum(identvals(:))),'/',num2str(sum(compdenmap(:))),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                text(0,1.065,['\textbf{Assimilated ',identconvid,' Observations}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                                text(1,1.03,['\textbf{',identexpshort{j},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(j,:),'units','normalized');                    
                                tmpsum=sum(tmp1_den_tt,3);                
                                for i=1:3
                                    for jj=1:11
                                        if tmpsum(jj,i)>=4000
                                        text(i,jj, num2str(tmpsum(jj,i)), 'color','w','HorizontalAlignment', 'Center','fontsize',16)
                                        else
                                        text(i,jj, num2str(tmpsum(jj,i)), 'HorizontalAlignment', 'Center','fontsize',16)
                                        end
                                    end
                                end        
                                text(0,-.065,['(Tot. #)'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');        
                                text(.168,-.065,['(',num2str(identvals(1)),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');
                                text(.5,-.065,['(',num2str(identvals(2)),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');
                                text(.832,-.065,['(',num2str(identvals(3)),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');        
                                text(.5,-.1,['Distance from Storm Center'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',22,'interpreter','tex','color','k','units','normalized');
                                ax=gca;
                                box on
                                set(ax, 'Layer', 'top')
                                ax.LineWidth=1; 
                                set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                                set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                                f = getframe(hfig);
                                if yrlp==1
                                    imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/OBS/conv_azcomp_',identexpshort{j},'_type',num2str(identconvtype(sot)),'.png'],'png');
                                else
                                    imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/OBS/conv_azcomp_',identexpshort{j},'_',curyear,'_type',num2str(identconvtype(sot)),'.png'],'png');
                                end
                                close all   




                            end
                        end

                        %% Density Map                
                        set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                        hfig=figure;
                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                        ax1=subplot(3,4,[1:8]);  
                        if isempty(compdenmap)==1
                            compdenmap=zeros(11,3);
                        end               
                        identvals=sum(sum(compdenmap,1),3);
                        imagesc(sum(compdenmap,3))
                        xlabel('','fontsize',20)
                        ylabel('Pressure (hPa)','fontsize',20)                                   
                        set(gca,'fontsize',20)
                        set(gca,'xtick',1:3)
                        set(gca,'xticklabel',{'<75 km','75-250 km','>250 km'});
                        set(gca,'ytick',0.5:1:12)
                        set(gca,'yticklabel',{'0','100','200','300','400','500','600','700','800','900','1000','1100'});
                        colorbar
                        caxis([0 5000])
                        colormap(flipud(gray(25)))
                        set(gca, 'YGrid', 'on', 'XGrid', 'off')
                        hold on
                        plot(repmat(1.5,1,13),0:12,'k')
                        plot(repmat(2.5,1,13),0:12,'k')
                        set(gca,'plotboxaspectratio',[1 1 1])
                        set(gcf, 'InvertHardcopy', 'off')
                        set(gcf,'Units','inches');
                        screenposition = get(gcf,'Position');
                        set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                        set(gcf, 'InvertHardcopy', 'off')
                        tmpsum=sum(identvals);                
                        text(0,1.03,['\textbf{STORMS: ',tmpphrase,'$\mid$ N=',num2str(tmpsum),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                        text(0,1.065,['\textbf{Assimilated ',identconvid,' Observations}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                        text(1,1.03,['\textbf{',identexpshort{j},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(j,:),'units','normalized');                    
                        tmpsum=sum(compdenmap,3);                            
                        for i=1:3
                            for jj=1:11
                                if tmpsum(jj,i)>=4000
                                text(i,jj, num2str(tmpsum(jj,i)), 'color','w','HorizontalAlignment', 'Center','fontsize',16)
                                else
                                text(i,jj, num2str(tmpsum(jj,i)), 'HorizontalAlignment', 'Center','fontsize',16)
                                end
                            end
                        end        
                        text(0,-.065,['(Tot. #)'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');        
                        text(.168,-.065,['(',num2str(identvals(1)),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');
                        text(.5,-.065,['(',num2str(identvals(2)),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');
                        text(.832,-.065,['(',num2str(identvals(3)),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');        
                        text(.5,-.1,['Distance from Storm Center'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',22,'interpreter','tex','color','k','units','normalized');
                        ax=gca;
                        box on
                        set(ax, 'Layer', 'top')
                        ax.LineWidth=1; 
                        set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                        f = getframe(hfig);
                        if yrlp==1
                            imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/OBS/conv_azcomp_',identexpshort{j},'.png'],'png');
                        else
                            imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/OBS/conv_azcomp_',identexpshort{j},'_',curyear,'.png'],'png');
                        end
                        close all   

                    end

                    clearvars -except identbasinmodel identsatobs identgraphicssat identsatid identsatname identindivch identchannel identindivstorm identcomposite identstormsdone convyear ymaxallbasin identconvtype identconvcolors identconvlegend identns* identnewsub identgraphicsbycycle identgraphicsconv yrlp identconvid  ident* skip* stormsdone yearsdone

                end
            end

            %% Satellite Obs Composite - all and by year, if multiple years present
            if identsatobs==1
                if size(unique(yearsdone,'rows'),1)==1
                    convyear=size(unique(yearsdone,'rows'),1);
                else
                    convyear=size(unique(yearsdone,'rows'),1)+1;
                end
                for yrlp=1:convyear
                   if yrlp==1
                   else
                       yrlpa=unique(yearsdone,'rows');
                       curyear=yrlpa(yrlp-1,:);
                       curyearcut=curyear(3:4);
                   end    

                    for j=1:size(identexp,1) 
                        if yrlp==1
                            identdr=dir([identout,'RESULTS/',identfold,'VERIFICATION/OBS/*.mat']);
                        else
                            identdr=dir([identout,'RESULTS/',identfold,'VERIFICATION/OBS/*',curyearcut,'*.mat']);
                        end
                        identdr={identdr.name};
                        compvalues=[];
                        compdenmap=[];
                        compdenmap_t=[];
                        compinner=zeros(1,size(identexp,1));
                        compgale=zeros(1,size(identexp,1));
                        compouter=zeros(1,size(identexp,1));
                        for i=1:size(identdr,2)
                            load([identout,'RESULTS/',identfold,'VERIFICATION/OBS/',identdr{i}])
                            identdroplist{:}
                            presum=valuescomp{j}; % stopped here - what is this supposed to represent? worked for dropsondes not for sat
                            presum=sum(presum,3);
                            compvalues=cat(1,compvalues,presum);
                            if sum(sum(denmapcomp{j}))==0
                            else
                                compdenmap=cat(3,compdenmap,denmapcomp{j});
                            end
                            compinner=identdroplist{2}+compinner;
                            compgale=identdroplist{3}+compgale;
                            compouter=identdroplist{4}+compouter;
                        end

                        % Histogram Composite Graphic
                        spPos=[0.11 0.13+.05 0.75 0.75-.05]; % arrange plots the same
                        set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                        hfig=figure;
                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                        ax1=subplot(3,4,[1:8]);
                        set(gca,'plotboxaspectratio',[1 1 1])
                        box on
                        set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                        hold on
                        if isempty(compvalues)==1
                                l(1)=plot(0,5000,'.k');
                        else
                                   [counts,centers]=hist(compvalues(:,5),[0:5:2000]);
                                    l(1)=plot(centers,counts,'-k','linewidth',2);   
                        end
                        xlim([-.5 2000])
                        if yrlp==1 && j==1
                            ymaxallbasin=round(max(counts)/100)*100+50;
                        end
                        ylim([0 ymaxallbasin])
                        ll=legend(l,['Potential Profiles'],'location','northeast');
                        ll.FontSize=10;
                        ylabel('Number of Potential Profiles','fontsize',20)                                   
                        xlabel('Radius (km)','fontsize',20)                                   
                        set(gca,'fontsize',20)
                        grid on
                        set(gca,'xtick',0:250:2000)
                        set(gcf, 'InvertHardcopy', 'off')
                        set(gcf,'Units','inches');
                        screenposition = get(gcf,'Position');
                        set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                        set(gcf, 'InvertHardcopy', 'off')    
                        for tmpdr=1:size(identdr,2)
                            tmp=identdr{tmpdr};
                            tmpyr1=str2num(tmp(end-9:end-8));
                            if tmpyr1<80
                                tmpyr(tmpdr)=tmpyr1+2000;
                            else
                                tmpyr(tmpdr)=tmpyr1+1900;
                            end
                        end
                        tmpuv = unique(tmpyr);
                        tmpn  = histc(tmpyr,tmpuv); 
                        tmpphrase='';
                        for tmpdr=1:length(tmpn)
                            if tmpdr==length(tmpn)
                                tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),')'];
                            else
                                tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),') $\mid$ '];
                            end
                        end    
                        text(0,1.035,['\textbf{STORMS: ',tmpphrase,'$\mid$ PP=',num2str(size(compvalues,1)),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                        text(0,1.07,['\textbf{Potential ',identsatname,' Profiles}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                        text(1,1.035,['\textbf{',identexpshort{j},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(j,:),'units','normalized');                    
                        ax=gca;
                        set(gca,'Color',[.9 .9 .9])
                        set(ax, 'Layer', 'top')
                        ax.LineWidth=1; 
                        set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                        f = getframe(hfig);
                        if yrlp==1
                            imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/OBS/sat_histcomp_',identexpshort{j},'.png'],'png');
                        else
                            imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/OBS/sat_histcomp_',identexpshort{j},'_',curyear,'.png'],'png');
                        end
                        close all    

                        % Storm-Relative Composite Plan-View Graphic
                        spPos=[0.11 0.13+.05 0.75 0.75-.05]; % arrange plots the same
                        set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                        hfig=figure;
                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                        ax2=subplot(3,4,[1:8]);
                        set(gca,'plotboxaspectratio',[1 1 1])
                        ax2=gca;
                        set(gca,'Color',[.9 .9 .9])
                        box on
                        set(ax2, 'Layer', 'top')
                        ax2.LineWidth=1; 
                        set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                        set(gca,'xtick',[])
                        set(gca,'ytick',[])
                        hold on
                        ax1=subplot(3,4,[1:8],polaraxes);
            %             th = linspace(0,2*pi,75);
            %             r = 75;
            %             polarplot(th,r+zeros(size(th)),'Color',[.7 .7 .7],'linewidth',1)
                         hold on
            %             th = linspace(0,2*pi,75);
            %             r = 250;
            %             polarplot(th,r+zeros(size(th)),'Color',[.7 .7 .7],'linewidth',1)
                        if isempty(compvalues)==1
                                l(1)=polarplot(0,5000,'.k');
                        else
                                l(1)=polarplot(compvalues(:,6)*pi/180,compvalues(:,5),'.k');
                        end
                        l=legend(l,['Potential Profiles'],'location','northeast');
                        l.FontSize=10;
                        ax1.ThetaDir = 'clockwise';
                        ax1.ThetaZeroLocation = 'top';
                        ax1.RLim=[0 1600];
                        ax1.ThetaTick = [];
                        rticks([75 250 500 1000 1500])
                        rticklabels({})
                        thetaticklabels({}) 
                        ax1.GridLineStyle = '--';
                        ax1.ThetaColor=[.9 .9 .9];
                        ax1.GridAlpha = 1;
                        ax1.GridColor=[.7 .7 .7];
                        set(gcf, 'InvertHardcopy', 'off')
                        set(gcf,'Units','inches');
                        screenposition = get(gcf,'Position');
                        set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                        set(gcf, 'InvertHardcopy', 'off')    
                        text(.5,.484,'75 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])
                        text(.5,.426,'250 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])
                        text(.5,.347,'500 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])
                        text(.5,.19,'1000 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])
                        text(.5,.034,'1500 km','HorizontalAlignment','center','VerticalAlignment','top','fontsize',10,'units','normalized','color',[.5 .5 .5])                    
                        for tmpdr=1:size(identdr,2)
                            tmp=identdr{tmpdr};
                            tmpyr1=str2num(tmp(end-9:end-8));
                            if tmpyr1<80
                                tmpyr(tmpdr)=tmpyr1+2000;
                            else
                                tmpyr(tmpdr)=tmpyr1+1900;
                            end
                        end
                        tmpuv = unique(tmpyr);
                        tmpn  = histc(tmpyr,tmpuv); 
                        tmpphrase='';
                        for tmpdr=1:length(tmpn)
                            if tmpdr==length(tmpn)
                                tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),')'];
                            else
                                tmpphrase=[tmpphrase, num2str(tmpn(tmpdr)),'(',num2str(tmpuv(tmpdr)),') $\mid$ '];
                            end
                        end    
                        text(-.015,1.035,['\textbf{STORMS: ',tmpphrase,'$\mid$ PP=',num2str(size(compvalues,1)),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                        text(-.015,1.065,['\textbf{Potential ',identsatname,' Profiles}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                        text(1.015,1.035,['\textbf{',identexpshort{j},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(j,:),'units','normalized');                    
                        ax=gca;
                        set(gca,'Color',[.9 .9 .9])
                        set(ax, 'Layer', 'top')
                        ax.LineWidth=1; 
                        set(gca,'position',[spPos(1)+.035 spPos(2)+.015 spPos(3) spPos(4)-.02])
                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                        f = getframe(hfig);
                        if yrlp==1
                            imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/OBS/sat_plancomp_',identexpshort{j},'.png'],'png');
                        else
                            imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/OBS/sat_plancomp_',identexpshort{j},'_',curyear,'.png'],'png');
                        end
                        close all          

                        %% Density Map                
                        set(0,'defaultfigurecolor',[1 1 1]) % figure background color
                        hfig=figure;
                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, 1, 0.96]); % maximize figure window
                        ax1=subplot(3,4,[1:8]);  
                        if isempty(compdenmap)==1
                            compdenmap=zeros(11,3);
                        end               
                        identvals=sum(sum(compdenmap,1),3);
                        imagesc(sum(compdenmap,3))
                        xlabel('','fontsize',20)
                        ylabel('Pressure (hPa)','fontsize',20)                                   
                        set(gca,'fontsize',20)
                        set(gca,'xtick',1:3)
                        set(gca,'xticklabel',{'<75 km','75-250 km','>250 km'});
                        set(gca,'ytick',0.5:1:12)
                        set(gca,'yticklabel',{'0','100','200','300','400','500','600','700','800','900','1000','1100'});
                        colorbar
                        caxis([0 5000])
                        colormap(flipud(gray(25)))
                        set(gca, 'YGrid', 'on', 'XGrid', 'off')
                        hold on
                        plot(repmat(1.5,1,13),0:12,'k')
                        plot(repmat(2.5,1,13),0:12,'k')
                        set(gca,'plotboxaspectratio',[1 1 1])
                        set(gcf, 'InvertHardcopy', 'off')
                        set(gcf,'Units','inches');
                        screenposition = get(gcf,'Position');
                        set(gcf,'PaperPosition',[0 0 screenposition(4) screenposition(4)],'PaperSize',[screenposition(4) screenposition(4)]);
                        set(gcf, 'InvertHardcopy', 'off')
                        tmpsum=sum(identvals);                
                        text(0,1.03,['\textbf{STORMS: ',tmpphrase,'$\mid$ PP=',num2str(tmpsum),'}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                        text(0,1.065,['\textbf{Potential ',identsatname,' Profiles}'],'HorizontalAlignment','left','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','units','normalized')
                        text(1,1.03,['\textbf{',identexpshort{j},'}'],'HorizontalAlignment','right','VerticalAlignment','top','fontsize',14,'fontweight','bold','interpreter','latex','color',identexpcolors(j,:),'units','normalized');                    
                        tmpsum=sum(compdenmap,3);                            
                        for i=1:3
                            for jj=1:11
                                if tmpsum(jj,i)>=4000
                                text(i,jj, num2str(tmpsum(jj,i)), 'color','w','HorizontalAlignment', 'Center','fontsize',16)
                                else
                                text(i,jj, num2str(tmpsum(jj,i)), 'HorizontalAlignment', 'Center','fontsize',16)
                                end
                            end
                        end        
                        text(0,-.065,['(Tot. #)'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');        
                        text(.168,-.065,['(',num2str(identvals(1)),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');
                        text(.5,-.065,['(',num2str(identvals(2)),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');
                        text(.832,-.065,['(',num2str(identvals(3)),')'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',14,'interpreter','tex','color','k','units','normalized');        
                        text(.5,-.1,['Distance from Storm Center'],'HorizontalAlignment','center','VerticalAlignment','top','fontsize',22,'interpreter','tex','color','k','units','normalized');
                        ax=gca;
                        box on
                        set(ax, 'Layer', 'top')
                        ax.LineWidth=1; 
                        set(gca,'position',[spPos(1)+.035 spPos(2) spPos(3) spPos(4)])
                        set(gcf, 'Units', 'Normalized', 'OuterPosition', [0, 0.04, .72, 0.96]); % maximize figure window
                        f = getframe(hfig);
                        if yrlp==1
                            imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/OBS/sat_azcomp_',identexpshort{j},'.png'],'png');
                        else
                            imwrite(f.cdata,[identout,'RESULTS/',identfold,'/VERIFICATION/OBS/sat_azcomp_',identexpshort{j},'_',curyear,'.png'],'png');
                        end
                        close all   

                    end

                    clearvars -except identbasinmodel identsatobs identgraphicssat identsatid identsatname identindivch identchannel identindivstorm identcomposite identstormsdone convyear ymaxallbasin identconvtype identconvcolors identconvlegend identns* identnewsub identgraphicsbycycle identgraphicsconv yrlp identconvid  ident* skip* stormsdone yearsdone

                end
            end  
        end
    end
end
